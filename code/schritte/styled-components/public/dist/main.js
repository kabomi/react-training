!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/dist",n(n.s=132)}([function(e,t,n){var r=n(2),o=n(8),i=n(15),a=n(12),u=n(18),l=function(e,t,n){var c,s,f,p,d=e&l.F,h=e&l.G,v=e&l.S,m=e&l.P,y=e&l.B,g=h?r:v?r[t]||(r[t]={}):(r[t]||{}).prototype,b=h?o:o[t]||(o[t]={}),w=b.prototype||(b.prototype={});for(c in h&&(n=t),n)f=((s=!d&&g&&void 0!==g[c])?g:n)[c],p=y&&s?u(f,r):m&&"function"==typeof f?u(Function.call,f):f,g&&a(g,c,f,e&l.U),b[c]!=f&&i(b,c,p),m&&w[c]!=f&&(w[c]=f)};r.core=o,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t,n){"use strict";e.exports=n(319)},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(5);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(49)("wks"),o=n(30),i=n(2).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){var r=n(20),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t){var n=e.exports={version:"2.6.6"};"number"==typeof __e&&(__e=n)},function(e,t,n){e.exports=!n(3)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(4),o=n(93),i=n(27),a=Object.defineProperty;t.f=n(9)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(25);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(2),o=n(15),i=n(14),a=n(30)("src"),u=n(137),l=(""+u).split("toString");n(8).inspectSource=function(e){return u.call(e)},(e.exports=function(e,t,n,u){var c="function"==typeof n;c&&(i(n,"name")||o(n,"name",t)),e[t]!==n&&(c&&(i(n,a)||o(n,a,e[t]?""+e[t]:l.join(String(t)))),e===r?e[t]=n:u?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||u.call(this)})},function(e,t,n){var r=n(0),o=n(3),i=n(25),a=/"/g,u=function(e,t,n,r){var o=String(i(e)),u="<"+t;return""!==n&&(u+=" "+n+'="'+String(r).replace(a,"&quot;")+'"'),u+">"+o+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(u),r(r.P+r.F*o(function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}),"String",n)}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(10),o=n(29);e.exports=n(9)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(45),o=n(25);e.exports=function(e){return r(o(e))}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t){return!!e&&r(function(){t?e.call(null,function(){},1):e.call(null)})}},function(e,t,n){var r=n(19);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(46),o=n(29),i=n(16),a=n(27),u=n(14),l=n(93),c=Object.getOwnPropertyDescriptor;t.f=n(9)?c:function(e,t){if(e=i(e),t=a(t,!0),l)try{return c(e,t)}catch(e){}if(u(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(0),o=n(8),i=n(3);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",a)}},function(e,t,n){var r=n(18),o=n(45),i=n(11),a=n(7),u=n(109);e.exports=function(e,t){var n=1==e,l=2==e,c=3==e,s=4==e,f=6==e,p=5==e||f,d=t||u;return function(t,u,h){for(var v,m,y=i(t),g=o(y),b=r(u,h,3),w=a(g.length),x=0,S=n?d(t,w):l?d(t,0):void 0;w>x;x++)if((p||x in g)&&(m=b(v=g[x],x,y),e))if(n)S[x]=m;else if(m)switch(e){case 3:return!0;case 5:return v;case 6:return x;case 2:S.push(v)}else if(s)return!1;return f?-1:c||s?s:S}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){"use strict";if(n(9)){var r=n(31),o=n(2),i=n(3),a=n(0),u=n(60),l=n(86),c=n(18),s=n(43),f=n(29),p=n(15),d=n(44),h=n(20),v=n(7),m=n(120),y=n(33),g=n(27),b=n(14),w=n(47),x=n(5),S=n(11),k=n(78),E=n(34),_=n(36),T=n(35).f,C=n(80),P=n(30),O=n(6),A=n(23),N=n(50),I=n(48),M=n(82),j=n(41),R=n(53),F=n(42),L=n(81),D=n(111),U=n(10),z=n(21),W=U.f,B=z.f,V=o.RangeError,$=o.TypeError,H=o.Uint8Array,G=Array.prototype,q=l.ArrayBuffer,Y=l.DataView,Q=A(0),K=A(2),X=A(3),J=A(4),Z=A(5),ee=A(6),te=N(!0),ne=N(!1),re=M.values,oe=M.keys,ie=M.entries,ae=G.lastIndexOf,ue=G.reduce,le=G.reduceRight,ce=G.join,se=G.sort,fe=G.slice,pe=G.toString,de=G.toLocaleString,he=O("iterator"),ve=O("toStringTag"),me=P("typed_constructor"),ye=P("def_constructor"),ge=u.CONSTR,be=u.TYPED,we=u.VIEW,xe=A(1,function(e,t){return Te(I(e,e[ye]),t)}),Se=i(function(){return 1===new H(new Uint16Array([1]).buffer)[0]}),ke=!!H&&!!H.prototype.set&&i(function(){new H(1).set({})}),Ee=function(e,t){var n=h(e);if(n<0||n%t)throw V("Wrong offset!");return n},_e=function(e){if(x(e)&&be in e)return e;throw $(e+" is not a typed array!")},Te=function(e,t){if(!(x(e)&&me in e))throw $("It is not a typed array constructor!");return new e(t)},Ce=function(e,t){return Pe(I(e,e[ye]),t)},Pe=function(e,t){for(var n=0,r=t.length,o=Te(e,r);r>n;)o[n]=t[n++];return o},Oe=function(e,t,n){W(e,t,{get:function(){return this._d[n]}})},Ae=function(e){var t,n,r,o,i,a,u=S(e),l=arguments.length,s=l>1?arguments[1]:void 0,f=void 0!==s,p=C(u);if(null!=p&&!k(p)){for(a=p.call(u),r=[],t=0;!(i=a.next()).done;t++)r.push(i.value);u=r}for(f&&l>2&&(s=c(s,arguments[2],2)),t=0,n=v(u.length),o=Te(this,n);n>t;t++)o[t]=f?s(u[t],t):u[t];return o},Ne=function(){for(var e=0,t=arguments.length,n=Te(this,t);t>e;)n[e]=arguments[e++];return n},Ie=!!H&&i(function(){de.call(new H(1))}),Me=function(){return de.apply(Ie?fe.call(_e(this)):_e(this),arguments)},je={copyWithin:function(e,t){return D.call(_e(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return J(_e(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return L.apply(_e(this),arguments)},filter:function(e){return Ce(this,K(_e(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Z(_e(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(_e(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Q(_e(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ne(_e(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(_e(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ce.apply(_e(this),arguments)},lastIndexOf:function(e){return ae.apply(_e(this),arguments)},map:function(e){return xe(_e(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return ue.apply(_e(this),arguments)},reduceRight:function(e){return le.apply(_e(this),arguments)},reverse:function(){for(var e,t=_e(this).length,n=Math.floor(t/2),r=0;r<n;)e=this[r],this[r++]=this[--t],this[t]=e;return this},some:function(e){return X(_e(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return se.call(_e(this),e)},subarray:function(e,t){var n=_e(this),r=n.length,o=y(e,r);return new(I(n,n[ye]))(n.buffer,n.byteOffset+o*n.BYTES_PER_ELEMENT,v((void 0===t?r:y(t,r))-o))}},Re=function(e,t){return Ce(this,fe.call(_e(this),e,t))},Fe=function(e){_e(this);var t=Ee(arguments[1],1),n=this.length,r=S(e),o=v(r.length),i=0;if(o+t>n)throw V("Wrong length!");for(;i<o;)this[t+i]=r[i++]},Le={entries:function(){return ie.call(_e(this))},keys:function(){return oe.call(_e(this))},values:function(){return re.call(_e(this))}},De=function(e,t){return x(e)&&e[be]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Ue=function(e,t){return De(e,t=g(t,!0))?f(2,e[t]):B(e,t)},ze=function(e,t,n){return!(De(e,t=g(t,!0))&&x(n)&&b(n,"value"))||b(n,"get")||b(n,"set")||n.configurable||b(n,"writable")&&!n.writable||b(n,"enumerable")&&!n.enumerable?W(e,t,n):(e[t]=n.value,e)};ge||(z.f=Ue,U.f=ze),a(a.S+a.F*!ge,"Object",{getOwnPropertyDescriptor:Ue,defineProperty:ze}),i(function(){pe.call({})})&&(pe=de=function(){return ce.call(this)});var We=d({},je);d(We,Le),p(We,he,Le.values),d(We,{slice:Re,set:Fe,constructor:function(){},toString:pe,toLocaleString:Me}),Oe(We,"buffer","b"),Oe(We,"byteOffset","o"),Oe(We,"byteLength","l"),Oe(We,"length","e"),W(We,ve,{get:function(){return this[be]}}),e.exports=function(e,t,n,l){var c=e+((l=!!l)?"Clamped":"")+"Array",f="get"+e,d="set"+e,h=o[c],y=h||{},g=h&&_(h),b=!h||!u.ABV,S={},k=h&&h.prototype,C=function(e,n){W(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[f](n*t+r.o,Se)}(this,n)},set:function(e){return function(e,n,r){var o=e._d;l&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),o.v[d](n*t+o.o,r,Se)}(this,n,e)},enumerable:!0})};b?(h=n(function(e,n,r,o){s(e,h,c,"_d");var i,a,u,l,f=0,d=0;if(x(n)){if(!(n instanceof q||"ArrayBuffer"==(l=w(n))||"SharedArrayBuffer"==l))return be in n?Pe(h,n):Ae.call(h,n);i=n,d=Ee(r,t);var y=n.byteLength;if(void 0===o){if(y%t)throw V("Wrong length!");if((a=y-d)<0)throw V("Wrong length!")}else if((a=v(o)*t)+d>y)throw V("Wrong length!");u=a/t}else u=m(n),i=new q(a=u*t);for(p(e,"_d",{b:i,o:d,l:a,e:u,v:new Y(i)});f<u;)C(e,f++)}),k=h.prototype=E(We),p(k,"constructor",h)):i(function(){h(1)})&&i(function(){new h(-1)})&&R(function(e){new h,new h(null),new h(1.5),new h(e)},!0)||(h=n(function(e,n,r,o){var i;return s(e,h,c),x(n)?n instanceof q||"ArrayBuffer"==(i=w(n))||"SharedArrayBuffer"==i?void 0!==o?new y(n,Ee(r,t),o):void 0!==r?new y(n,Ee(r,t)):new y(n):be in n?Pe(h,n):Ae.call(h,n):new y(m(n))}),Q(g!==Function.prototype?T(y).concat(T(g)):T(y),function(e){e in h||p(h,e,y[e])}),h.prototype=k,r||(k.constructor=h));var P=k[he],O=!!P&&("values"==P.name||null==P.name),A=Le.values;p(h,me,!0),p(k,be,c),p(k,we,!0),p(k,ye,h),(l?new h(1)[ve]==c:ve in k)||W(k,ve,{get:function(){return c}}),S[c]=h,a(a.G+a.W+a.F*(h!=y),S),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*i(function(){y.of.call(h,1)}),c,{from:Ae,of:Ne}),"BYTES_PER_ELEMENT"in k||p(k,"BYTES_PER_ELEMENT",t),a(a.P,c,je),F(c),a(a.P+a.F*ke,c,{set:Fe}),a(a.P+a.F*!O,c,Le),r||k.toString==pe||(k.toString=pe),a(a.P+a.F*i(function(){new h(1).slice()}),c,{slice:Re}),a(a.P+a.F*(i(function(){return[1,2].toLocaleString()!=new h([1,2]).toLocaleString()})||!i(function(){k.toLocaleString.call([1,2])})),c,{toLocaleString:Me}),j[c]=O?P:A,r||O||p(k,he,A)}}else e.exports=function(){}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(30)("meta"),o=n(5),i=n(14),a=n(10).f,u=0,l=Object.isExtensible||function(){return!0},c=!n(3)(function(){return l(Object.preventExtensions({}))}),s=function(e){a(e,r,{value:{i:"O"+ ++u,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!l(e))return"F";if(!t)return"E";s(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!l(e))return!0;if(!t)return!1;s(e)}return e[r].w},onFreeze:function(e){return c&&f.NEED&&l(e)&&!i(e,r)&&s(e),e}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){e.exports=!1},function(e,t,n){var r=n(95),o=n(65);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(20),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(4),o=n(96),i=n(65),a=n(64)("IE_PROTO"),u=function(){},l=function(){var e,t=n(62)("iframe"),r=i.length;for(t.style.display="none",n(66).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[i[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(u.prototype=r(e),n=new u,u.prototype=null,n[a]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(95),o=n(65).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){var r=n(14),o=n(11),i=n(64)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var r=n(6)("unscopables"),o=Array.prototype;null==o[r]&&n(15)(o,r,{}),e.exports=function(e){o[r][e]=!0}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,n){var r=n(10).f,o=n(14),i=n(6)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(0),o=n(25),i=n(3),a=n(68),u="["+a+"]",l=RegExp("^"+u+u+"*"),c=RegExp(u+u+"*$"),s=function(e,t,n){var o={},u=i(function(){return!!a[e]()||"​"!="​"[e]()}),l=o[e]=u?t(f):a[e];n&&(o[n]=l),r(r.P+r.F*u,"String",o)},f=s.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(l,"")),2&t&&(e=e.replace(c,"")),e};e.exports=s},function(e,t){e.exports={}},function(e,t,n){"use strict";var r=n(2),o=n(10),i=n(9),a=n(6)("species");e.exports=function(e){var t=r[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(12);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){var r=n(24);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){var r=n(24),o=n(6)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(4),o=n(19),i=n(6)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[i])?t:o(n)}},function(e,t,n){var r=n(8),o=n(2),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(31)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(16),o=n(7),i=n(33);e.exports=function(e){return function(t,n,a){var u,l=r(t),c=o(l.length),s=i(a,c);if(e&&n!=n){for(;c>s;)if((u=l[s++])!=u)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(24);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(6)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(4);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var r=n(47),o=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,n){"use strict";n(113);var r=n(12),o=n(15),i=n(3),a=n(25),u=n(6),l=n(83),c=u("species"),s=!i(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var p=u(e),d=!i(function(){var t={};return t[p]=function(){return 7},7!=""[e](t)}),h=d?!i(function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[p](""),!t}):void 0;if(!d||!h||"replace"===e&&!s||"split"===e&&!f){var v=/./[p],m=n(a,p,""[e],function(e,t,n,r,o){return t.exec===l?d&&!o?{done:!0,value:v.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),y=m[0],g=m[1];r(String.prototype,e,y),o(RegExp.prototype,p,2==t?function(e,t){return g.call(e,this,t)}:function(e){return g.call(e,this)})}}},function(e,t,n){var r=n(18),o=n(108),i=n(78),a=n(4),u=n(7),l=n(80),c={},s={};(t=e.exports=function(e,t,n,f,p){var d,h,v,m,y=p?function(){return e}:l(e),g=r(n,f,t?2:1),b=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(i(y)){for(d=u(e.length);d>b;b++)if((m=t?g(a(h=e[b])[0],h[1]):g(e[b]))===c||m===s)return m}else for(v=y.call(e);!(h=v.next()).done;)if((m=o(v,g,h.value,t))===c||m===s)return m}).BREAK=c,t.RETURN=s},function(e,t,n){var r=n(2).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){"use strict";var r=n(2),o=n(0),i=n(12),a=n(44),u=n(28),l=n(57),c=n(43),s=n(5),f=n(3),p=n(53),d=n(39),h=n(69);e.exports=function(e,t,n,v,m,y){var g=r[e],b=g,w=m?"set":"add",x=b&&b.prototype,S={},k=function(e){var t=x[e];i(x,e,"delete"==e?function(e){return!(y&&!s(e))&&t.call(this,0===e?0:e)}:"has"==e?function(e){return!(y&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return y&&!s(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof b&&(y||x.forEach&&!f(function(){(new b).entries().next()}))){var E=new b,_=E[w](y?{}:-0,1)!=E,T=f(function(){E.has(1)}),C=p(function(e){new b(e)}),P=!y&&f(function(){for(var e=new b,t=5;t--;)e[w](t,t);return!e.has(-0)});C||((b=t(function(t,n){c(t,b,e);var r=h(new g,t,b);return null!=n&&l(n,m,r[w],r),r})).prototype=x,x.constructor=b),(T||P)&&(k("delete"),k("has"),m&&k("get")),(P||_)&&k(w),y&&x.clear&&delete x.clear}else b=v.getConstructor(t,e,m,w),a(b.prototype,n),u.NEED=!0;return d(b,e),S[e]=b,o(o.G+o.W+o.F*(b!=g),S),y||v.setStrong(b,e,m),b}},function(e,t,n){for(var r,o=n(2),i=n(15),a=n(30),u=a("typed_array"),l=a("view"),c=!(!o.ArrayBuffer||!o.DataView),s=c,f=0,p="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(r=o[p[f++]])?(i(r.prototype,u,!0),i(r.prototype,l,!0)):s=!1;e.exports={ABV:c,CONSTR:s,TYPED:u,VIEW:l}},function(e,t,n){"use strict";(function(e){var r=n(90),o=n.n(r),i=n(128),a=n.n(i),u=n(1),l=n.n(u),c=n(129),s=n(91),f=n(92),p=(n(326),n(130)),d=n(131),h=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},y=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),g=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},b=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},w=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},x=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},S=function(e){return"object"===(void 0===e?"undefined":v(e))&&e.constructor===Object},k=Object.freeze([]),E=Object.freeze({});function _(e){return"function"==typeof e}function T(e){return e.displayName||e.name||"Component"}function C(e){return e&&"string"==typeof e.styledComponentId}var P=void 0!==e&&(e.env.REACT_APP_SC_ATTR||e.env.SC_ATTR)||"data-styled",O="undefined"!=typeof window&&"HTMLElement"in window,A="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||void 0!==e&&(e.env.REACT_APP_SC_DISABLE_SPEEDY||e.env.SC_DISABLE_SPEEDY)||!1;var N=function(e){function t(n){m(this,t);for(var r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];var a=x(this,e.call(this,"An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#"+n+" for more information."+(o.length>0?" Additional arguments: "+o.join(", "):"")));return x(a)}return b(t,e),t}(Error),I=/^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm,M=function(e){var t=""+(e||""),n=[];return t.replace(I,function(e,t,r){return n.push({componentId:t,matchIndex:r}),e}),n.map(function(e,r){var o=e.componentId,i=e.matchIndex,a=n[r+1];return{componentId:o,cssFromDOM:a?t.slice(i,a.matchIndex):t.slice(i)}})},j=/^\s*\/\/.*$/gm,R=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!1,compress:!1,semicolon:!0}),F=new o.a({global:!1,cascade:!0,keyframe:!1,prefix:!0,compress:!1,semicolon:!1}),L=[],D=function(e){if(-2===e){var t=L;return L=[],t}},U=a()(function(e){L.push(e)}),z=void 0,W=void 0,B=void 0,V=function(e,t,n){return t>0&&-1!==n.slice(0,t).indexOf(W)&&n.slice(t-W.length,t)!==W?"."+z:e};F.use([function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(W)>0&&(n[0]=n[0].replace(B,V))},U,D]),R.use([U,D]);function $(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"&",o=e.join("").replace(j,""),i=t&&n?n+" "+t+" { "+o+" }":o;return z=r,W=t,B=new RegExp("\\"+W+"\\b","g"),F(n||!t?"":t,i)}var H=function(){return n.nc},G=function(e,t,n){n&&((e[t]||(e[t]=Object.create(null)))[n]=!0)},q=function(e,t){e[t]=Object.create(null)},Y=function(e){return function(t,n){return void 0!==e[t]&&e[t][n]}},Q=function(e){var t="";for(var n in e)t+=Object.keys(e[n]).join(" ")+" ";return t.trim()},K=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets.length,n=0;n<t;n+=1){var r=document.styleSheets[n];if(r.ownerNode===e)return r}throw new N(10)},X=function(e,t,n){if(!t)return!1;var r=e.cssRules.length;try{e.insertRule(t,n<=r?n:r)}catch(e){return!1}return!0},J=function(e){return"\n/* sc-component-id: "+e+" */\n"},Z=function(e,t){for(var n=0,r=0;r<=t;r+=1)n+=e[r];return n},ee=function(e,t){return function(n){var r=H();return"<style "+[r&&'nonce="'+r+'"',P+'="'+Q(t)+'"','data-styled-version="4.3.2"',n].filter(Boolean).join(" ")+">"+e()+"</style>"}},te=function(e,t){return function(){var n,r=((n={})[P]=Q(t),n["data-styled-version"]="4.3.2",n),o=H();return o&&(r.nonce=o),l.a.createElement("style",g({},r,{dangerouslySetInnerHTML:{__html:e()}}))}},ne=function(e){return function(){return Object.keys(e)}},re=function(e){return document.createTextNode(J(e))},oe=function e(t,n){var r=void 0===t?Object.create(null):t,o=void 0===n?Object.create(null):n,i=function(e){var t=o[e];return void 0!==t?t:o[e]=[""]},a=function(){var e="";for(var t in o){var n=o[t][0];n&&(e+=J(t)+n)}return e};return{clone:function(){var t=function(e){var t=Object.create(null);for(var n in e)t[n]=g({},e[n]);return t}(r),n=Object.create(null);for(var i in o)n[i]=[o[i][0]];return e(t,n)},css:a,getIds:ne(o),hasNameForId:Y(r),insertMarker:i,insertRules:function(e,t,n){i(e)[0]+=t.join(" "),G(r,e,n)},removeRules:function(e){var t=o[e];void 0!==t&&(t[0]="",q(r,e))},sealed:!1,styleTag:null,toElement:te(a,r),toHTML:ee(a,r)}},ie=function(e,t,n,r,o){if(O&&!n){var i=function(e,t,n){var r=document.createElement("style");r.setAttribute(P,""),r.setAttribute("data-styled-version","4.3.2");var o=H();if(o&&r.setAttribute("nonce",o),r.appendChild(document.createTextNode("")),e&&!t)e.appendChild(r);else{if(!t||!e||!t.parentNode)throw new N(6);t.parentNode.insertBefore(r,n?t:t.nextSibling)}return r}(e,t,r);return A?function(e,t){var n=Object.create(null),r=Object.create(null),o=void 0!==t,i=!1,a=function(t){var o=r[t];return void 0!==o?o:(r[t]=re(t),e.appendChild(r[t]),n[t]=Object.create(null),r[t])},u=function(){var e="";for(var t in r)e+=r[t].data;return e};return{clone:function(){throw new N(5)},css:u,getIds:ne(r),hasNameForId:Y(n),insertMarker:a,insertRules:function(e,r,u){for(var l=a(e),c=[],s=r.length,f=0;f<s;f+=1){var p=r[f],d=o;if(d&&-1!==p.indexOf("@import"))c.push(p);else{d=!1;var h=f===s-1?"":" ";l.appendData(""+p+h)}}G(n,e,u),o&&c.length>0&&(i=!0,t().insertRules(e+"-import",c))},removeRules:function(a){var u=r[a];if(void 0!==u){var l=re(a);e.replaceChild(l,u),r[a]=l,q(n,a),o&&i&&t().removeRules(a+"-import")}},sealed:!1,styleTag:e,toElement:te(u,n),toHTML:ee(u,n)}}(i,o):function(e,t){var n=Object.create(null),r=Object.create(null),o=[],i=void 0!==t,a=!1,u=function(e){var t=r[e];return void 0!==t?t:(r[e]=o.length,o.push(0),q(n,e),r[e])},l=function(){var t=K(e).cssRules,n="";for(var i in r){n+=J(i);for(var a=r[i],u=Z(o,a),l=u-o[a];l<u;l+=1){var c=t[l];void 0!==c&&(n+=c.cssText)}}return n};return{clone:function(){throw new N(5)},css:l,getIds:ne(r),hasNameForId:Y(n),insertMarker:u,insertRules:function(r,l,c){for(var s=u(r),f=K(e),p=Z(o,s),d=0,h=[],v=l.length,m=0;m<v;m+=1){var y=l[m],g=i;g&&-1!==y.indexOf("@import")?h.push(y):X(f,y,p+d)&&(g=!1,d+=1)}i&&h.length>0&&(a=!0,t().insertRules(r+"-import",h)),o[s]+=d,G(n,r,c)},removeRules:function(u){var l=r[u];if(void 0!==l){var c=o[l];!function(e,t,n){for(var r=t-n,o=t;o>r;o-=1)e.deleteRule(o)}(K(e),Z(o,l)-1,c),o[l]=0,q(n,u),i&&a&&t().removeRules(u+"-import")}},sealed:!1,styleTag:e,toElement:te(l,n),toHTML:ee(l,n)}}(i,o)}return oe()},ae=/\s+/,ue=void 0;ue=O?A?40:1e3:-1;var le=0,ce=void 0,se=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:O?document.head:null,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];m(this,e),this.getImportRuleTag=function(){var e=t.importRuleTag;if(void 0!==e)return e;var n=t.tags[0];return t.importRuleTag=ie(t.target,n?n.styleTag:null,t.forceServer,!0)},le+=1,this.id=le,this.forceServer=r,this.target=r?null:n,this.tagMap={},this.deferred={},this.rehydratedNames={},this.ignoreRehydratedNames={},this.tags=[],this.capacity=1,this.clones=[]}return e.prototype.rehydrate=function(){if(!O||this.forceServer)return this;var e=[],t=[],n=!1,r=document.querySelectorAll("style["+P+'][data-styled-version="4.3.2"]'),o=r.length;if(!o)return this;for(var i=0;i<o;i+=1){var a=r[i];n||(n=!!a.getAttribute("data-styled-streamed"));for(var u,l=(a.getAttribute(P)||"").trim().split(ae),c=l.length,s=0;s<c;s+=1)u=l[s],this.rehydratedNames[u]=!0;t.push.apply(t,M(a.textContent)),e.push(a)}var f=t.length;if(!f)return this;var p=this.makeTag(null);!function(e,t,n){for(var r=0,o=n.length;r<o;r+=1){var i=n[r],a=i.componentId,u=i.cssFromDOM,l=R("",u);e.insertRules(a,l)}for(var c=0,s=t.length;c<s;c+=1){var f=t[c];f.parentNode&&f.parentNode.removeChild(f)}}(p,e,t),this.capacity=Math.max(1,ue-f),this.tags.push(p);for(var d=0;d<f;d+=1)this.tagMap[t[d].componentId]=p;return this},e.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];ce=new e(void 0,t).rehydrate()},e.prototype.clone=function(){var t=new e(this.target,this.forceServer);return this.clones.push(t),t.tags=this.tags.map(function(e){for(var n=e.getIds(),r=e.clone(),o=0;o<n.length;o+=1)t.tagMap[n[o]]=r;return r}),t.rehydratedNames=g({},this.rehydratedNames),t.deferred=g({},this.deferred),t},e.prototype.sealAllTags=function(){this.capacity=1,this.tags.forEach(function(e){e.sealed=!0})},e.prototype.makeTag=function(e){var t=e?e.styleTag:null;return ie(this.target,t,this.forceServer,!1,this.getImportRuleTag)},e.prototype.getTagForId=function(e){var t=this.tagMap[e];if(void 0!==t&&!t.sealed)return t;var n=this.tags[this.tags.length-1];return this.capacity-=1,0===this.capacity&&(this.capacity=ue,n=this.makeTag(n),this.tags.push(n)),this.tagMap[e]=n},e.prototype.hasId=function(e){return void 0!==this.tagMap[e]},e.prototype.hasNameForId=function(e,t){if(void 0===this.ignoreRehydratedNames[e]&&this.rehydratedNames[t])return!0;var n=this.tagMap[e];return void 0!==n&&n.hasNameForId(e,t)},e.prototype.deferredInject=function(e,t){if(void 0===this.tagMap[e]){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].deferredInject(e,t);this.getTagForId(e).insertMarker(e),this.deferred[e]=t}},e.prototype.inject=function(e,t,n){for(var r=this.clones,o=0;o<r.length;o+=1)r[o].inject(e,t,n);var i=this.getTagForId(e);if(void 0!==this.deferred[e]){var a=this.deferred[e].concat(t);i.insertRules(e,a,n),this.deferred[e]=void 0}else i.insertRules(e,t,n)},e.prototype.remove=function(e){var t=this.tagMap[e];if(void 0!==t){for(var n=this.clones,r=0;r<n.length;r+=1)n[r].remove(e);t.removeRules(e),this.ignoreRehydratedNames[e]=!0,this.deferred[e]=void 0}},e.prototype.toHTML=function(){return this.tags.map(function(e){return e.toHTML()}).join("")},e.prototype.toReactElements=function(){var e=this.id;return this.tags.map(function(t,n){var r="sc-"+e+"-"+n;return Object(u.cloneElement)(t.toElement(),{key:r})})},y(e,null,[{key:"master",get:function(){return ce||(ce=(new e).rehydrate())}},{key:"instance",get:function(){return e.master}}]),e}(),fe=function(){function e(t,n){var r=this;m(this,e),this.inject=function(e){e.hasNameForId(r.id,r.name)||e.inject(r.id,r.rules,r.name)},this.toString=function(){throw new N(12,String(r.name))},this.name=t,this.rules=n,this.id="sc-keyframes-"+t}return e.prototype.getName=function(){return this.name},e}(),pe=/([A-Z])/g,de=/^ms-/;function he(e){return e.replace(pe,"-$1").toLowerCase().replace(de,"-ms-")}var ve=function(e){return null==e||!1===e||""===e},me=function e(t,n){var r=[];return Object.keys(t).forEach(function(n){if(!ve(t[n])){if(S(t[n]))return r.push.apply(r,e(t[n],n)),r;if(_(t[n]))return r.push(he(n)+":",t[n],";"),r;r.push(he(n)+": "+(o=n,null==(i=t[n])||"boolean"==typeof i||""===i?"":"number"!=typeof i||0===i||o in c.a?String(i).trim():i+"px")+";")}var o,i;return r}),n?[n+" {"].concat(r,["}"]):r};function ye(e,t,n){if(Array.isArray(e)){for(var r,o=[],i=0,a=e.length;i<a;i+=1)null!==(r=ye(e[i],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}return ve(e)?null:C(e)?"."+e.styledComponentId:_(e)?"function"!=typeof(u=e)||u.prototype&&u.prototype.isReactComponent||!t?e:ye(e(t),t,n):e instanceof fe?n?(e.inject(n),e.getName()):e:S(e)?me(e):e.toString();var u}function ge(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return _(e)||S(e)?ye(h(k,[e].concat(n))):ye(h(e,n))}function be(e){for(var t,n=0|e.length,r=0|n,o=0;n>=4;)t=1540483477*(65535&(t=255&e.charCodeAt(o)|(255&e.charCodeAt(++o))<<8|(255&e.charCodeAt(++o))<<16|(255&e.charCodeAt(++o))<<24))+((1540483477*(t>>>16)&65535)<<16),r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16)^(t=1540483477*(65535&(t^=t>>>24))+((1540483477*(t>>>16)&65535)<<16)),n-=4,++o;switch(n){case 3:r^=(255&e.charCodeAt(o+2))<<16;case 2:r^=(255&e.charCodeAt(o+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(o)))+((1540483477*(r>>>16)&65535)<<16)}return((r=1540483477*(65535&(r^=r>>>13))+((1540483477*(r>>>16)&65535)<<16))^r>>>15)>>>0}var we=52,xe=function(e){return String.fromCharCode(e+(e>25?39:97))};function Se(e){var t="",n=void 0;for(n=e;n>we;n=Math.floor(n/we))t=xe(n%we)+t;return xe(n%we)+t}function ke(e,t){for(var n=0;n<e.length;n+=1){var r=e[n];if(Array.isArray(r)&&!ke(r,t))return!1;if(_(r)&&!C(r))return!1}return!t.some(function(e){return _(e)||function(e){for(var t in e)if(_(e[t]))return!0;return!1}(e)})}var Ee,_e=!1,Te=function(e){return Se(be(e))},Ce=function(){function e(t,n,r){m(this,e),this.rules=t,this.isStatic=!_e&&ke(t,n),this.componentId=r,se.master.hasId(r)||se.master.deferredInject(r,[])}return e.prototype.generateAndInjectStyles=function(e,t){var n=this.isStatic,r=this.componentId,o=this.lastClassName;if(O&&n&&"string"==typeof o&&t.hasNameForId(r,o))return o;var i=ye(this.rules,e,t),a=Te(this.componentId+i.join(""));return t.hasNameForId(r,a)||t.inject(this.componentId,$(i,"."+a,void 0,r),a),this.lastClassName=a,a},e.generateName=function(e){return Te(e)},e}(),Pe=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E,r=!!n&&e.theme===n.theme;return e.theme&&!r?e.theme:t||n.theme},Oe=/[[\].#*$><+~=|^:(),"'`-]+/g,Ae=/(^-|-$)/g;function Ne(e){return e.replace(Oe,"-").replace(Ae,"")}function Ie(e){return"string"==typeof e&&!0}var Me={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDerivedStateFromProps:!0,propTypes:!0,type:!0},je={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Re=((Ee={})[s.ForwardRef]={$$typeof:!0,render:!0},Ee),Fe=Object.defineProperty,Le=Object.getOwnPropertyNames,De=Object.getOwnPropertySymbols,Ue=void 0===De?function(){return[]}:De,ze=Object.getOwnPropertyDescriptor,We=Object.getPrototypeOf,Be=Object.prototype,Ve=Array.prototype;function $e(e,t,n){if("string"!=typeof t){var r=We(t);r&&r!==Be&&$e(e,r,n);for(var o=Ve.concat(Le(t),Ue(t)),i=Re[e.$$typeof]||Me,a=Re[t.$$typeof]||Me,u=o.length,l=void 0,c=void 0;u--;)if(c=o[u],!(je[c]||n&&n[c]||a&&a[c]||i&&i[c])&&(l=ze(t,c)))try{Fe(e,c,l)}catch(e){}return e}return e}var He=Object(u.createContext)(),Ge=He.Consumer,qe=(function(e){function t(n){m(this,t);var r=x(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext.bind(r)),r.renderInner=r.renderInner.bind(r),r}b(t,e),t.prototype.render=function(){return this.props.children?l.a.createElement(He.Consumer,null,this.renderInner):null},t.prototype.renderInner=function(e){var t=this.getContext(this.props.theme,e);return l.a.createElement(He.Provider,{value:t},l.a.Children.only(this.props.children))},t.prototype.getTheme=function(e,t){if(_(e))return e(t);if(null===e||Array.isArray(e)||"object"!==(void 0===e?"undefined":v(e)))throw new N(8);return g({},t,e)},t.prototype.getContext=function(e,t){return this.getTheme(e,t)}}(u.Component),function(){function e(){m(this,e),this.masterSheet=se.master,this.instance=this.masterSheet.clone(),this.sealed=!1}e.prototype.seal=function(){if(!this.sealed){var e=this.masterSheet.clones.indexOf(this.instance);this.masterSheet.clones.splice(e,1),this.sealed=!0}},e.prototype.collectStyles=function(e){if(this.sealed)throw new N(2);return l.a.createElement(Qe,{sheet:this.instance},e)},e.prototype.getStyleTags=function(){return this.seal(),this.instance.toHTML()},e.prototype.getStyleElement=function(){return this.seal(),this.instance.toReactElements()},e.prototype.interleaveWithNodeStream=function(e){throw new N(3)}}(),Object(u.createContext)()),Ye=qe.Consumer,Qe=function(e){function t(n){m(this,t);var r=x(this,e.call(this,n));return r.getContext=Object(f.a)(r.getContext),r}return b(t,e),t.prototype.getContext=function(e,t){if(e)return e;if(t)return new se(t);throw new N(4)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.sheet,r=e.target;return l.a.createElement(qe.Provider,{value:this.getContext(n,r)},t)},t}(u.Component),Ke={};var Xe=function(e){function t(){m(this,t);var n=x(this,e.call(this));return n.attrs={},n.renderOuter=n.renderOuter.bind(n),n.renderInner=n.renderInner.bind(n),n}return b(t,e),t.prototype.render=function(){return l.a.createElement(Ye,null,this.renderOuter)},t.prototype.renderOuter=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:se.master;return this.styleSheet=e,this.props.forwardedComponent.componentStyle.isStatic?this.renderInner():l.a.createElement(Ge,null,this.renderInner)},t.prototype.renderInner=function(e){var t=this.props.forwardedComponent,n=t.componentStyle,r=t.defaultProps,o=(t.displayName,t.foldedComponentIds),i=t.styledComponentId,a=t.target,l=void 0;l=n.isStatic?this.generateAndInjectStyles(E,this.props):this.generateAndInjectStyles(Pe(this.props,e,r)||E,this.props);var c=this.props.as||this.attrs.as||a,s=Ie(c),f={},d=g({},this.attrs,this.props),h=void 0;for(h in d)"forwardedComponent"!==h&&"as"!==h&&("forwardedRef"===h?f.ref=d[h]:"forwardedAs"===h?f.as=d[h]:s&&!Object(p.a)(h)||(f[h]=d[h]));return this.props.style&&this.attrs.style&&(f.style=g({},this.attrs.style,this.props.style)),f.className=Array.prototype.concat(o,this.props.className,i,this.attrs.className,l).filter(Boolean).join(" "),Object(u.createElement)(c,f)},t.prototype.buildExecutionContext=function(e,t,n){var r=this,o=g({},t,{theme:e});return n.length?(this.attrs={},n.forEach(function(e){var t,n=e,i=!1,a=void 0,u=void 0;for(u in _(n)&&(n=n(o),i=!0),n)a=n[u],i||!_(a)||(t=a)&&t.prototype&&t.prototype.isReactComponent||C(a)||(a=a(o)),r.attrs[u]=a,o[u]=a}),o):o},t.prototype.generateAndInjectStyles=function(e,t){var n=t.forwardedComponent,r=n.attrs,o=n.componentStyle;n.warnTooManyClasses;return o.isStatic&&!r.length?o.generateAndInjectStyles(E,this.styleSheet):o.generateAndInjectStyles(this.buildExecutionContext(e,t,r),this.styleSheet)},t}(u.Component);function Je(e,t,n){var r=C(e),o=!Ie(e),i=t.displayName,a=void 0===i?function(e){return Ie(e)?"styled."+e:"Styled("+T(e)+")"}(e):i,u=t.componentId,c=void 0===u?function(e,t,n){var r="string"!=typeof t?"sc":Ne(t),o=(Ke[r]||0)+1;Ke[r]=o;var i=r+"-"+e.generateName(r+o);return n?n+"-"+i:i}(Ce,t.displayName,t.parentComponentId):u,s=t.ParentComponent,f=void 0===s?Xe:s,p=t.attrs,h=void 0===p?k:p,v=t.displayName&&t.componentId?Ne(t.displayName)+"-"+t.componentId:t.componentId||c,m=r&&e.attrs?Array.prototype.concat(e.attrs,h).filter(Boolean):h,y=new Ce(r?e.componentStyle.rules.concat(n):n,m,v),b=void 0,x=function(e,t){return l.a.createElement(f,g({},e,{forwardedComponent:b,forwardedRef:t}))};return x.displayName=a,(b=l.a.forwardRef(x)).displayName=a,b.attrs=m,b.componentStyle=y,b.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):k,b.styledComponentId=v,b.target=r?e.target:e,b.withComponent=function(e){var r=t.componentId,o=w(t,["componentId"]),i=r&&r+"-"+(Ie(e)?e:Ne(T(e)));return Je(e,g({},o,{attrs:m,componentId:i,ParentComponent:f}),n)},Object.defineProperty(b,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?Object(d.a)(e.defaultProps,t):t}}),b.toString=function(){return"."+b.styledComponentId},o&&$e(b,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,styledComponentId:!0,target:!0,withComponent:!0}),b}var Ze=function(e){return function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:E;if(!Object(s.isValidElementType)(n))throw new N(1,String(n));var o=function(){return t(n,r,ge.apply(void 0,arguments))};return o.withConfig=function(o){return e(t,n,g({},r,o))},o.attrs=function(o){return e(t,n,g({},r,{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o}(Je,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach(function(e){Ze[e]=Ze(e)});!function(){function e(t,n){m(this,e),this.rules=t,this.componentId=n,this.isStatic=ke(t,k),se.master.hasId(n)||se.master.deferredInject(n,[])}e.prototype.createStyles=function(e,t){var n=$(ye(this.rules,e,t),"");t.inject(this.componentId,n)},e.prototype.removeStyles=function(e){var t=this.componentId;e.hasId(t)&&e.remove(t)},e.prototype.renderStyles=function(e,t){this.removeStyles(t),this.createStyles(e,t)}}();O&&(window.scCGSHMRCache={});t.a=Ze}).call(this,n(324))},function(e,t,n){var r=n(5),o=n(2).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){t.f=n(6)},function(e,t,n){var r=n(49)("keys"),o=n(30);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(5),o=n(4),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(18)(Function.call,n(21).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var r=n(5),o=n(67).set;e.exports=function(e,t,n){var i,a=t.constructor;return a!==n&&"function"==typeof a&&(i=a.prototype)!==n.prototype&&r(i)&&o&&o(e,i),e}},function(e,t,n){"use strict";var r=n(20),o=n(25);e.exports=function(e){var t=String(o(this)),n="",i=r(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(n+=t);return n}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},function(e,t,n){var r=n(20),o=n(25);e.exports=function(e){return function(t,n){var i,a,u=String(o(t)),l=r(n),c=u.length;return l<0||l>=c?e?"":void 0:(i=u.charCodeAt(l))<55296||i>56319||l+1===c||(a=u.charCodeAt(l+1))<56320||a>57343?e?u.charAt(l):i:e?u.slice(l,l+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){"use strict";var r=n(31),o=n(0),i=n(12),a=n(15),u=n(41),l=n(107),c=n(39),s=n(36),f=n(6)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,t,n,h,v,m,y){l(n,t,h);var g,b,w,x=function(e){if(!p&&e in _)return _[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},S=t+" Iterator",k="values"==v,E=!1,_=e.prototype,T=_[f]||_["@@iterator"]||v&&_[v],C=T||x(v),P=v?k?x("entries"):C:void 0,O="Array"==t&&_.entries||T;if(O&&(w=s(O.call(new e)))!==Object.prototype&&w.next&&(c(w,S,!0),r||"function"==typeof w[f]||a(w,f,d)),k&&T&&"values"!==T.name&&(E=!0,C=function(){return T.call(this)}),r&&!y||!p&&!E&&_[f]||a(_,f,C),u[t]=C,u[S]=d,v)if(g={values:k?C:x("values"),keys:m?C:x("keys"),entries:P},y)for(b in g)b in _||i(_,b,g[b]);else o(o.P+o.F*(p||E),t,g);return g}},function(e,t,n){var r=n(76),o=n(25);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(o(e))}},function(e,t,n){var r=n(5),o=n(24),i=n(6)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,n){var r=n(6)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,n){var r=n(41),o=n(6)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){"use strict";var r=n(10),o=n(29);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(47),o=n(6)("iterator"),i=n(41);e.exports=n(8).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){"use strict";var r=n(11),o=n(33),i=n(7);e.exports=function(e){for(var t=r(this),n=i(t.length),a=arguments.length,u=o(a>1?arguments[1]:void 0,n),l=a>2?arguments[2]:void 0,c=void 0===l?n:o(l,n);c>u;)t[u++]=e;return t}},function(e,t,n){"use strict";var r=n(37),o=n(112),i=n(41),a=n(16);e.exports=n(74)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){"use strict";var r,o,i=n(54),a=RegExp.prototype.exec,u=String.prototype.replace,l=a,c=(r=/a/,o=/b*/g,a.call(r,"a"),a.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),s=void 0!==/()??/.exec("")[1];(c||s)&&(l=function(e){var t,n,r,o,l=this;return s&&(n=new RegExp("^"+l.source+"$(?!\\s)",i.call(l))),c&&(t=l.lastIndex),r=a.call(l,e),c&&r&&(l.lastIndex=l.global?r.index+r[0].length:t),s&&r&&r.length>1&&u.call(r[0],n,function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)}),r}),e.exports=l},function(e,t,n){"use strict";var r=n(73)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r,o,i,a=n(18),u=n(101),l=n(66),c=n(62),s=n(2),f=s.process,p=s.setImmediate,d=s.clearImmediate,h=s.MessageChannel,v=s.Dispatch,m=0,y={},g=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},b=function(e){g.call(e.data)};p&&d||(p=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++m]=function(){u("function"==typeof e?e:Function(e),t)},r(m),m},d=function(e){delete y[e]},"process"==n(24)(f)?r=function(e){f.nextTick(a(g,e,1))}:v&&v.now?r=function(e){v.now(a(g,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=b,r=a(i.postMessage,i,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts?(r=function(e){s.postMessage(e+"","*")},s.addEventListener("message",b,!1)):r="onreadystatechange"in c("script")?function(e){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),g.call(e)}}:function(e){setTimeout(a(g,e,1),0)}),e.exports={set:p,clear:d}},function(e,t,n){"use strict";var r=n(2),o=n(9),i=n(31),a=n(60),u=n(15),l=n(44),c=n(3),s=n(43),f=n(20),p=n(7),d=n(120),h=n(35).f,v=n(10).f,m=n(81),y=n(39),g="prototype",b="Wrong index!",w=r.ArrayBuffer,x=r.DataView,S=r.Math,k=r.RangeError,E=r.Infinity,_=w,T=S.abs,C=S.pow,P=S.floor,O=S.log,A=S.LN2,N=o?"_b":"buffer",I=o?"_l":"byteLength",M=o?"_o":"byteOffset";function j(e,t,n){var r,o,i,a=new Array(n),u=8*n-t-1,l=(1<<u)-1,c=l>>1,s=23===t?C(2,-24)-C(2,-77):0,f=0,p=e<0||0===e&&1/e<0?1:0;for((e=T(e))!=e||e===E?(o=e!=e?1:0,r=l):(r=P(O(e)/A),e*(i=C(2,-r))<1&&(r--,i*=2),(e+=r+c>=1?s/i:s*C(2,1-c))*i>=2&&(r++,i/=2),r+c>=l?(o=0,r=l):r+c>=1?(o=(e*i-1)*C(2,t),r+=c):(o=e*C(2,c-1)*C(2,t),r=0));t>=8;a[f++]=255&o,o/=256,t-=8);for(r=r<<t|o,u+=t;u>0;a[f++]=255&r,r/=256,u-=8);return a[--f]|=128*p,a}function R(e,t,n){var r,o=8*n-t-1,i=(1<<o)-1,a=i>>1,u=o-7,l=n-1,c=e[l--],s=127&c;for(c>>=7;u>0;s=256*s+e[l],l--,u-=8);for(r=s&(1<<-u)-1,s>>=-u,u+=t;u>0;r=256*r+e[l],l--,u-=8);if(0===s)s=1-a;else{if(s===i)return r?NaN:c?-E:E;r+=C(2,t),s-=a}return(c?-1:1)*r*C(2,s-t)}function F(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function L(e){return[255&e]}function D(e){return[255&e,e>>8&255]}function U(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function z(e){return j(e,52,8)}function W(e){return j(e,23,4)}function B(e,t,n){v(e[g],t,{get:function(){return this[n]}})}function V(e,t,n,r){var o=d(+n);if(o+t>e[I])throw k(b);var i=e[N]._b,a=o+e[M],u=i.slice(a,a+t);return r?u:u.reverse()}function $(e,t,n,r,o,i){var a=d(+n);if(a+t>e[I])throw k(b);for(var u=e[N]._b,l=a+e[M],c=r(+o),s=0;s<t;s++)u[l+s]=c[i?s:t-s-1]}if(a.ABV){if(!c(function(){w(1)})||!c(function(){new w(-1)})||c(function(){return new w,new w(1.5),new w(NaN),"ArrayBuffer"!=w.name})){for(var H,G=(w=function(e){return s(this,w),new _(d(e))})[g]=_[g],q=h(_),Y=0;q.length>Y;)(H=q[Y++])in w||u(w,H,_[H]);i||(G.constructor=w)}var Q=new x(new w(2)),K=x[g].setInt8;Q.setInt8(0,2147483648),Q.setInt8(1,2147483649),!Q.getInt8(0)&&Q.getInt8(1)||l(x[g],{setInt8:function(e,t){K.call(this,e,t<<24>>24)},setUint8:function(e,t){K.call(this,e,t<<24>>24)}},!0)}else w=function(e){s(this,w,"ArrayBuffer");var t=d(e);this._b=m.call(new Array(t),0),this[I]=t},x=function(e,t,n){s(this,x,"DataView"),s(e,w,"DataView");var r=e[I],o=f(t);if(o<0||o>r)throw k("Wrong offset!");if(o+(n=void 0===n?r-o:p(n))>r)throw k("Wrong length!");this[N]=e,this[M]=o,this[I]=n},o&&(B(w,"byteLength","_l"),B(x,"buffer","_b"),B(x,"byteLength","_l"),B(x,"byteOffset","_o")),l(x[g],{getInt8:function(e){return V(this,1,e)[0]<<24>>24},getUint8:function(e){return V(this,1,e)[0]},getInt16:function(e){var t=V(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=V(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return F(V(this,4,e,arguments[1]))},getUint32:function(e){return F(V(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return R(V(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return R(V(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){$(this,1,e,L,t)},setUint8:function(e,t){$(this,1,e,L,t)},setInt16:function(e,t){$(this,2,e,D,t,arguments[2])},setUint16:function(e,t){$(this,2,e,D,t,arguments[2])},setInt32:function(e,t){$(this,4,e,U,t,arguments[2])},setUint32:function(e,t){$(this,4,e,U,t,arguments[2])},setFloat32:function(e,t){$(this,4,e,W,t,arguments[2])},setFloat64:function(e,t){$(this,8,e,z,t,arguments[2])}});y(w,"ArrayBuffer"),y(x,"DataView"),u(x[g],a.VIEW,!0),t.ArrayBuffer=w,t.DataView=x},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){e.exports=!n(125)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){e.exports=function e(t){"use strict";var n=/^\0+/g,r=/[\0\r\f]/g,o=/: */g,i=/zoo|gra/,a=/([,: ])(transform)/g,u=/,+\s*(?![^(]*[)])/g,l=/ +\s*(?![^(]*[)])/g,c=/ *[\0] */g,s=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,p=/:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,d=/\W+/g,h=/@(k\w+)\s*(\S*)\s*/,v=/::(place)/g,m=/:(read-only)/g,y=/\s+(?=[{\];=:>])/g,g=/([[}=:>])\s+/g,b=/(\{[^{]+?);(?=\})/g,w=/\s{2,}/g,x=/([^\(])(:+) */g,S=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,E=/([\s\S]*?);/g,_=/-self|flex-/g,T=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,P=/([^-])(image-set\()/,O="-webkit-",A="-moz-",N="-ms-",I=59,M=125,j=123,R=40,F=41,L=91,D=93,U=10,z=13,W=9,B=64,V=32,$=38,H=45,G=95,q=42,Y=44,Q=58,K=39,X=34,J=47,Z=62,ee=43,te=126,ne=0,re=12,oe=11,ie=107,ae=109,ue=115,le=112,ce=111,se=105,fe=99,pe=100,de=112,he=1,ve=1,me=0,ye=1,ge=1,be=1,we=0,xe=0,Se=0,ke=[],Ee=[],_e=0,Te=null,Ce=-2,Pe=-1,Oe=0,Ae=1,Ne=2,Ie=3,Me=0,je=1,Re="",Fe="",Le="";function De(e,t,o,i,a){for(var u,l,s=0,f=0,p=0,d=0,y=0,g=0,b=0,w=0,S=0,E=0,_=0,T=0,C=0,P=0,G=0,we=0,Ee=0,Te=0,Ce=0,Pe=o.length,ze=Pe-1,Ge="",qe="",Ye="",Qe="",Ke="",Xe="";G<Pe;){if(b=o.charCodeAt(G),G===ze&&f+d+p+s!==0&&(0!==f&&(b=f===J?U:J),d=p=s=0,Pe++,ze++),f+d+p+s===0){if(G===ze&&(we>0&&(qe=qe.replace(r,"")),qe.trim().length>0)){switch(b){case V:case W:case I:case z:case U:break;default:qe+=o.charAt(G)}b=I}if(1===Ee)switch(b){case j:case M:case I:case X:case K:case R:case F:case Y:Ee=0;case W:case z:case U:case V:break;default:for(Ee=0,Ce=G,y=b,G--,b=I;Ce<Pe;)switch(o.charCodeAt(Ce++)){case U:case z:case I:++G,b=y,Ce=Pe;break;case Q:we>0&&(++G,b=y);case j:Ce=Pe}}switch(b){case j:for(y=(qe=qe.trim()).charCodeAt(0),_=1,Ce=++G;G<Pe;){switch(b=o.charCodeAt(G)){case j:_++;break;case M:_--;break;case J:switch(g=o.charCodeAt(G+1)){case q:case J:G=He(g,G,ze,o)}break;case L:b++;case R:b++;case X:case K:for(;G++<ze&&o.charCodeAt(G)!==b;);}if(0===_)break;G++}switch(Ye=o.substring(Ce,G),y===ne&&(y=(qe=qe.replace(n,"").trim()).charCodeAt(0)),y){case B:switch(we>0&&(qe=qe.replace(r,"")),g=qe.charCodeAt(1)){case pe:case ae:case ue:case H:u=t;break;default:u=ke}if(Ce=(Ye=De(t,u,Ye,g,a+1)).length,Se>0&&0===Ce&&(Ce=qe.length),_e>0&&(u=Ue(ke,qe,Te),l=$e(Ie,Ye,u,t,ve,he,Ce,g,a,i),qe=u.join(""),void 0!==l&&0===(Ce=(Ye=l.trim()).length)&&(g=0,Ye="")),Ce>0)switch(g){case ue:qe=qe.replace(k,Ve);case pe:case ae:case H:Ye=qe+"{"+Ye+"}";break;case ie:Ye=(qe=qe.replace(h,"$1 $2"+(je>0?Re:"")))+"{"+Ye+"}",Ye=1===ge||2===ge&&Be("@"+Ye,3)?"@"+O+Ye+"@"+Ye:"@"+Ye;break;default:Ye=qe+Ye,i===de&&(Qe+=Ye,Ye="")}else Ye="";break;default:Ye=De(t,Ue(t,qe,Te),Ye,i,a+1)}Ke+=Ye,T=0,Ee=0,P=0,we=0,Te=0,C=0,qe="",Ye="",b=o.charCodeAt(++G);break;case M:case I:if((Ce=(qe=(we>0?qe.replace(r,""):qe).trim()).length)>1)switch(0===P&&((y=qe.charCodeAt(0))===H||y>96&&y<123)&&(Ce=(qe=qe.replace(" ",":")).length),_e>0&&void 0!==(l=$e(Ae,qe,t,e,ve,he,Qe.length,i,a,i))&&0===(Ce=(qe=l.trim()).length)&&(qe="\0\0"),y=qe.charCodeAt(0),g=qe.charCodeAt(1),y){case ne:break;case B:if(g===se||g===fe){Xe+=qe+o.charAt(G);break}default:if(qe.charCodeAt(Ce-1)===Q)break;Qe+=We(qe,y,g,qe.charCodeAt(2))}T=0,Ee=0,P=0,we=0,Te=0,qe="",b=o.charCodeAt(++G)}}switch(b){case z:case U:if(f+d+p+s+xe===0)switch(E){case F:case K:case X:case B:case te:case Z:case q:case ee:case J:case H:case Q:case Y:case I:case j:case M:break;default:P>0&&(Ee=1)}f===J?f=0:ye+T===0&&i!==ie&&qe.length>0&&(we=1,qe+="\0"),_e*Me>0&&$e(Oe,qe,t,e,ve,he,Qe.length,i,a,i),he=1,ve++;break;case I:case M:if(f+d+p+s===0){he++;break}default:switch(he++,Ge=o.charAt(G),b){case W:case V:if(d+s+f===0)switch(w){case Y:case Q:case W:case V:Ge="";break;default:b!==V&&(Ge=" ")}break;case ne:Ge="\\0";break;case re:Ge="\\f";break;case oe:Ge="\\v";break;case $:d+f+s===0&&ye>0&&(Te=1,we=1,Ge="\f"+Ge);break;case 108:if(d+f+s+me===0&&P>0)switch(G-P){case 2:w===le&&o.charCodeAt(G-3)===Q&&(me=w);case 8:S===ce&&(me=S)}break;case Q:d+f+s===0&&(P=G);break;case Y:f+p+d+s===0&&(we=1,Ge+="\r");break;case X:case K:0===f&&(d=d===b?0:0===d?b:d);break;case L:d+f+p===0&&s++;break;case D:d+f+p===0&&s--;break;case F:d+f+s===0&&p--;break;case R:if(d+f+s===0){if(0===T)switch(2*w+3*S){case 533:break;default:_=0,T=1}p++}break;case B:f+p+d+s+P+C===0&&(C=1);break;case q:case J:if(d+s+p>0)break;switch(f){case 0:switch(2*b+3*o.charCodeAt(G+1)){case 235:f=J;break;case 220:Ce=G,f=q}break;case q:b===J&&w===q&&Ce+2!==G&&(33===o.charCodeAt(Ce+2)&&(Qe+=o.substring(Ce,G+1)),Ge="",f=0)}}if(0===f){if(ye+d+s+C===0&&i!==ie&&b!==I)switch(b){case Y:case te:case Z:case ee:case F:case R:if(0===T){switch(w){case W:case V:case U:case z:Ge+="\0";break;default:Ge="\0"+Ge+(b===Y?"":"\0")}we=1}else switch(b){case R:P+7===G&&108===w&&(P=0),T=++_;break;case F:0==(T=--_)&&(we=1,Ge+="\0")}break;case W:case V:switch(w){case ne:case j:case M:case I:case Y:case re:case W:case V:case U:case z:break;default:0===T&&(we=1,Ge+="\0")}}qe+=Ge,b!==V&&b!==W&&(E=b)}}S=w,w=b,G++}if(Ce=Qe.length,Se>0&&0===Ce&&0===Ke.length&&0===t[0].length==0&&(i!==ae||1===t.length&&(ye>0?Fe:Le)===t[0])&&(Ce=t.join(",").length+2),Ce>0){if(u=0===ye&&i!==ie?function(e){for(var t,n,o=0,i=e.length,a=Array(i);o<i;++o){for(var u=e[o].split(c),l="",s=0,f=0,p=0,d=0,h=u.length;s<h;++s)if(!(0===(f=(n=u[s]).length)&&h>1)){if(p=l.charCodeAt(l.length-1),d=n.charCodeAt(0),t="",0!==s)switch(p){case q:case te:case Z:case ee:case V:case R:break;default:t=" "}switch(d){case $:n=t+Fe;case te:case Z:case ee:case V:case F:case R:break;case L:n=t+n+Fe;break;case Q:switch(2*n.charCodeAt(1)+3*n.charCodeAt(2)){case 530:if(be>0){n=t+n.substring(8,f-1);break}default:(s<1||u[s-1].length<1)&&(n=t+Fe+n)}break;case Y:t="";default:n=f>1&&n.indexOf(":")>0?t+n.replace(x,"$1"+Fe+"$2"):t+n+Fe}l+=n}a[o]=l.replace(r,"").trim()}return a}(t):t,_e>0&&void 0!==(l=$e(Ne,Qe,u,e,ve,he,Ce,i,a,i))&&0===(Qe=l).length)return Xe+Qe+Ke;if(Qe=u.join(",")+"{"+Qe+"}",ge*me!=0){switch(2!==ge||Be(Qe,2)||(me=0),me){case ce:Qe=Qe.replace(m,":"+A+"$1")+Qe;break;case le:Qe=Qe.replace(v,"::"+O+"input-$1")+Qe.replace(v,"::"+A+"$1")+Qe.replace(v,":"+N+"input-$1")+Qe}me=0}}return Xe+Qe+Ke}function Ue(e,t,n){var r=t.trim().split(s),o=r,i=r.length,a=e.length;switch(a){case 0:case 1:for(var u=0,l=0===a?"":e[0]+" ";u<i;++u)o[u]=ze(l,o[u],n,a).trim();break;default:u=0;var c=0;for(o=[];u<i;++u)for(var f=0;f<a;++f)o[c++]=ze(e[f]+" ",r[u],n,a).trim()}return o}function ze(e,t,n,r){var o=t,i=o.charCodeAt(0);switch(i<33&&(i=(o=o.trim()).charCodeAt(0)),i){case $:switch(ye+r){case 0:case 1:if(0===e.trim().length)break;default:return o.replace(f,"$1"+e.trim())}break;case Q:switch(o.charCodeAt(1)){case 103:if(be>0&&ye>0)return o.replace(p,"$1").replace(f,"$1"+Le);break;default:return e.trim()+o.replace(f,"$1"+e.trim())}default:if(n*ye>0&&o.indexOf("\f")>0)return o.replace(f,(e.charCodeAt(0)===Q?"":"$1")+e.trim())}return e+o}function We(e,t,n,r){var c,s=0,f=e+";",p=2*t+3*n+4*r;if(944===p)return function(e){var t=e.length,n=e.indexOf(":",9)+1,r=e.substring(0,n).trim(),o=e.substring(n,t-1).trim();switch(e.charCodeAt(9)*je){case 0:break;case H:if(110!==e.charCodeAt(10))break;default:for(var i=o.split((o="",u)),a=0,n=0,t=i.length;a<t;n=0,++a){for(var c=i[a],s=c.split(l);c=s[n];){var f=c.charCodeAt(0);if(1===je&&(f>B&&f<90||f>96&&f<123||f===G||f===H&&c.charCodeAt(1)!==H))switch(isNaN(parseFloat(c))+(-1!==c.indexOf("("))){case 1:switch(c){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:c+=Re}}s[n++]=c}o+=(0===a?"":",")+s.join(" ")}}return o=r+o+";",1===ge||2===ge&&Be(o,1)?O+o+o:o}(f);if(0===ge||2===ge&&!Be(f,1))return f;switch(p){case 1015:return 97===f.charCodeAt(10)?O+f+f:f;case 951:return 116===f.charCodeAt(3)?O+f+f:f;case 963:return 110===f.charCodeAt(5)?O+f+f:f;case 1009:if(100!==f.charCodeAt(4))break;case 969:case 942:return O+f+f;case 978:return O+f+A+f+f;case 1019:case 983:return O+f+A+f+N+f+f;case 883:return f.charCodeAt(8)===H?O+f+f:f.indexOf("image-set(",11)>0?f.replace(P,"$1"+O+"$2")+f:f;case 932:if(f.charCodeAt(4)===H)switch(f.charCodeAt(5)){case 103:return O+"box-"+f.replace("-grow","")+O+f+N+f.replace("grow","positive")+f;case 115:return O+f+N+f.replace("shrink","negative")+f;case 98:return O+f+N+f.replace("basis","preferred-size")+f}return O+f+N+f+f;case 964:return O+f+N+"flex-"+f+f;case 1023:if(99!==f.charCodeAt(8))break;return c=f.substring(f.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),O+"box-pack"+c+O+f+N+"flex-pack"+c+f;case 1005:return i.test(f)?f.replace(o,":"+O)+f.replace(o,":"+A)+f:f;case 1e3:switch(s=(c=f.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(s)){case 226:c=f.replace(S,"tb");break;case 232:c=f.replace(S,"tb-rl");break;case 220:c=f.replace(S,"lr");break;default:return f}return O+f+N+c+f;case 1017:if(-1===f.indexOf("sticky",9))return f;case 975:switch(s=(f=e).length-10,p=(c=(33===f.charCodeAt(s)?f.substring(0,s):f).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(c.charCodeAt(8)<111)break;case 115:f=f.replace(c,O+c)+";"+f;break;case 207:case 102:f=f.replace(c,O+(p>102?"inline-":"")+"box")+";"+f.replace(c,O+c)+";"+f.replace(c,N+c+"box")+";"+f}return f+";";case 938:if(f.charCodeAt(5)===H)switch(f.charCodeAt(6)){case 105:return c=f.replace("-items",""),O+f+O+"box-"+c+N+"flex-"+c+f;case 115:return O+f+N+"flex-item-"+f.replace(_,"")+f;default:return O+f+N+"flex-line-pack"+f.replace("align-content","").replace(_,"")+f}break;case 973:case 989:if(f.charCodeAt(3)!==H||122===f.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?We(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):f.replace(c,O+c)+f.replace(c,A+c.replace("fill-",""))+f;break;case 962:if(f=O+f+(102===f.charCodeAt(5)?N+f:"")+f,n+r===211&&105===f.charCodeAt(13)&&f.indexOf("transform",10)>0)return f.substring(0,f.indexOf(";",27)+1).replace(a,"$1"+O+"$2")+f}return f}function Be(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10),o=e.substring(n+1,e.length-1);return Te(2!==t?r:r.replace(T,"$1"),o,t)}function Ve(e,t){var n=We(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(E," or ($1)").substring(4):"("+t+")"}function $e(e,t,n,r,o,i,a,u,l,c){for(var s,f=0,p=t;f<_e;++f)switch(s=Ee[f].call(qe,e,p,n,r,o,i,a,u,l,c)){case void 0:case!1:case!0:case null:break;default:p=s}if(p!==t)return p}function He(e,t,n,r){for(var o=t+1;o<n;++o)switch(r.charCodeAt(o)){case J:if(e===q&&r.charCodeAt(o-1)===q&&t+2!==o)return o+1;break;case U:if(e===J)return o+1}return o}function Ge(e){for(var t in e){var n=e[t];switch(t){case"keyframe":je=0|n;break;case"global":be=0|n;break;case"cascade":ye=0|n;break;case"compress":we=0|n;break;case"semicolon":xe=0|n;break;case"preserve":Se=0|n;break;case"prefix":Te=null,n?"function"!=typeof n?ge=1:(ge=2,Te=n):ge=0}}return Ge}function qe(t,n){if(void 0!==this&&this.constructor===qe)return e(t);var o=t,i=o.charCodeAt(0);i<33&&(i=(o=o.trim()).charCodeAt(0)),je>0&&(Re=o.replace(d,i===L?"":"-")),i=1,1===ye?Le=o:Fe=o;var a,u=[Le];_e>0&&void 0!==(a=$e(Pe,n,u,u,ve,he,0,0,0,0))&&"string"==typeof a&&(n=a);var l=De(ke,u,n,0,0);return _e>0&&void 0!==(a=$e(Ce,l,u,u,ve,he,l.length,0,0,0))&&"string"!=typeof(l=a)&&(i=0),Re="",Le="",Fe="",me=0,ve=1,he=1,we*i==0?l:l.replace(r,"").replace(y,"").replace(g,"$1").replace(b,"$1").replace(w," ")}return qe.use=function e(t){switch(t){case void 0:case null:_e=Ee.length=0;break;default:if("function"==typeof t)Ee[_e++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else Me=0|!!t}return e},qe.set=Ge,void 0!==t&&Ge(t),qe}(null)},function(e,t,n){"use strict";e.exports=n(325)},function(e,t,n){"use strict";function r(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}t.a=function(e,t){var n;void 0===t&&(t=r);var o,i=[],a=!1;return function(){for(var r=arguments.length,u=new Array(r),l=0;l<r;l++)u[l]=arguments[l];return a&&n===this&&t(u,i)?o:(o=e.apply(this,u),a=!0,n=this,i=u,o)}}},function(e,t,n){e.exports=!n(9)&&!n(3)(function(){return 7!=Object.defineProperty(n(62)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(2),o=n(8),i=n(31),a=n(63),u=n(10).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||u(t,e,{value:a.f(e)})}},function(e,t,n){var r=n(14),o=n(16),i=n(50)(!1),a=n(64)("IE_PROTO");e.exports=function(e,t){var n,u=o(e),l=0,c=[];for(n in u)n!=a&&r(u,n)&&c.push(n);for(;t.length>l;)r(u,n=t[l++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(10),o=n(4),i=n(32);e.exports=n(9)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),u=a.length,l=0;u>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){var r=n(16),o=n(35).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){"use strict";var r=n(9),o=n(32),i=n(51),a=n(46),u=n(11),l=n(45),c=Object.assign;e.exports=!c||n(3)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r})?function(e,t){for(var n=u(e),c=arguments.length,s=1,f=i.f,p=a.f;c>s;)for(var d,h=l(arguments[s++]),v=f?o(h).concat(f(h)):o(h),m=v.length,y=0;m>y;)d=v[y++],r&&!p.call(h,d)||(n[d]=h[d]);return n}:c},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(19),o=n(5),i=n(101),a=[].slice,u={};e.exports=Function.bind||function(e){var t=r(this),n=a.call(arguments,1),l=function(){var r=n.concat(a.call(arguments));return this instanceof l?function(e,t,n){if(!(t in u)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";u[t]=Function("F,a","return new F("+r.join(",")+")")}return u[t](e,n)}(t,r.length,r):i(t,r,e)};return o(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2).parseInt,o=n(40).trim,i=n(68),a=/^[-+]?0[xX]/;e.exports=8!==r(i+"08")||22!==r(i+"0x16")?function(e,t){var n=o(String(e),3);return r(n,t>>>0||(a.test(n)?16:10))}:r},function(e,t,n){var r=n(2).parseFloat,o=n(40).trim;e.exports=1/r(n(68)+"-0")!=-1/0?function(e){var t=o(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},function(e,t,n){var r=n(24);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},function(e,t,n){var r=n(5),o=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&o(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,n){"use strict";var r=n(34),o=n(29),i=n(39),a={};n(15)(a,n(6)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(4);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(227);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){var r=n(19),o=n(11),i=n(45),a=n(7);e.exports=function(e,t,n,u,l){r(t);var c=o(e),s=i(c),f=a(c.length),p=l?f-1:0,d=l?-1:1;if(n<2)for(;;){if(p in s){u=s[p],p+=d;break}if(p+=d,l?p<0:f<=p)throw TypeError("Reduce of empty array with no initial value")}for(;l?p>=0:f>p;p+=d)p in s&&(u=t(u,s[p],p,c));return u}},function(e,t,n){"use strict";var r=n(11),o=n(33),i=n(7);e.exports=[].copyWithin||function(e,t){var n=r(this),a=i(n.length),u=o(e,a),l=o(t,a),c=arguments.length>2?arguments[2]:void 0,s=Math.min((void 0===c?a:o(c,a))-l,a-u),f=1;for(l<u&&u<l+s&&(f=-1,l+=s-1,u+=s-1);s-- >0;)l in n?n[u]=n[l]:delete n[u],u+=f,l+=f;return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r=n(83);n(0)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(e,t,n){n(9)&&"g"!=/./g.flags&&n(10).f(RegExp.prototype,"flags",{configurable:!0,get:n(54)})},function(e,t,n){"use strict";var r,o,i,a,u=n(31),l=n(2),c=n(18),s=n(47),f=n(0),p=n(5),d=n(19),h=n(43),v=n(57),m=n(48),y=n(85).set,g=n(247)(),b=n(116),w=n(248),x=n(58),S=n(117),k=l.TypeError,E=l.process,_=E&&E.versions,T=_&&_.v8||"",C=l.Promise,P="process"==s(E),O=function(){},A=o=b.f,N=!!function(){try{var e=C.resolve(1),t=(e.constructor={})[n(6)("species")]=function(e){e(O,O)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(O)instanceof t&&0!==T.indexOf("6.6")&&-1===x.indexOf("Chrome/66")}catch(e){}}(),I=function(e){var t;return!(!p(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;g(function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,u=o?t.ok:t.fail,l=t.resolve,c=t.reject,s=t.domain;try{u?(o||(2==e._h&&F(e),e._h=1),!0===u?n=r:(s&&s.enter(),n=u(r),s&&(s.exit(),a=!0)),n===t.promise?c(k("Promise-chain cycle")):(i=I(n))?i.call(n,l,c):l(n)):c(r)}catch(e){s&&!a&&s.exit(),c(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&j(e)})}},j=function(e){y.call(l,function(){var t,n,r,o=e._v,i=R(e);if(i&&(t=w(function(){P?E.emit("unhandledRejection",o,e):(n=l.onunhandledrejection)?n({promise:e,reason:o}):(r=l.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=P||R(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},R=function(e){return 1!==e._h&&0===(e._a||e._c).length},F=function(e){y.call(l,function(){var t;P?E.emit("rejectionHandled",e):(t=l.onrejectionhandled)&&t({promise:e,reason:e._v})})},L=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},D=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw k("Promise can't be resolved itself");(t=I(e))?g(function(){var r={_w:n,_d:!1};try{t.call(e,c(D,r,1),c(L,r,1))}catch(e){L.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){L.call({_w:n,_d:!1},e)}}};N||(C=function(e){h(this,C,"Promise","_h"),d(e),r.call(this);try{e(c(D,this,1),c(L,this,1))}catch(e){L.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(44)(C.prototype,{then:function(e,t){var n=A(m(this,C));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=P?E.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(D,e,1),this.reject=c(L,e,1)},b.f=A=function(e){return e===C||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!N,{Promise:C}),n(39)(C,"Promise"),n(42)("Promise"),a=n(8).Promise,f(f.S+f.F*!N,"Promise",{reject:function(e){var t=A(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(u||!N),"Promise",{resolve:function(e){return S(u&&this===a?C:this,e)}}),f(f.S+f.F*!(N&&n(53)(function(e){C.all(e).catch(O)})),"Promise",{all:function(e){var t=this,n=A(t),r=n.resolve,o=n.reject,i=w(function(){var n=[],i=0,a=1;v(e,!1,function(e){var u=i++,l=!1;n.push(void 0),a++,t.resolve(e).then(function(e){l||(l=!0,n[u]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=A(t),r=n.reject,o=w(function(){v(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},function(e,t,n){"use strict";var r=n(19);function o(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},function(e,t,n){var r=n(4),o=n(5),i=n(116);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(10).f,o=n(34),i=n(44),a=n(18),u=n(43),l=n(57),c=n(74),s=n(112),f=n(42),p=n(9),d=n(28).fastKey,h=n(38),v=p?"_s":"size",m=function(e,t){var n,r=d(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var s=e(function(e,r){u(e,s,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[v]=0,null!=r&&l(r,n,e[c],e)});return i(s.prototype,{clear:function(){for(var e=h(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[v]=0},delete:function(e){var n=h(this,t),r=m(n,e);if(r){var o=r.n,i=r.p;delete n._i[r.i],r.r=!0,i&&(i.n=o),o&&(o.p=i),n._f==r&&(n._f=o),n._l==r&&(n._l=i),n[v]--}return!!r},forEach:function(e){h(this,t);for(var n,r=a(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!m(h(this,t),e)}}),p&&r(s.prototype,"size",{get:function(){return h(this,t)[v]}}),s},def:function(e,t,n){var r,o,i=m(e,t);return i?i.v=n:(e._l=i={i:o=d(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=i),r&&(r.n=i),e[v]++,"F"!==o&&(e._i[o]=i)),e},getEntry:m,setStrong:function(e,t,n){c(e,t,function(e,n){this._t=h(e,t),this._k=n,this._l=void 0},function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?s(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,s(1))},n?"entries":"values",!n,!0),f(t)}}},function(e,t,n){"use strict";var r=n(44),o=n(28).getWeak,i=n(4),a=n(5),u=n(43),l=n(57),c=n(23),s=n(14),f=n(38),p=c(5),d=c(6),h=0,v=function(e){return e._l||(e._l=new m)},m=function(){this.a=[]},y=function(e,t){return p(e.a,function(e){return e[0]===t})};m.prototype={get:function(e){var t=y(this,e);if(t)return t[1]},has:function(e){return!!y(this,e)},set:function(e,t){var n=y(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=d(this.a,function(t){return t[0]===e});return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,i){var c=e(function(e,r){u(e,c,t,"_i"),e._t=t,e._i=h++,e._l=void 0,null!=r&&l(r,n,e[i],e)});return r(c.prototype,{delete:function(e){if(!a(e))return!1;var n=o(e);return!0===n?v(f(this,t)).delete(e):n&&s(n,this._i)&&delete n[this._i]},has:function(e){if(!a(e))return!1;var n=o(e);return!0===n?v(f(this,t)).has(e):n&&s(n,this._i)}}),c},def:function(e,t,n){var r=o(i(t),!0);return!0===r?v(e).set(t,n):r[e._i]=n,e},ufstore:v}},function(e,t,n){var r=n(20),o=n(7);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=o(t);if(t!==n)throw RangeError("Wrong length!");return n}},function(e,t,n){var r=n(35),o=n(51),i=n(4),a=n(2).Reflect;e.exports=a&&a.ownKeys||function(e){var t=r.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){var r=n(7),o=n(70),i=n(25);e.exports=function(e,t,n,a){var u=String(i(e)),l=u.length,c=void 0===n?" ":String(n),s=r(t);if(s<=l||""==c)return u;var f=s-l,p=o.call(c,Math.ceil(f/c.length));return p.length>f&&(p=p.slice(0,f)),a?p+u:u+p}},function(e,t,n){var r=n(9),o=n(32),i=n(16),a=n(46).f;e.exports=function(e){return function(t){for(var n,u=i(t),l=o(u),c=l.length,s=0,f=[];c>s;)n=l[s++],r&&!a.call(u,n)||f.push(e?[n,u[n]]:u[n]);return f}}},function(e,t){var n=e.exports={version:"2.6.6"};"number"==typeof __e&&(__e=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))o.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(320)},function(e,t,n){e.exports=function(){"use strict";return function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,i,a,u,l,c,s,f){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}}()},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}(function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91});t.a=o},function(e,t,n){"use strict";function r(e){return Object.prototype.toString.call(e).slice(8,-1)}function o(e){return"Object"===r(e)&&(e.constructor===Object&&Object.getPrototypeOf(e)===Object.prototype)}function i(e){return"Array"===r(e)}function a(e){return"Symbol"===r(e)}function u(e,t,n,r){var o=r.propertyIsEnumerable(t)?"enumerable":"nonenumerable";"enumerable"===o&&(e[t]=n),"nonenumerable"===o&&Object.defineProperty(e,t,{value:n,enumerable:!1,writable:!0,configurable:!0})}t.a=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=null,l=e;return o(e)&&e.extensions&&1===Object.keys(e).length&&(l={},r=e.extensions),t.reduce(function(e,t){return function e(t,n,r){if(!o(n))return r&&i(r)&&r.forEach(function(e){n=e(t,n)}),n;var l={};if(o(t)){var c=Object.getOwnPropertyNames(t),s=Object.getOwnPropertySymbols(t);l=c.concat(s).reduce(function(e,r){var o=t[r];return(!a(r)&&!Object.getOwnPropertyNames(n).includes(r)||a(r)&&!Object.getOwnPropertySymbols(n).includes(r))&&u(e,r,o,t),e},{})}var f=Object.getOwnPropertyNames(n),p=Object.getOwnPropertySymbols(n);return f.concat(p).reduce(function(a,l){var c=n[l],s=o(t)?t[l]:void 0;return r&&i(r)&&r.forEach(function(e){c=e(s,c)}),void 0!==s&&o(c)&&(c=e(s,c,r)),u(a,l,c,n),a},l)}(e,t,r)},l)}},function(e,t,n){n(133),e.exports=n(329)},function(e,t,n){"use strict";n(134);var r,o=(r=n(306))&&r.__esModule?r:{default:r};o.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),o.default._babelPolyfill=!0},function(e,t,n){"use strict";n(135),n(278),n(280),n(283),n(285),n(287),n(289),n(291),n(293),n(295),n(297),n(299),n(301),n(305)},function(e,t,n){n(136),n(139),n(140),n(141),n(142),n(143),n(144),n(145),n(146),n(147),n(148),n(149),n(150),n(151),n(152),n(153),n(154),n(155),n(156),n(157),n(158),n(159),n(160),n(161),n(162),n(163),n(164),n(165),n(166),n(167),n(168),n(169),n(170),n(171),n(172),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(197),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(215),n(217),n(218),n(220),n(221),n(222),n(223),n(224),n(225),n(226),n(228),n(229),n(230),n(231),n(232),n(233),n(234),n(235),n(236),n(237),n(238),n(239),n(240),n(82),n(241),n(113),n(242),n(114),n(243),n(244),n(245),n(246),n(115),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262),n(263),n(264),n(265),n(266),n(267),n(268),n(269),n(270),n(271),n(272),n(273),n(274),n(275),n(276),n(277),e.exports=n(8)},function(e,t,n){"use strict";var r=n(2),o=n(14),i=n(9),a=n(0),u=n(12),l=n(28).KEY,c=n(3),s=n(49),f=n(39),p=n(30),d=n(6),h=n(63),v=n(94),m=n(138),y=n(52),g=n(4),b=n(5),w=n(11),x=n(16),S=n(27),k=n(29),E=n(34),_=n(97),T=n(21),C=n(51),P=n(10),O=n(32),A=T.f,N=P.f,I=_.f,M=r.Symbol,j=r.JSON,R=j&&j.stringify,F=d("_hidden"),L=d("toPrimitive"),D={}.propertyIsEnumerable,U=s("symbol-registry"),z=s("symbols"),W=s("op-symbols"),B=Object.prototype,V="function"==typeof M,$=r.QObject,H=!$||!$.prototype||!$.prototype.findChild,G=i&&c(function(){return 7!=E(N({},"a",{get:function(){return N(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=A(B,t);r&&delete B[t],N(e,t,n),r&&e!==B&&N(B,t,r)}:N,q=function(e){var t=z[e]=E(M.prototype);return t._k=e,t},Y=V&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},Q=function(e,t,n){return e===B&&Q(W,t,n),g(e),t=S(t,!0),g(n),o(z,t)?(n.enumerable?(o(e,F)&&e[F][t]&&(e[F][t]=!1),n=E(n,{enumerable:k(0,!1)})):(o(e,F)||N(e,F,k(1,{})),e[F][t]=!0),G(e,t,n)):N(e,t,n)},K=function(e,t){g(e);for(var n,r=m(t=x(t)),o=0,i=r.length;i>o;)Q(e,n=r[o++],t[n]);return e},X=function(e){var t=D.call(this,e=S(e,!0));return!(this===B&&o(z,e)&&!o(W,e))&&(!(t||!o(this,e)||!o(z,e)||o(this,F)&&this[F][e])||t)},J=function(e,t){if(e=x(e),t=S(t,!0),e!==B||!o(z,t)||o(W,t)){var n=A(e,t);return!n||!o(z,t)||o(e,F)&&e[F][t]||(n.enumerable=!0),n}},Z=function(e){for(var t,n=I(x(e)),r=[],i=0;n.length>i;)o(z,t=n[i++])||t==F||t==l||r.push(t);return r},ee=function(e){for(var t,n=e===B,r=I(n?W:x(e)),i=[],a=0;r.length>a;)!o(z,t=r[a++])||n&&!o(B,t)||i.push(z[t]);return i};V||(u((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===B&&t.call(W,n),o(this,F)&&o(this[F],e)&&(this[F][e]=!1),G(this,e,k(1,n))};return i&&H&&G(B,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),T.f=J,P.f=Q,n(35).f=_.f=Z,n(46).f=X,C.f=ee,i&&!n(31)&&u(B,"propertyIsEnumerable",X,!0),h.f=function(e){return q(d(e))}),a(a.G+a.W+a.F*!V,{Symbol:M});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)d(te[ne++]);for(var re=O(d.store),oe=0;re.length>oe;)v(re[oe++]);a(a.S+a.F*!V,"Symbol",{for:function(e){return o(U,e+="")?U[e]:U[e]=M(e)},keyFor:function(e){if(!Y(e))throw TypeError(e+" is not a symbol!");for(var t in U)if(U[t]===e)return t},useSetter:function(){H=!0},useSimple:function(){H=!1}}),a(a.S+a.F*!V,"Object",{create:function(e,t){return void 0===t?E(e):K(E(e),t)},defineProperty:Q,defineProperties:K,getOwnPropertyDescriptor:J,getOwnPropertyNames:Z,getOwnPropertySymbols:ee});var ie=c(function(){C.f(1)});a(a.S+a.F*ie,"Object",{getOwnPropertySymbols:function(e){return C.f(w(e))}}),j&&a(a.S+a.F*(!V||c(function(){var e=M();return"[null]"!=R([e])||"{}"!=R({a:e})||"{}"!=R(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!Y(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Y(t))return t}),r[1]=t,R.apply(j,r)}}),M.prototype[L]||n(15)(M.prototype,L,M.prototype.valueOf),f(M,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){e.exports=n(49)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(32),o=n(51),i=n(46);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,u=n(e),l=i.f,c=0;u.length>c;)l.call(e,a=u[c++])&&t.push(a);return t}},function(e,t,n){var r=n(0);r(r.S,"Object",{create:n(34)})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(9),"Object",{defineProperty:n(10).f})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(9),"Object",{defineProperties:n(96)})},function(e,t,n){var r=n(16),o=n(21).f;n(22)("getOwnPropertyDescriptor",function(){return function(e,t){return o(r(e),t)}})},function(e,t,n){var r=n(11),o=n(36);n(22)("getPrototypeOf",function(){return function(e){return o(r(e))}})},function(e,t,n){var r=n(11),o=n(32);n(22)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){n(22)("getOwnPropertyNames",function(){return n(97).f})},function(e,t,n){var r=n(5),o=n(28).onFreeze;n(22)("freeze",function(e){return function(t){return e&&r(t)?e(o(t)):t}})},function(e,t,n){var r=n(5),o=n(28).onFreeze;n(22)("seal",function(e){return function(t){return e&&r(t)?e(o(t)):t}})},function(e,t,n){var r=n(5),o=n(28).onFreeze;n(22)("preventExtensions",function(e){return function(t){return e&&r(t)?e(o(t)):t}})},function(e,t,n){var r=n(5);n(22)("isFrozen",function(e){return function(t){return!r(t)||!!e&&e(t)}})},function(e,t,n){var r=n(5);n(22)("isSealed",function(e){return function(t){return!r(t)||!!e&&e(t)}})},function(e,t,n){var r=n(5);n(22)("isExtensible",function(e){return function(t){return!!r(t)&&(!e||e(t))}})},function(e,t,n){var r=n(0);r(r.S+r.F,"Object",{assign:n(98)})},function(e,t,n){var r=n(0);r(r.S,"Object",{is:n(99)})},function(e,t,n){var r=n(0);r(r.S,"Object",{setPrototypeOf:n(67).set})},function(e,t,n){"use strict";var r=n(47),o={};o[n(6)("toStringTag")]="z",o+""!="[object z]"&&n(12)(Object.prototype,"toString",function(){return"[object "+r(this)+"]"},!0)},function(e,t,n){var r=n(0);r(r.P,"Function",{bind:n(100)})},function(e,t,n){var r=n(10).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||n(9)&&r(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(5),o=n(36),i=n(6)("hasInstance"),a=Function.prototype;i in a||n(10).f(a,i,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,n){var r=n(0),o=n(102);r(r.G+r.F*(parseInt!=o),{parseInt:o})},function(e,t,n){var r=n(0),o=n(103);r(r.G+r.F*(parseFloat!=o),{parseFloat:o})},function(e,t,n){"use strict";var r=n(2),o=n(14),i=n(24),a=n(69),u=n(27),l=n(3),c=n(35).f,s=n(21).f,f=n(10).f,p=n(40).trim,d=r.Number,h=d,v=d.prototype,m="Number"==i(n(34)(v)),y="trim"in String.prototype,g=function(e){var t=u(e,!1);if("string"==typeof t&&t.length>2){var n,r,o,i=(t=y?t.trim():p(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+t}for(var a,l=t.slice(2),c=0,s=l.length;c<s;c++)if((a=l.charCodeAt(c))<48||a>o)return NaN;return parseInt(l,r)}}return+t};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof d&&(m?l(function(){v.valueOf.call(n)}):"Number"!=i(n))?a(new h(g(t)),n,d):g(t)};for(var b,w=n(9)?c(h):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),x=0;w.length>x;x++)o(h,b=w[x])&&!o(d,b)&&f(d,b,s(h,b));d.prototype=v,v.constructor=d,n(12)(r,"Number",d)}},function(e,t,n){"use strict";var r=n(0),o=n(20),i=n(104),a=n(70),u=1..toFixed,l=Math.floor,c=[0,0,0,0,0,0],s="Number.toFixed: incorrect invocation!",f=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*c[n],c[n]=r%1e7,r=l(r/1e7)},p=function(e){for(var t=6,n=0;--t>=0;)n+=c[t],c[t]=l(n/e),n=n%e*1e7},d=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var n=String(c[e]);t=""===t?n:t+a.call("0",7-n.length)+n}return t},h=function(e,t,n){return 0===t?n:t%2==1?h(e,t-1,n*e):h(e*e,t/2,n)};r(r.P+r.F*(!!u&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(3)(function(){u.call({})})),"Number",{toFixed:function(e){var t,n,r,u,l=i(this,s),c=o(e),v="",m="0";if(c<0||c>20)throw RangeError(s);if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(v="-",l=-l),l>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(l*h(2,69,1))-69)<0?l*h(2,-t,1):l/h(2,t,1),n*=4503599627370496,(t=52-t)>0){for(f(0,n),r=c;r>=7;)f(1e7,0),r-=7;for(f(h(10,r,1),0),r=t-1;r>=23;)p(1<<23),r-=23;p(1<<r),f(1,1),p(2),m=d()}else f(0,n),f(1<<-t,0),m=d()+a.call("0",c);return m=c>0?v+((u=m.length)<=c?"0."+a.call("0",c-u)+m:m.slice(0,u-c)+"."+m.slice(u-c)):v+m}})},function(e,t,n){"use strict";var r=n(0),o=n(3),i=n(104),a=1..toPrecision;r(r.P+r.F*(o(function(){return"1"!==a.call(1,void 0)})||!o(function(){a.call({})})),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,n){var r=n(0),o=n(2).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{isInteger:n(105)})},function(e,t,n){var r=n(0);r(r.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,n){var r=n(0),o=n(105),i=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},function(e,t,n){var r=n(0);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,n){var r=n(0);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,n){var r=n(0),o=n(103);r(r.S+r.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},function(e,t,n){var r=n(0),o=n(102);r(r.S+r.F*(Number.parseInt!=o),"Number",{parseInt:o})},function(e,t,n){var r=n(0),o=n(106),i=Math.sqrt,a=Math.acosh;r(r.S+r.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},function(e,t,n){var r=n(0),o=Math.asinh;r(r.S+r.F*!(o&&1/o(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,n){var r=n(0),o=Math.atanh;r(r.S+r.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,n){var r=n(0),o=n(71);r(r.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,n){var r=n(0),o=Math.exp;r(r.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,n){var r=n(0),o=n(72);r(r.S+r.F*(o!=Math.expm1),"Math",{expm1:o})},function(e,t,n){var r=n(0);r(r.S,"Math",{fround:n(181)})},function(e,t,n){var r=n(71),o=Math.pow,i=o(2,-52),a=o(2,-23),u=o(2,127)*(2-a),l=o(2,-126);e.exports=Math.fround||function(e){var t,n,o=Math.abs(e),c=r(e);return o<l?c*(o/l/a+1/i-1/i)*l*a:(n=(t=(1+a/i)*o)-(t-o))>u||n!=n?c*(1/0):c*n}},function(e,t,n){var r=n(0),o=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,i=0,a=0,u=arguments.length,l=0;a<u;)l<(n=o(arguments[a++]))?(i=i*(r=l/n)*r+1,l=n):i+=n>0?(r=n/l)*r:n;return l===1/0?1/0:l*Math.sqrt(i)}})},function(e,t,n){var r=n(0),o=Math.imul;r(r.S+r.F*n(3)(function(){return-5!=o(4294967295,5)||2!=o.length}),"Math",{imul:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r;return 0|o*i+((65535&n>>>16)*i+o*(65535&r>>>16)<<16>>>0)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log1p:n(106)})},function(e,t,n){var r=n(0);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,n){var r=n(0);r(r.S,"Math",{sign:n(71)})},function(e,t,n){var r=n(0),o=n(72),i=Math.exp;r(r.S+r.F*n(3)(function(){return-2e-17!=!Math.sinh(-2e-17)}),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},function(e,t,n){var r=n(0),o=n(72),i=Math.exp;r(r.S,"Math",{tanh:function(e){var t=o(e=+e),n=o(-e);return t==1/0?1:n==1/0?-1:(t-n)/(i(e)+i(-e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,n){var r=n(0),o=n(33),i=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,a=0;r>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},function(e,t,n){var r=n(0),o=n(16),i=n(7);r(r.S,"String",{raw:function(e){for(var t=o(e.raw),n=i(t.length),r=arguments.length,a=[],u=0;n>u;)a.push(String(t[u++])),u<r&&a.push(String(arguments[u]));return a.join("")}})},function(e,t,n){"use strict";n(40)("trim",function(e){return function(){return e(this,3)}})},function(e,t,n){"use strict";var r=n(73)(!0);n(74)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){"use strict";var r=n(0),o=n(73)(!1);r(r.P,"String",{codePointAt:function(e){return o(this,e)}})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(75),a="".endsWith;r(r.P+r.F*n(77)("endsWith"),"String",{endsWith:function(e){var t=i(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=o(t.length),u=void 0===n?r:Math.min(o(n),r),l=String(e);return a?a.call(t,l,u):t.slice(u-l.length,u)===l}})},function(e,t,n){"use strict";var r=n(0),o=n(75);r(r.P+r.F*n(77)("includes"),"String",{includes:function(e){return!!~o(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0);r(r.P,"String",{repeat:n(70)})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(75),a="".startsWith;r(r.P+r.F*n(77)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),n=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return a?a.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){"use strict";n(13)("anchor",function(e){return function(t){return e(this,"a","name",t)}})},function(e,t,n){"use strict";n(13)("big",function(e){return function(){return e(this,"big","","")}})},function(e,t,n){"use strict";n(13)("blink",function(e){return function(){return e(this,"blink","","")}})},function(e,t,n){"use strict";n(13)("bold",function(e){return function(){return e(this,"b","","")}})},function(e,t,n){"use strict";n(13)("fixed",function(e){return function(){return e(this,"tt","","")}})},function(e,t,n){"use strict";n(13)("fontcolor",function(e){return function(t){return e(this,"font","color",t)}})},function(e,t,n){"use strict";n(13)("fontsize",function(e){return function(t){return e(this,"font","size",t)}})},function(e,t,n){"use strict";n(13)("italics",function(e){return function(){return e(this,"i","","")}})},function(e,t,n){"use strict";n(13)("link",function(e){return function(t){return e(this,"a","href",t)}})},function(e,t,n){"use strict";n(13)("small",function(e){return function(){return e(this,"small","","")}})},function(e,t,n){"use strict";n(13)("strike",function(e){return function(){return e(this,"strike","","")}})},function(e,t,n){"use strict";n(13)("sub",function(e){return function(){return e(this,"sub","","")}})},function(e,t,n){"use strict";n(13)("sup",function(e){return function(){return e(this,"sup","","")}})},function(e,t,n){var r=n(0);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(0),o=n(11),i=n(27);r(r.P+r.F*n(3)(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function(e){var t=o(this),n=i(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){var r=n(0),o=n(216);r(r.P+r.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},function(e,t,n){"use strict";var r=n(3),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=r(function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-5e13-1))})||!r(function(){i.call(new Date(NaN))})?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(n>99?n:"0"+a(n))+"Z"}:i},function(e,t,n){var r=Date.prototype,o=r.toString,i=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(12)(r,"toString",function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"})},function(e,t,n){var r=n(6)("toPrimitive"),o=Date.prototype;r in o||n(15)(o,r,n(219))},function(e,t,n){"use strict";var r=n(4),o=n(27);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return o(r(this),"number"!=e)}},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(52)})},function(e,t,n){"use strict";var r=n(18),o=n(0),i=n(11),a=n(108),u=n(78),l=n(7),c=n(79),s=n(80);o(o.S+o.F*!n(53)(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,o,f,p=i(e),d="function"==typeof this?this:Array,h=arguments.length,v=h>1?arguments[1]:void 0,m=void 0!==v,y=0,g=s(p);if(m&&(v=r(v,h>2?arguments[2]:void 0,2)),null==g||d==Array&&u(g))for(n=new d(t=l(p.length));t>y;y++)c(n,y,m?v(p[y],y):p[y]);else for(f=g.call(p),n=new d;!(o=f.next()).done;y++)c(n,y,m?a(f,v,[o.value,y],!0):o.value);return n.length=y,n}})},function(e,t,n){"use strict";var r=n(0),o=n(79);r(r.S+r.F*n(3)(function(){function e(){}return!(Array.of.call(e)instanceof e)}),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),o=n(16),i=[].join;r(r.P+r.F*(n(45)!=Object||!n(17)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),o=n(66),i=n(24),a=n(33),u=n(7),l=[].slice;r(r.P+r.F*n(3)(function(){o&&l.call(o)}),"Array",{slice:function(e,t){var n=u(this.length),r=i(this);if(t=void 0===t?n:t,"Array"==r)return l.call(this,e,t);for(var o=a(e,n),c=a(t,n),s=u(c-o),f=new Array(s),p=0;p<s;p++)f[p]="String"==r?this.charAt(o+p):this[o+p];return f}})},function(e,t,n){"use strict";var r=n(0),o=n(19),i=n(11),a=n(3),u=[].sort,l=[1,2,3];r(r.P+r.F*(a(function(){l.sort(void 0)})||!a(function(){l.sort(null)})||!n(17)(u)),"Array",{sort:function(e){return void 0===e?u.call(i(this)):u.call(i(this),o(e))}})},function(e,t,n){"use strict";var r=n(0),o=n(23)(0),i=n(17)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,n){var r=n(5),o=n(52),i=n(6)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),o=n(23)(1);r(r.P+r.F*!n(17)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(23)(2);r(r.P+r.F*!n(17)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(23)(3);r(r.P+r.F*!n(17)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(23)(4);r(r.P+r.F*!n(17)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(110);r(r.P+r.F*!n(17)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),o=n(110);r(r.P+r.F*!n(17)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(50)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!n(17)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(16),i=n(20),a=n(7),u=[].lastIndexOf,l=!!u&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(l||!n(17)(u)),"Array",{lastIndexOf:function(e){if(l)return u.apply(this,arguments)||0;var t=o(this),n=a(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(111)}),n(37)("copyWithin")},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(81)}),n(37)("fill")},function(e,t,n){"use strict";var r=n(0),o=n(23)(5),i=!0;"find"in[]&&Array(1).find(function(){i=!1}),r(r.P+r.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(37)("find")},function(e,t,n){"use strict";var r=n(0),o=n(23)(6),i="findIndex",a=!0;i in[]&&Array(1)[i](function(){a=!1}),r(r.P+r.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(37)(i)},function(e,t,n){n(42)("Array")},function(e,t,n){var r=n(2),o=n(69),i=n(10).f,a=n(35).f,u=n(76),l=n(54),c=r.RegExp,s=c,f=c.prototype,p=/a/g,d=/a/g,h=new c(p)!==p;if(n(9)&&(!h||n(3)(function(){return d[n(6)("match")]=!1,c(p)!=p||c(d)==d||"/a/i"!=c(p,"i")}))){c=function(e,t){var n=this instanceof c,r=u(e),i=void 0===t;return!n&&r&&e.constructor===c&&i?e:o(h?new s(r&&!i?e.source:e,t):s((r=e instanceof c)?e.source:e,r&&i?l.call(e):t),n?this:f,c)};for(var v=function(e){e in c||i(c,e,{configurable:!0,get:function(){return s[e]},set:function(t){s[e]=t}})},m=a(s),y=0;m.length>y;)v(m[y++]);f.constructor=c,c.prototype=f,n(12)(r,"RegExp",c)}n(42)("RegExp")},function(e,t,n){"use strict";n(114);var r=n(4),o=n(54),i=n(9),a=/./.toString,u=function(e){n(12)(RegExp.prototype,"toString",e,!0)};n(3)(function(){return"/a/b"!=a.call({source:"a",flags:"b"})})?u(function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)}):"toString"!=a.name&&u(function(){return a.call(this)})},function(e,t,n){"use strict";var r=n(4),o=n(7),i=n(84),a=n(55);n(56)("match",1,function(e,t,n,u){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=u(n,e,this);if(t.done)return t.value;var l=r(e),c=String(this);if(!l.global)return a(l,c);var s=l.unicode;l.lastIndex=0;for(var f,p=[],d=0;null!==(f=a(l,c));){var h=String(f[0]);p[d]=h,""===h&&(l.lastIndex=i(c,o(l.lastIndex),s)),d++}return 0===d?null:p}]})},function(e,t,n){"use strict";var r=n(4),o=n(11),i=n(7),a=n(20),u=n(84),l=n(55),c=Math.max,s=Math.min,f=Math.floor,p=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g;n(56)("replace",2,function(e,t,n,h){return[function(r,o){var i=e(this),a=null==r?void 0:r[t];return void 0!==a?a.call(r,i,o):n.call(String(i),r,o)},function(e,t){var o=h(n,e,this,t);if(o.done)return o.value;var f=r(e),p=String(this),d="function"==typeof t;d||(t=String(t));var m=f.global;if(m){var y=f.unicode;f.lastIndex=0}for(var g=[];;){var b=l(f,p);if(null===b)break;if(g.push(b),!m)break;""===String(b[0])&&(f.lastIndex=u(p,i(f.lastIndex),y))}for(var w,x="",S=0,k=0;k<g.length;k++){b=g[k];for(var E=String(b[0]),_=c(s(a(b.index),p.length),0),T=[],C=1;C<b.length;C++)T.push(void 0===(w=b[C])?w:String(w));var P=b.groups;if(d){var O=[E].concat(T,_,p);void 0!==P&&O.push(P);var A=String(t.apply(void 0,O))}else A=v(E,p,_,T,P,t);_>=S&&(x+=p.slice(S,_)+A,S=_+E.length)}return x+p.slice(S)}];function v(e,t,r,i,a,u){var l=r+e.length,c=i.length,s=d;return void 0!==a&&(a=o(a),s=p),n.call(u,s,function(n,o){var u;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(l);case"<":u=a[o.slice(1,-1)];break;default:var s=+o;if(0===s)return n;if(s>c){var p=f(s/10);return 0===p?n:p<=c?void 0===i[p-1]?o.charAt(1):i[p-1]+o.charAt(1):n}u=i[s-1]}return void 0===u?"":u})}})},function(e,t,n){"use strict";var r=n(4),o=n(99),i=n(55);n(56)("search",1,function(e,t,n,a){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=a(n,e,this);if(t.done)return t.value;var u=r(e),l=String(this),c=u.lastIndex;o(c,0)||(u.lastIndex=0);var s=i(u,l);return o(u.lastIndex,c)||(u.lastIndex=c),null===s?-1:s.index}]})},function(e,t,n){"use strict";var r=n(76),o=n(4),i=n(48),a=n(84),u=n(7),l=n(55),c=n(83),s=n(3),f=Math.min,p=[].push,d=!s(function(){RegExp(4294967295,"y")});n(56)("split",2,function(e,t,n,s){var h;return h="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var o=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(o,e,t);for(var i,a,u,l=[],s=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,d=void 0===t?4294967295:t>>>0,h=new RegExp(e.source,s+"g");(i=c.call(h,o))&&!((a=h.lastIndex)>f&&(l.push(o.slice(f,i.index)),i.length>1&&i.index<o.length&&p.apply(l,i.slice(1)),u=i[0].length,f=a,l.length>=d));)h.lastIndex===i.index&&h.lastIndex++;return f===o.length?!u&&h.test("")||l.push(""):l.push(o.slice(f)),l.length>d?l.slice(0,d):l}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var o=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):h.call(String(o),n,r)},function(e,t){var r=s(h,e,this,t,h!==n);if(r.done)return r.value;var c=o(e),p=String(this),v=i(c,RegExp),m=c.unicode,y=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(d?"y":"g"),g=new v(d?c:"^(?:"+c.source+")",y),b=void 0===t?4294967295:t>>>0;if(0===b)return[];if(0===p.length)return null===l(g,p)?[p]:[];for(var w=0,x=0,S=[];x<p.length;){g.lastIndex=d?x:0;var k,E=l(g,d?p:p.slice(x));if(null===E||(k=f(u(g.lastIndex+(d?0:x)),p.length))===w)x=a(p,x,m);else{if(S.push(p.slice(w,x)),S.length===b)return S;for(var _=1;_<=E.length-1;_++)if(S.push(E[_]),S.length===b)return S;x=w=k}}return S.push(p.slice(w)),S}]})},function(e,t,n){var r=n(2),o=n(85).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,u=r.Promise,l="process"==n(24)(a);e.exports=function(){var e,t,n,c=function(){var r,o;for(l&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(l)n=function(){a.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(u&&u.resolve){var s=u.resolve(void 0);n=function(){s.then(c)}}else n=function(){o.call(r,c)};else{var f=!0,p=document.createTextNode("");new i(c).observe(p,{characterData:!0}),n=function(){p.data=f=!f}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){"use strict";var r=n(118),o=n(38);e.exports=n(59)("Map",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{get:function(e){var t=r.getEntry(o(this,"Map"),e);return t&&t.v},set:function(e,t){return r.def(o(this,"Map"),0===e?0:e,t)}},r,!0)},function(e,t,n){"use strict";var r=n(118),o=n(38);e.exports=n(59)("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return r.def(o(this,"Set"),e=0===e?0:e,e)}},r)},function(e,t,n){"use strict";var r,o=n(2),i=n(23)(0),a=n(12),u=n(28),l=n(98),c=n(119),s=n(5),f=n(38),p=n(38),d=!o.ActiveXObject&&"ActiveXObject"in o,h=u.getWeak,v=Object.isExtensible,m=c.ufstore,y=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},g={get:function(e){if(s(e)){var t=h(e);return!0===t?m(f(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(f(this,"WeakMap"),e,t)}},b=e.exports=n(59)("WeakMap",y,g,c,!0,!0);p&&d&&(l((r=c.getConstructor(y,"WeakMap")).prototype,g),u.NEED=!0,i(["delete","has","get","set"],function(e){var t=b.prototype,n=t[e];a(t,e,function(t,o){if(s(t)&&!v(t)){this._f||(this._f=new r);var i=this._f[e](t,o);return"set"==e?this:i}return n.call(this,t,o)})}))},function(e,t,n){"use strict";var r=n(119),o=n(38);n(59)("WeakSet",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return r.def(o(this,"WeakSet"),e,!0)}},r,!1,!0)},function(e,t,n){"use strict";var r=n(0),o=n(60),i=n(86),a=n(4),u=n(33),l=n(7),c=n(5),s=n(2).ArrayBuffer,f=n(48),p=i.ArrayBuffer,d=i.DataView,h=o.ABV&&s.isView,v=p.prototype.slice,m=o.VIEW;r(r.G+r.W+r.F*(s!==p),{ArrayBuffer:p}),r(r.S+r.F*!o.CONSTR,"ArrayBuffer",{isView:function(e){return h&&h(e)||c(e)&&m in e}}),r(r.P+r.U+r.F*n(3)(function(){return!new p(2).slice(1,void 0).byteLength}),"ArrayBuffer",{slice:function(e,t){if(void 0!==v&&void 0===t)return v.call(a(this),e);for(var n=a(this).byteLength,r=u(e,n),o=u(void 0===t?n:t,n),i=new(f(this,p))(l(o-r)),c=new d(this),s=new d(i),h=0;r<o;)s.setUint8(h++,c.getUint8(r++));return i}}),n(42)("ArrayBuffer")},function(e,t,n){var r=n(0);r(r.G+r.W+r.F*!n(60).ABV,{DataView:n(86).DataView})},function(e,t,n){n(26)("Int8",1,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Uint8",1,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Uint8",1,function(e){return function(t,n,r){return e(this,t,n,r)}},!0)},function(e,t,n){n(26)("Int16",2,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Uint16",2,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Int32",4,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Uint32",4,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Float32",4,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){n(26)("Float64",8,function(e){return function(t,n,r){return e(this,t,n,r)}})},function(e,t,n){var r=n(0),o=n(19),i=n(4),a=(n(2).Reflect||{}).apply,u=Function.apply;r(r.S+r.F*!n(3)(function(){a(function(){})}),"Reflect",{apply:function(e,t,n){var r=o(e),l=i(n);return a?a(r,t,l):u.call(r,t,l)}})},function(e,t,n){var r=n(0),o=n(34),i=n(19),a=n(4),u=n(5),l=n(3),c=n(100),s=(n(2).Reflect||{}).construct,f=l(function(){function e(){}return!(s(function(){},[],e)instanceof e)}),p=!l(function(){s(function(){})});r(r.S+r.F*(f||p),"Reflect",{construct:function(e,t){i(e),a(t);var n=arguments.length<3?e:i(arguments[2]);if(p&&!f)return s(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var l=n.prototype,d=o(u(l)?l:Object.prototype),h=Function.apply.call(e,d,t);return u(h)?h:d}})},function(e,t,n){var r=n(10),o=n(0),i=n(4),a=n(27);o(o.S+o.F*n(3)(function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})}),"Reflect",{defineProperty:function(e,t,n){i(e),t=a(t,!0),i(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},function(e,t,n){var r=n(0),o=n(21).f,i=n(4);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=o(i(e),t);return!(n&&!n.configurable)&&delete e[t]}})},function(e,t,n){"use strict";var r=n(0),o=n(4),i=function(e){this._t=o(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(107)(i,"Object",function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}}),r(r.S,"Reflect",{enumerate:function(e){return new i(e)}})},function(e,t,n){var r=n(21),o=n(36),i=n(14),a=n(0),u=n(5),l=n(4);a(a.S,"Reflect",{get:function e(t,n){var a,c,s=arguments.length<3?t:arguments[2];return l(t)===s?t[n]:(a=r.f(t,n))?i(a,"value")?a.value:void 0!==a.get?a.get.call(s):void 0:u(c=o(t))?e(c,n,s):void 0}})},function(e,t,n){var r=n(21),o=n(0),i=n(4);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(i(e),t)}})},function(e,t,n){var r=n(0),o=n(36),i=n(4);r(r.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,n){var r=n(0),o=n(4),i=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{ownKeys:n(121)})},function(e,t,n){var r=n(0),o=n(4),i=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},function(e,t,n){var r=n(10),o=n(21),i=n(36),a=n(14),u=n(0),l=n(29),c=n(4),s=n(5);u(u.S,"Reflect",{set:function e(t,n,u){var f,p,d=arguments.length<4?t:arguments[3],h=o.f(c(t),n);if(!h){if(s(p=i(t)))return e(p,n,u,d);h=l(0)}if(a(h,"value")){if(!1===h.writable||!s(d))return!1;if(f=o.f(d,n)){if(f.get||f.set||!1===f.writable)return!1;f.value=u,r.f(d,n,f)}else r.f(d,n,l(0,u));return!0}return void 0!==h.set&&(h.set.call(d,u),!0)}})},function(e,t,n){var r=n(0),o=n(67);o&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},function(e,t,n){n(279),e.exports=n(8).Array.includes},function(e,t,n){"use strict";var r=n(0),o=n(50)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(37)("includes")},function(e,t,n){n(281),e.exports=n(8).Array.flatMap},function(e,t,n){"use strict";var r=n(0),o=n(282),i=n(11),a=n(7),u=n(19),l=n(109);r(r.P,"Array",{flatMap:function(e){var t,n,r=i(this);return u(e),t=a(r.length),n=l(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(37)("flatMap")},function(e,t,n){"use strict";var r=n(52),o=n(5),i=n(7),a=n(18),u=n(6)("isConcatSpreadable");e.exports=function e(t,n,l,c,s,f,p,d){for(var h,v,m=s,y=0,g=!!p&&a(p,d,3);y<c;){if(y in l){if(h=g?g(l[y],y,n):l[y],v=!1,o(h)&&(v=void 0!==(v=h[u])?!!v:r(h)),v&&f>0)m=e(t,n,h,i(h.length),m,f-1)-1;else{if(m>=9007199254740991)throw TypeError();t[m]=h}m++}y++}return m}},function(e,t,n){n(284),e.exports=n(8).String.padStart},function(e,t,n){"use strict";var r=n(0),o=n(122),i=n(58),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){n(286),e.exports=n(8).String.padEnd},function(e,t,n){"use strict";var r=n(0),o=n(122),i=n(58),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){n(288),e.exports=n(8).String.trimLeft},function(e,t,n){"use strict";n(40)("trimLeft",function(e){return function(){return e(this,1)}},"trimStart")},function(e,t,n){n(290),e.exports=n(8).String.trimRight},function(e,t,n){"use strict";n(40)("trimRight",function(e){return function(){return e(this,2)}},"trimEnd")},function(e,t,n){n(292),e.exports=n(63).f("asyncIterator")},function(e,t,n){n(94)("asyncIterator")},function(e,t,n){n(294),e.exports=n(8).Object.getOwnPropertyDescriptors},function(e,t,n){var r=n(0),o=n(121),i=n(16),a=n(21),u=n(79);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),l=a.f,c=o(r),s={},f=0;c.length>f;)void 0!==(n=l(r,t=c[f++]))&&u(s,t,n);return s}})},function(e,t,n){n(296),e.exports=n(8).Object.values},function(e,t,n){var r=n(0),o=n(123)(!1);r(r.S,"Object",{values:function(e){return o(e)}})},function(e,t,n){n(298),e.exports=n(8).Object.entries},function(e,t,n){var r=n(0),o=n(123)(!0);r(r.S,"Object",{entries:function(e){return o(e)}})},function(e,t,n){"use strict";n(115),n(300),e.exports=n(8).Promise.finally},function(e,t,n){"use strict";var r=n(0),o=n(8),i=n(2),a=n(48),u=n(117);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return u(t,e()).then(function(){return n})}:e,n?function(n){return u(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){n(302),n(303),n(304),e.exports=n(8)},function(e,t,n){var r=n(2),o=n(0),i=n(58),a=[].slice,u=/MSIE .\./.test(i),l=function(e){return function(t,n){var r=arguments.length>2,o=!!r&&a.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,n)}};o(o.G+o.B+o.F*u,{setTimeout:l(r.setTimeout),setInterval:l(r.setInterval)})},function(e,t,n){var r=n(0),o=n(85);r(r.G+r.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,n){for(var r=n(82),o=n(32),i=n(12),a=n(2),u=n(15),l=n(41),c=n(6),s=c("iterator"),f=c("toStringTag"),p=l.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=o(d),v=0;v<h.length;v++){var m,y=h[v],g=d[y],b=a[y],w=b&&b.prototype;if(w&&(w[s]||u(w,s,p),w[f]||u(w,f,y),l[y]=p,g))for(m in r)w[m]||i(w,m,r[m],!0)}},function(e,t,n){var r=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",u=o.toStringTag||"@@toStringTag";function l(e,t,n,r){var o=t&&t.prototype instanceof v?t:v,i=Object.create(o.prototype),a=new C(r||[]);return i._invoke=function(e,t,n){var r=s;return function(o,i){if(r===p)throw new Error("Generator is already running");if(r===d){if("throw"===o)throw i;return O()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var u=E(a,n);if(u){if(u===h)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===s)throw r=d,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var l=c(e,t,n);if("normal"===l.type){if(r=n.done?d:f,l.arg===h)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=d,n.method="throw",n.arg=l.arg)}}}(e,n,a),i}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var s="suspendedStart",f="suspendedYield",p="executing",d="completed",h={};function v(){}function m(){}function y(){}var g={};g[i]=function(){return this};var b=Object.getPrototypeOf,w=b&&b(b(P([])));w&&w!==n&&r.call(w,i)&&(g=w);var x=y.prototype=v.prototype=Object.create(g);function S(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function k(e){var t;this._invoke=function(n,o){function i(){return new Promise(function(t,i){!function t(n,o,i,a){var u=c(e[n],e,o);if("throw"!==u.type){var l=u.arg,s=l.value;return s&&"object"==typeof s&&r.call(s,"__await")?Promise.resolve(s.__await).then(function(e){t("next",e,i,a)},function(e){t("throw",e,i,a)}):Promise.resolve(s).then(function(e){l.value=e,i(l)},function(e){return t("throw",e,i,a)})}a(u.arg)}(n,o,t,i)})}return t=t?t.then(i,i):i()}}function E(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,E(e,n),"throw"===n.method))return h;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var o=c(r,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,h;var i=o.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,h):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function P(e){if(e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}return{next:O}}function O(){return{value:t,done:!0}}return m.prototype=x.constructor=y,y.constructor=m,y[u]=m.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},S(k.prototype),k.prototype[a]=function(){return this},e.AsyncIterator=k,e.async=function(t,n,r,o){var i=new k(l(t,n,r,o));return e.isGeneratorFunction(n)?i:i.next().then(function(e){return e.done?e.value:i.next()})},S(x),x[u]="Generator",x[i]=function(){return this},x.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=P,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return u.type="throw",u.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],u=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;T(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:P(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),h}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){n(307),e.exports=n(124).global},function(e,t,n){var r=n(308);r(r.G,{global:n(87)})},function(e,t,n){var r=n(87),o=n(124),i=n(309),a=n(311),u=n(318),l=function(e,t,n){var c,s,f,p=e&l.F,d=e&l.G,h=e&l.S,v=e&l.P,m=e&l.B,y=e&l.W,g=d?o:o[t]||(o[t]={}),b=g.prototype,w=d?r:h?r[t]:(r[t]||{}).prototype;for(c in d&&(n=t),n)(s=!p&&w&&void 0!==w[c])&&u(g,c)||(f=s?w[c]:n[c],g[c]=d&&"function"!=typeof w[c]?n[c]:m&&s?i(f,r):y&&w[c]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):v&&"function"==typeof f?i(Function.call,f):f,v&&((g.virtual||(g.virtual={}))[c]=f,e&l.R&&b&&!b[c]&&a(b,c,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t,n){var r=n(310);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(312),o=n(317);e.exports=n(89)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(313),o=n(314),i=n(316),a=Object.defineProperty;t.f=n(89)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(88);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){e.exports=!n(89)&&!n(125)(function(){return 7!=Object.defineProperty(n(315)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(88),o=n(87).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(88);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(126),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,v=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function S(){}function k(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},S.prototype=x.prototype;var E=k.prototype=new S;E.constructor=k,r(E,x.prototype),E.isPureReactComponent=!0;var _={current:null},T={current:null},C=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r=void 0,o={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)C.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:i,type:e,key:a,ref:u,props:o,_owner:T.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,I=[];function M(e,t,n,r){if(I.length){var o=I.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>I.length&&I.push(e)}function R(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case a:l=!0}}if(l)return r(o,t,""===n?"."+F(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+F(u=t[c],c);l+=e(u,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(u=t.next()).done;)l+=e(u=u.value,s=n+F(u,c++),r,o);else"object"===u&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function F(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return e}):null!=e&&(A(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function U(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),R(e,D,t=M(t,i,r,o)),j(t)}function z(){var e=_.current;return null===e&&g("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return U(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,L,t=M(null,null,t,n)),j(t)},count:function(e){return R(e,function(){return null},null)},toArray:function(e){var t=[];return U(e,t,null,function(e){return e}),t},only:function(e){return A(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:v,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return z().useCallback(e,t)},useContext:function(e,t){return z().useContext(e,t)},useEffect:function(e,t){return z().useEffect(e,t)},useImperativeHandle:function(e,t,n){return z().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return z().useLayoutEffect(e,t)},useMemo:function(e,t){return z().useMemo(e,t)},useReducer:function(e,t,n){return z().useReducer(e,t,n)},useRef:function(e){return z().useRef(e)},useState:function(e){return z().useState(e)},Fragment:u,StrictMode:l,Suspense:h,createElement:O,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),u=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=T.current),void 0!==t.key&&(u=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!P.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:u,ref:l,props:a,_owner:c}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:A,version:"16.8.6",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:_,ReactCurrentOwner:T,assign:r}},B={default:W},V=B&&W||B;e.exports=V.default||V},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),o=n(126),i=n(321);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var u=!1,l=null,c=!1,s=null,f={onError:function(e){u=!0,l=e}};function p(e,t,n,r,o,i,a,c,s){u=!1,l=null,function(e,t,n,r,o,i,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function v(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],u=t,l=r;g.hasOwnProperty(l)&&a("99",l),g[l]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&m(c[o],u,l);o=!0}else i.registrationName?(m(i.registrationName,u,l),o=!0):o=!1;o||a("98",r,e)}}}function m(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],g={},b={},w={},x=null,S=null,k=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=k(n),function(e,t,n,r,o,i,f,d,h){if(p.apply(this,arguments),u){if(u){var v=l;u=!1,l=null}else a("198"),v=void 0;c||(c=!0,s=v)}}(r,t,void 0,e),e.currentTarget=null}function _(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),v()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&v()}};function A(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function N(e){if(null!==e&&(C=_(C,e)),e=C,C=null,e&&(T(e,P),C&&a("95"),c))throw e=s,c=!1,s=null,e}var I=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+I,j="__reactEventHandlers$"+I;function R(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function F(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function D(e){return e[j]||null}function U(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=A(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=U(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=A(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=_(n._dispatchListeners,t),n._dispatchInstances=_(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function $(e){T(e,W)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function G(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var q={animationend:G("Animation","AnimationEnd"),animationiteration:G("Animation","AnimationIteration"),animationstart:G("Animation","AnimationStart"),transitionend:G("Transition","TransitionEnd")},Y={},Q={};function K(e){if(Y[e])return Y[e];if(!q[e])return e;var t,n=q[e];for(t in n)if(n.hasOwnProperty(t)&&t in Q)return Y[e]=n[t];return e}H&&(Q=document.createElement("div").style,"AnimationEvent"in window||(delete q.animationend.animation,delete q.animationiteration.animation,delete q.animationstart.animation),"TransitionEvent"in window||delete q.transitionend.transition);var X=K("animationend"),J=K("animationiteration"),Z=K("animationstart"),ee=K("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function ue(){return!1}function le(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:ue,this.isPropagationStopped=ue,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var pe=le.extend({data:null}),de=le.extend({data:null}),he=[9,13,27,32],ve=H&&"CompositionEvent"in window,me=null;H&&"documentMode"in document&&(me=document.documentMode);var ye=H&&"TextEvent"in window&&!me,ge=H&&(!ve||me&&8<me&&11>=me),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function Se(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ke(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var _e={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ve)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ee?Se(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Ee||o!==we.compositionStart?o===we.compositionEnd&&Ee&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=ke(n))&&(o.data=i),$(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return ke(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!ve&&Se(e,t)?(e=ie(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,$(t)):t=null,null===i?t:null===t?i:[i,t]}},Te=null,Ce=null,Pe=null;function Oe(e){if(e=S(e)){"function"!=typeof Te&&a("280");var t=x(e.stateNode);Te(e.stateNode,e.type,t)}}function Ae(e){Ce?Pe?Pe.push(e):Pe=[e]:Ce=e}function Ne(){if(Ce){var e=Ce,t=Pe;if(Pe=Ce=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Ie(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function je(){}var Re=!1;function Fe(e,t){if(Re)return e(t);Re=!0;try{return Ie(e,t)}finally{Re=!1,(null!==Ce||null!==Pe)&&(je(),Ne())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function De(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Ue(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Be(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;$e.hasOwnProperty("ReactCurrentDispatcher")||($e.ReactCurrentDispatcher={current:null});var He=/^(.*)[\\\/]/,Ge="function"==typeof Symbol&&Symbol.for,qe=Ge?Symbol.for("react.element"):60103,Ye=Ge?Symbol.for("react.portal"):60106,Qe=Ge?Symbol.for("react.fragment"):60107,Ke=Ge?Symbol.for("react.strict_mode"):60108,Xe=Ge?Symbol.for("react.profiler"):60114,Je=Ge?Symbol.for("react.provider"):60109,Ze=Ge?Symbol.for("react.context"):60110,et=Ge?Symbol.for("react.concurrent_mode"):60111,tt=Ge?Symbol.for("react.forward_ref"):60112,nt=Ge?Symbol.for("react.suspense"):60113,rt=Ge?Symbol.for("react.memo"):60115,ot=Ge?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Qe:return"Fragment";case Ye:return"Portal";case Xe:return"Profiler";case Ke:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case ot:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ut(e.type);n=null,r&&(n=ut(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var vt=/[\-:]([a-z])/g;function mt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function St(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function kt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(vt,mt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(vt,mt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(vt,mt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new dt(e,1,!1,e.toLowerCase(),null)});var _t={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Tt(e,t,n){return(e=le.getPooled(_t.change,e,t,n)).type="change",Ae(n),$(e),e}var Ct=null,Pt=null;function Ot(e){N(e)}function At(e){if(Ve(L(e)))return e}function Nt(e,t){if("change"===e)return t}var It=!1;function Mt(){Ct&&(Ct.detachEvent("onpropertychange",jt),Pt=Ct=null)}function jt(e){"value"===e.propertyName&&At(Pt)&&Fe(Ot,e=Tt(Pt,e,Ue(e)))}function Rt(e,t,n){"focus"===e?(Mt(),Pt=n,(Ct=t).attachEvent("onpropertychange",jt)):"blur"===e&&Mt()}function Ft(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return At(Pt)}function Lt(e,t){if("click"===e)return At(t)}function Dt(e,t){if("input"===e||"change"===e)return At(t)}H&&(It=ze("input")&&(!document.documentMode||9<document.documentMode));var Ut={eventTypes:_t,_isInputEventSupported:It,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?i=Nt:De(o)?It?i=Dt:(i=Ft,a=Rt):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return Tt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},zt=le.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Bt}var $t=0,Ht=0,Gt=!1,qt=!1,Yt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=$t;return $t=e.screenX,Gt?"mousemove"===e.type?e.screenX-t:0:(Gt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,qt?"mousemove"===e.type?e.screenY-t:0:(qt=!0,0)}}),Qt=Yt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Kt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Kt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?R(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Yt,u=Kt.mouseLeave,l=Kt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Qt,u=Kt.pointerLeave,l=Kt.pointerEnter,c="pointer");var s=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(u,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=U(a))c++;for(a=0,l=o;l;l=U(l))a++;for(;0<c-a;)t=U(t),c--;for(;0<a-c;)o=U(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=U(t),o=U(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=U(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=U(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=i.length;0<r--;)B(i[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var u=o.child;u;){if(u===n)return nn(o),e;if(u===r)return nn(o),t;u=u.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{u=!1;for(var l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}u||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=zt.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=zt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Yt.extend({dataTransfer:null}),dn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vn=Yt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),mn=[["abort","abort"],[X,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),mn.forEach(function(e){bn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Yt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case X:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=zt;break;case"wheel":e=vn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Qt;break;default:e=le}return $(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,Sn=[];function kn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=R(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Ue(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,u=0;u<y.length;u++){var l=y[u];l&&(l=l.extractEvents(r,t,i,o))&&(a=_(a,l))}N(a)}}var En=!0;function _n(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!1)}function Tn(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Me(Pn,e,t)}function Pn(e,t){if(En){var n=Ue(t);if(null===(n=R(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),Sn.length){var r=Sn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Fe(kn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Sn.length&&Sn.push(e)}}}var On={},An=0,Nn="_reactListenersID"+(""+Math.random()).slice(2);function In(e){return Object.prototype.hasOwnProperty.call(e,Nn)||(e[Nn]=An++,On[e[Nn]]={}),On[e[Nn]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function jn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Rn(e,t){var n,r=jn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=jn(r)}}function Fn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Mn((e=t.contentWindow).document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Dn(e){var t=Fn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=Rn(n,i);var a=Rn(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Un=H&&"documentMode"in document&&11>=document.documentMode,zn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Bn=null,Vn=null,$n=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return $n||null==Wn||Wn!==Mn(n)?null:("selectionStart"in(n=Wn)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&en(Vn,n)?null:(Vn=n,(e=le.getPooled(zn.select,Bn,e,t)).type="select",e.target=Wn,$(e),e))}var Gn={eventTypes:zn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=In(i),o=w.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(De(i)||"true"===i.contentEditable)&&(Wn=i,Bn=t,Vn=null);break;case"blur":Vn=Bn=Wn=null;break;case"mousedown":$n=!0;break;case"contextmenu":case"mouseup":case"dragend":return $n=!1,Hn(n,r);case"selectionchange":if(Un)break;case"keydown":case"keyup":return Hn(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Qn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Kn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Xn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=D,S=F,k=L,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ut,SelectEventPlugin:Gn,BeforeInputEventPlugin:_e});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ur=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ur.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function pr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=In(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Tn("scroll",e);break;case"focus":case"blur":Tn("focus",e),Tn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&Tn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&_n(o,e)}n[o]=!0}}}function hr(){}var vr=null,mr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,xr=i.unstable_scheduleCallback,Sr=i.unstable_cancelCallback;function kr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var _r=[],Tr=-1;function Cr(e){0>Tr||(e.current=_r[Tr],_r[Tr]=null,Tr--)}function Pr(e,t){_r[++Tr]=e.current,e.current=t}var Or={},Ar={current:Or},Nr={current:!1},Ir=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function jr(e){return null!=(e=e.childContextTypes)}function Rr(e){Cr(Nr),Cr(Ar)}function Fr(e){Cr(Nr),Cr(Ar)}function Lr(e,t,n){Ar.current!==Or&&a("168"),Pr(Ar,t),Pr(Nr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",ut(t)||"Unknown",i);return o({},n,r)}function Ur(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,Ir=Ar.current,Pr(Ar,t),Pr(Nr,Nr.current),!0}function zr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Dr(e,t,Ir),r.__reactInternalMemoizedMergedChildContext=t,Cr(Nr),Cr(Ar),Pr(Ar,t)):Cr(Nr),Pr(Nr,n)}var Wr=null,Br=null;function Vr(e){return function(t){try{return e(t)}catch(e){}}}function $r(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new $r(e,t,n,r)}function Gr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function qr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yr(e,t,n,r,o,i){var u=2;if(r=e,"function"==typeof e)Gr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Qe:return Qr(n.children,o,i,t);case et:return Kr(n,3|o,i,t);case Ke:return Kr(n,2|o,i,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:u=10;break e;case Ze:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case ot:u=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Hr(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ke:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Xr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Su(),o=Ki(r=Qa(r,e));o.payload=t,null!=n&&(o.callback=n),Va(),Ji(e,o),Ja(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Su(),o=Ki(r=Qa(r,e));o.tag=$i,o.payload=t,null!=n&&(o.callback=n),Va(),Ji(e,o),Ja(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Su(),r=Ki(n=Qa(n,e));r.tag=Hi,null!=t&&(r.callback=t),Va(),Ji(e,r),Ja(e,n)}};function uo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function lo(e,t,n){var r=!1,o=Or,i=t.contextType;return"object"==typeof i&&null!==i?i=Bi(i):(o=jr(t)?Ir:Ar.current,i=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Bi(i):(i=jr(t)?Ir:Ar.current,o.context=Mr(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function ho(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function vo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=qr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Yr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Qr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Xr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case qe:return(n=Yr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Ye:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Qr(t,e.mode,n,null)).return=e,t;ho(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case qe:return n.key===o?n.type===Qe?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ye:return n.key===o?s(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);ho(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Qe?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ye:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);ho(t,r)}return null}function v(o,a,u,l){for(var c=null,s=null,f=a,v=a=0,m=null;null!==f&&v<u.length;v++){f.index>v?(m=f,f=null):m=f.sibling;var y=d(o,f,u[v],l);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,v),null===s?c=y:s.sibling=y,s=y,f=m}if(v===u.length)return n(o,f),c;if(null===f){for(;v<u.length;v++)(f=p(o,u[v],l))&&(a=i(f,a,v),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);v<u.length;v++)(m=h(f,o,v,u[v],l))&&(e&&null!==m.alternate&&f.delete(null===m.key?v:m.key),a=i(m,a,v),null===s?c=m:s.sibling=m,s=m);return e&&f.forEach(function(e){return t(o,e)}),c}function m(o,u,l,c){var s=at(l);"function"!=typeof s&&a("150"),null==(l=s.call(l))&&a("151");for(var f=s=null,v=u,m=u=0,y=null,g=l.next();null!==v&&!g.done;m++,g=l.next()){v.index>m?(y=v,v=null):y=v.sibling;var b=d(o,v,g.value,c);if(null===b){v||(v=y);break}e&&v&&null===b.alternate&&t(o,v),u=i(b,u,m),null===f?s=b:f.sibling=b,f=b,v=y}if(g.done)return n(o,v),s;if(null===v){for(;!g.done;m++,g=l.next())null!==(g=p(o,g.value,c))&&(u=i(g,u,m),null===f?s=g:f.sibling=g,f=g);return s}for(v=r(o,v);!g.done;m++,g=l.next())null!==(g=h(v,o,m,g.value,c))&&(e&&null!==g.alternate&&v.delete(null===g.key?m:g.key),u=i(g,u,m),null===f?s=g:f.sibling=g,f=g);return e&&v.forEach(function(e){return t(o,e)}),s}return function(e,r,i,l){var c="object"==typeof i&&null!==i&&i.type===Qe&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case qe:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Qe:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Qe?i.props.children:i.props)).ref=po(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Qe?((r=Qr(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=Yr(i.type,i.key,i.props,null,e.mode,l)).ref=po(e,r,i),l.return=e,e=l)}return u(e);case Ye:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Xr(i,e.mode,l)).return=e,e=r),u(e);if(fo(i))return v(e,r,i,l);if(at(i))return m(e,r,i,l);if(s&&ho(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var mo=vo(!0),yo=vo(!1),go={},bo={current:go},wo={current:go},xo={current:go};function So(e){return e===go&&a("174"),e}function ko(e,t){Pr(xo,t),Pr(wo,e),Pr(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Cr(bo),Pr(bo,t)}function Eo(e){Cr(bo),Cr(wo),Cr(xo)}function _o(e){So(xo.current);var t=So(bo.current),n=tr(t,e.type);t!==n&&(Pr(wo,e),Pr(bo,n))}function To(e){wo.current===e&&(Cr(bo),Cr(wo))}var Co=0,Po=2,Oo=4,Ao=8,No=16,Io=32,Mo=64,jo=128,Ro=$e.ReactCurrentDispatcher,Fo=0,Lo=null,Do=null,Uo=null,zo=null,Wo=null,Bo=null,Vo=0,$o=null,Ho=0,Go=!1,qo=null,Yo=0;function Qo(){a("321")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Xo(e,t,n,r,o,i){if(Fo=i,Lo=t,Uo=null!==e?e.memoizedState:null,Ro.current=null===Uo?si:fi,t=n(r,o),Go){do{Go=!1,Yo+=1,Uo=null!==e?e.memoizedState:null,Bo=zo,$o=Wo=Do=null,Ro.current=fi,t=n(r,o)}while(Go);qo=null,Yo=0}return Ro.current=ci,(e=Lo).memoizedState=zo,e.expirationTime=Vo,e.updateQueue=$o,e.effectTag|=Ho,e=null!==Do&&null!==Do.next,Fo=0,Bo=Wo=zo=Uo=Do=Lo=null,Vo=0,$o=null,Ho=0,e&&a("300"),t}function Jo(){Ro.current=ci,Fo=0,Bo=Wo=zo=Uo=Do=Lo=null,Vo=0,$o=null,Ho=0,Go=!1,qo=null,Yo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Wo?zo=Wo=e:Wo=Wo.next=e,Wo}function ei(){if(null!==Bo)Bo=(Wo=Bo).next,Uo=null!==(Do=Uo)?Do.next:null;else{null===Uo&&a("310");var e={memoizedState:(Do=Uo).memoizedState,baseState:Do.baseState,queue:Do.queue,baseUpdate:Do.baseUpdate,next:null};Wo=null===Wo?zo=e:Wo.next=e,Uo=Do.next}return Wo}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),n.lastRenderedReducer=e,0<Yo){var r=n.dispatch;if(null!==qo){var o=qo.get(n);if(void 0!==o){qo.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jt(i,t.memoizedState)||(Si=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var u=t.baseUpdate;if(i=t.baseState,null!==u?(null!==r&&(r.next=null),r=u.next):r=null!==r?r.next:null,null!==r){var l=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Fo?(s||(s=!0,l=u,o=i),f>Vo&&(Vo=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),u=c,c=c.next}while(null!==c&&c!==r);s||(l=u,o=i),Jt(i,t.memoizedState)||(Si=!0),t.memoizedState=i,t.baseUpdate=l,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===$o?($o={lastEffect:null}).lastEffect=e.next=e:null===(t=$o.lastEffect)?$o.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,$o.lastEffect=e),e}function oi(e,t,n,r){var o=Zo();Ho|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Do){var a=Do.memoizedState;if(i=a.destroy,null!==r&&Ko(r,a.deps))return void ri(Co,n,i,r)}Ho|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ui(){}function li(e,t,n){25>Yo||a("301");var r=e.alternate;if(e===Lo||null!==r&&r===Lo)if(Go=!0,e={expirationTime:Fo,action:n,eagerReducer:null,eagerState:null,next:null},null===qo&&(qo=new Map),void 0===(n=qo.get(t)))qo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Va();var o=Su(),i={expirationTime:o=Qa(o,e),action:n,eagerReducer:null,eagerState:null,next:null},u=t.last;if(null===u)i.next=i;else{var l=u.next;null!==l&&(i.next=l),u.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Ja(e,o)}}var ci={readContext:Bi,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo},si={readContext:Bi,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Bi,useEffect:function(e,t){return oi(516,jo|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,Oo|Io,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,Oo|Io,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=li.bind(null,Lo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ti,lastRenderedState:e}).dispatch=li.bind(null,Lo,e),[t.memoizedState,e]},useDebugValue:ui},fi={readContext:Bi,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Bi,useEffect:function(e,t){return ii(516,jo|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,Oo|Io,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,Oo|Io,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:ui},pi=null,di=null,hi=!1;function vi(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function mi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function yi(e){if(hi){var t=di;if(t){var n=t;if(!mi(e,t)){if(!(t=kr(n))||!mi(e,t))return e.effectTag|=2,hi=!1,void(pi=e);vi(pi,n)}pi=e,di=Er(t)}else e.effectTag|=2,hi=!1,pi=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;pi=e}function bi(e){if(e!==pi)return!1;if(!hi)return gi(e),hi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=di;t;)vi(e,t),t=kr(t);return gi(e),di=pi?kr(e.stateNode):null,!0}function wi(){di=pi=null,hi=!1}var xi=$e.ReactCurrentOwner,Si=!1;function ki(e,t,n,r){t.child=null===e?yo(t,null,n,r):mo(t,e.child,n,r)}function Ei(e,t,n,r,o){n=n.render;var i=t.ref;return Wi(t,o),r=Xo(e,t,n,r,i,o),null===e||Si?(t.effectTag|=1,ki(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function _i(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Gr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Yr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ti(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Mi(e,t,i):(t.effectTag|=1,(e=qr(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ti(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(Si=!1,o<i)?Mi(e,t,i):Pi(e,t,n,r,i)}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Pi(e,t,n,r,o){var i=jr(n)?Ir:Ar.current;return i=Mr(t,i),Wi(t,o),n=Xo(e,t,n,r,i,o),null===e||Si?(t.effectTag|=1,ki(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function Oi(e,t,n,r,o){if(jr(n)){var i=!0;Ur(t)}else i=!1;if(Wi(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Bi(c):c=Mr(t,c=jr(n)?Ir:Ar.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&co(t,a,r,c),qi=!1;var p=t.memoizedState;l=a.state=p;var d=t.updateQueue;null!==d&&(na(t,d,r,a,o),l=t.memoizedState),u!==r||p!==l||Nr.current||qi?("function"==typeof s&&(io(t,n,s,r),l=t.memoizedState),(u=qi||uo(t,n,u,r,p,l,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:ro(t.type,u),l=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Bi(c):c=Mr(t,c=jr(n)?Ir:Ar.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&co(t,a,r,c),qi=!1,l=t.memoizedState,p=a.state=l,null!==(d=t.updateQueue)&&(na(t,d,r,a,o),p=t.memoizedState),u!==r||l!==p||Nr.current||qi?("function"==typeof s&&(io(t,n,s,r),p=t.memoizedState),(s=qi||uo(t,n,u,r,l,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Ai(e,t,n,r,i,o)}function Ai(e,t,n,r,o,i){Ci(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&zr(t,n,!1),Mi(e,t,i);r=t.stateNode,xi.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=mo(t,e.child,null,i),t.child=mo(t,null,u,i)):ki(e,t,u,i),t.memoizedState=r.state,o&&zr(t,n,!0),t.child}function Ni(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),ko(e,t.containerInfo)}function Ii(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var u=o.fallback;e=Qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Qr(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=yo(t,null,o.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,a?(n=o.fallback,o=qr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=qr(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=mo(t,r.child,o.children,n)):(u=e.child,a?(a=o.fallback,(o=Qr(null,r,0,null)).child=u,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Qr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=mo(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Mi(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=qr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=qr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ji(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)Si=!0;else if(r<n){switch(Si=!1,t.tag){case 3:Ni(t),wi();break;case 5:_o(t);break;case 1:jr(t.type)&&Ur(t);break;case 4:ko(t,t.stateNode.containerInfo);break;case 10:Ui(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ii(e,t,n):null!==(t=Mi(e,t,n))?t.sibling:null}return Mi(e,t,n)}}else Si=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Ar.current);if(Wi(t,n),o=Xo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),jr(r)){var i=!0;Ur(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&io(t,r,u,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Ai(null,t,r,!0,i,n)}else t.tag=0,ki(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Gr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),u=void 0,o){case 0:u=Pi(null,t,e,i,n);break;case 1:u=Oi(null,t,e,i,n);break;case 11:u=Ei(null,t,e,i,n);break;case 14:u=_i(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return u;case 0:return r=t.type,o=t.pendingProps,Pi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ni(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wi(),t=Mi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(di=Er(t.stateNode.containerInfo),pi=t,o=hi=!0),o?(t.effectTag|=2,t.child=yo(t,null,r,n)):(ki(e,t,r,n),wi()),t=t.child),t;case 5:return _o(t),null===e&&yi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,u=o.children,gr(r,o)?u=null:null!==i&&gr(r,i)&&(t.effectTag|=16),Ci(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(ki(e,t,u,n),t=t.child),t;case 6:return null===e&&yi(t),null;case 13:return Ii(e,t,n);case 4:return ko(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=mo(t,null,r,n):ki(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ei(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return ki(e,t,t.pendingProps,n),t.child;case 8:case 12:return ki(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,u=t.memoizedProps,Ui(t,i=o.value),null!==u){var l=u.value;if(0===(i=Jt(l,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===o.children&&!Nr.current){t=Mi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.contextDependencies;if(null!==c){u=l.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===l.tag&&((s=Ki(n)).tag=Hi,Ji(l,s)),l.expirationTime<n&&(l.expirationTime=n),null!==(s=l.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=l.return;null!==f;){var p=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==p&&p.childExpirationTime<s&&(p.childExpirationTime=s);else{if(!(null!==p&&p.childExpirationTime<s))break;p.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}}ki(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Wi(t,n),r=r(o=Bi(o,i.unstable_observedBits)),t.effectTag|=1,ki(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),_i(e,t,o,i=ro(o.type,i),r,n);case 15:return Ti(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jr(r)?(e=!0,Ur(t)):e=!1,Wi(t,n),lo(t,r,o),so(t,r,o,n),Ai(null,t,r,!0,e,n)}a("156")}var Ri={current:null},Fi=null,Li=null,Di=null;function Ui(e,t){var n=e.type._context;Pr(Ri,n._currentValue),n._currentValue=t}function zi(e){var t=Ri.current;Cr(Ri),e.type._context._currentValue=t}function Wi(e,t){Fi=e,Di=Li=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(Si=!0),e.contextDependencies=null}function Bi(e,t){return Di!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Di=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Li?(null===Fi&&a("308"),Li=t,Fi.contextDependencies={first:t,expirationTime:0}):Li=Li.next=t),e._currentValue}var Vi=0,$i=1,Hi=2,Gi=3,qi=!1;function Yi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Qi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ki(e){return{expirationTime:e,tag:Vi,payload:null,callback:null,next:null,nextEffect:null}}function Xi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ji(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Yi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Yi(e.memoizedState),o=n.updateQueue=Yi(n.memoizedState)):r=e.updateQueue=Qi(o):null===o&&(o=n.updateQueue=Qi(r));null===o||r===o?Xi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Xi(r,t),Xi(o,t)):(Xi(r,t),o.lastUpdate=t)}function Zi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Yi(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Qi(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case $i:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case Gi:e.effectTag=-2049&e.effectTag|64;case Vi:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case Hi:qi=!0}return r}function na(e,t,n,r,o){qi=!1;for(var i=(t=ea(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s<o?(null===a&&(a=l,i=c),u<s&&(u=s)):(c=ta(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===s&&(s=l,null===a&&(i=c)),u<f&&(u=f)):(c=ta(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=u,e.memoizedState=c}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:lt(t)}}function aa(e){e.effectTag|=4}var ua=void 0,la=void 0,ca=void 0,sa=void 0;ua=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},la=function(){},ca=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var u=t.stateNode;switch(So(bo.current),e=null,n){case"input":a=bt(u,a),r=bt(u,r),e=[];break;case"option":a=qn(u,a),r=qn(u,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Qn(u,a),r=Qn(u,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=hr)}fr(n,r),u=n=void 0;var l=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(u in c)c.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(l||(l={}),l[u]=s[u])}else l||(e||(e=[]),e.push(n,l)),l=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&dr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}l&&(e=e||[]).push("style",l),i=e,(t.updateQueue=i)&&aa(t)}},sa=function(e,t,n,r){n!==r&&aa(t)};var fa="function"==typeof WeakSet?WeakSet:Set;function pa(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function da(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ya(e,t)}else t.current=null}function ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Co){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==Co&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function va(e){switch("function"==typeof Br&&Br(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Ya(o,e)}}n=n.next}while(n!==t)}break;case 1:if(da(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ya(e,t)}break;case 5:da(e);break;case 4:ga(e)}}function ma(e){return 5===e.tag||3===e.tag||4===e.tag}function ya(e){e:{for(var t=e.return;null!==t;){if(ma(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ma(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,u=o.stateNode,l=n;8===i.nodeType?i.parentNode.insertBefore(u,l):i.insertBefore(u,l)}else t.insertBefore(o.stateNode,n);else r?(u=t,l=o.stateNode,8===u.nodeType?(i=u.parentNode).insertBefore(l,u):(i=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,u=i;;)if(va(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===i)break;for(;null===u.sibling;){if(null===u.return||u.return===i)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}o?(i=r,u=t.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(va(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ha(Oo,Ao,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[j]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),pr(n,r),r=pr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];"style"===a?cr(e,u):"dangerouslySetInnerHTML"===a?or(e,u):"children"===a?ir(e,u):yt(e,a,u,r)}switch(n){case"input":St(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Su())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new fa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Qa(t=Su(),e),null!==(e=Xa(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&ku(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var wa="function"==typeof WeakMap?WeakMap:Map;function xa(e,t,n){(n=Ki(n)).tag=Gi,n.payload={element:null};var r=t.value;return n.callback=function(){Iu(r),pa(e,t)},n}function Sa(e,t,n){(n=Ki(n)).tag=Gi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Da?Da=new Set([this]):Da.add(this));var n=t.value,o=t.stack;pa(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function ka(e){switch(e.tag){case 1:jr(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eo(),Fr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return To(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eo(),null;case 10:return zi(e),null;default:return null}}var Ea=$e.ReactCurrentDispatcher,_a=$e.ReactCurrentOwner,Ta=1073741822,Ca=!1,Pa=null,Oa=null,Aa=0,Na=-1,Ia=!1,Ma=null,ja=!1,Ra=null,Fa=null,La=null,Da=null;function Ua(){if(null!==Pa)for(var e=Pa.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:Eo(),Fr();break;case 5:To(t);break;case 4:Eo();break;case 10:zi(t)}e=e.return}Oa=null,Aa=0,Na=-1,Ia=!1,Pa=null}function za(){for(;null!==Ma;){var e=Ma.effectTag;if(16&e&&ir(Ma.stateNode,""),128&e){var t=Ma.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:ya(Ma),Ma.effectTag&=-3;break;case 6:ya(Ma),Ma.effectTag&=-3,ba(Ma.alternate,Ma);break;case 4:ba(Ma.alternate,Ma);break;case 8:ga(e=Ma),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ma=Ma.nextEffect}}function Wa(){for(;null!==Ma;){if(256&Ma.effectTag)e:{var e=Ma.alternate,t=Ma;switch(t.tag){case 0:case 11:case 15:ha(Po,Co,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Ma=Ma.nextEffect}}function Ba(e,t){for(;null!==Ma;){var n=Ma.effectTag;if(36&n){var r=Ma.alternate,o=Ma,i=t;switch(o.tag){case 0:case 11:case 15:ha(No,Io,o);break;case 1:var u=o.stateNode;if(4&o.effectTag)if(null===r)u.componentDidMount();else{var l=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);u.componentDidUpdate(l,r.memoizedState,u.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,u);break;case 3:if(null!==(r=o.updateQueue)){if(u=null,null!==o.child)switch(o.child.tag){case 5:u=o.child.stateNode;break;case 1:u=o.child.stateNode}ra(0,r,u)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=Ma.ref)&&(i=Ma.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Ra=e),Ma=Ma.nextEffect}}function Va(){null!==Fa&&Sr(Fa),null!==La&&La()}function $a(e,t){ja=Ca=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),_a.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,vr=En,mr=function(){var e=Fn();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,u=-1,l=0,c=0,s=e,f=null;t:for(;;){for(var p;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(u=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(p=s.firstChild);)f=s,s=p;for(;;){if(s===e)break t;if(f===t&&++l===r&&(a=i),f===o&&++c===n&&(u=i),null!==(p=s.nextSibling))break;f=(s=f).parentNode}s=p}t=-1===a||-1===u?null:{start:a,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),En=!1,Ma=r;null!==Ma;){o=!1;var u=void 0;try{Wa()}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Ya(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}for(Ma=r;null!==Ma;){o=!1,u=void 0;try{za()}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Ya(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}for(Dn(mr),mr=null,En=!!vr,vr=null,e.current=t,Ma=r;null!==Ma;){o=!1,u=void 0;try{Ba(e,n)}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Ya(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}if(null!==r&&null!==Ra){var l=function(e,t){La=Fa=Ra=null;var n=ou;ou=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ha(jo,Co,i),ha(Co,Mo,i)}catch(e){r=!0,o=e}r&&Ya(t,o)}t=t.nextEffect}while(null!==t);ou=n,0!==(n=e.expirationTime)&&ku(e,n),su||ou||Pu(1073741823,!1)}.bind(null,e,r);Fa=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return xr(l)}),La=l}Ca=ja=!1,"function"==typeof Wr&&Wr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Da=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Ha(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Pa=e;e:{var i=t,u=Aa,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:jr(t.type)&&Rr();break;case 3:Eo(),Fr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==i&&null!==i.child||(bi(t),t.effectTag&=-3),la(t);break;case 5:To(t);var c=So(xo.current);if(u=t.type,null!==i&&null!=t.stateNode)ca(i,t,u,l,c),i.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=So(bo.current);if(bi(t)){i=(l=t).stateNode;var f=l.type,p=l.memoizedProps,d=c;switch(i[M]=l,i[j]=p,u=void 0,c=f){case"iframe":case"object":_n("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)_n(te[f],i);break;case"source":_n("error",i);break;case"img":case"image":case"link":_n("error",i),_n("load",i);break;case"form":_n("reset",i),_n("submit",i);break;case"details":_n("toggle",i);break;case"input":wt(i,p),_n("invalid",i),dr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},_n("invalid",i),dr(d,"onChange");break;case"textarea":Kn(i,p),_n("invalid",i),dr(d,"onChange")}for(u in fr(c,p),f=null,p)p.hasOwnProperty(u)&&(s=p[u],"children"===u?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(u)&&null!=s&&dr(d,u));switch(c){case"input":Be(i),kt(i,p,!0);break;case"textarea":Be(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=hr)}u=f,l.updateQueue=u,(l=null!==u)&&aa(t)}else{p=t,d=u,i=l,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(d)),s===Zn.html?"script"===d?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(d,{is:i.is}):(f=f.createElement(d),"select"===d&&(d=f,i.multiple?d.multiple=!0:i.size&&(d.size=i.size))):f=f.createElementNS(s,d),(i=f)[M]=p,i[j]=l,ua(i,t,!1,!1),d=i;var h=c,v=pr(f=u,p=l);switch(f){case"iframe":case"object":_n("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)_n(te[c],d);c=p;break;case"source":_n("error",d),c=p;break;case"img":case"image":case"link":_n("error",d),_n("load",d),c=p;break;case"form":_n("reset",d),_n("submit",d),c=p;break;case"details":_n("toggle",d),c=p;break;case"input":wt(d,p),c=bt(d,p),_n("invalid",d),dr(h,"onChange");break;case"option":c=qn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),_n("invalid",d),dr(h,"onChange");break;case"textarea":Kn(d,p),c=Qn(d,p),_n("invalid",d),dr(h,"onChange");break;default:c=p}fr(f,c),s=void 0;var m=f,y=d,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(y,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(y,w):"children"===s?"string"==typeof w?("textarea"!==m||""!==w)&&ir(y,w):"number"==typeof w&&ir(y,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&dr(h,s):null!=w&&yt(y,s,w,v))}switch(f){case"input":Be(d),kt(d,p,!1);break;case"textarea":Be(d),Jn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(c,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=hr)}(l=yr(u,l))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?sa(i,t,i.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&a("166")),i=So(xo.current),So(bo.current),bi(t)?(u=(l=t).stateNode,i=l.memoizedProps,u[M]=l,(l=u.nodeValue!==i)&&aa(t)):(u=t,(l=(9===i.nodeType?i:i.ownerDocument).createTextNode(l))[M]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,Pa=t;break e}l=null!==l,u=null!==i&&null!==i.memoizedState,null!==i&&!l&&u&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(l||u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eo(),la(t);break;case 10:zi(t);break;case 9:case 14:break;case 17:jr(t.type)&&Rr();break;case 18:break;default:a("156")}Pa=null}if(t=e,1===Aa||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(i=u.expirationTime)>l&&(l=i),(c=u.childExpirationTime)>l&&(l=c),u=u.sibling;t.childExpirationTime=l}if(null!==Pa)return Pa;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=ka(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Ga(e){var t=ji(e.alternate,e,Aa);return e.memoizedProps=e.pendingProps,null===t&&(t=Ha(e)),_a.current=null,t}function qa(e,t){Ca&&a("243"),Va(),Ca=!0;var n=Ea.current;Ea.current=ci;var r=e.nextExpirationTimeToWorkOn;r===Aa&&e===Oa&&null!==Pa||(Ua(),Aa=r,Pa=qr((Oa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Pa&&!Tu();)Pa=Ga(Pa);else for(;null!==Pa;)Pa=Ga(Pa)}catch(t){if(Di=Li=Fi=null,Jo(),null===Pa)o=!0,Iu(t);else{null===Pa&&a("271");var i=Pa,u=i.return;if(null!==u){e:{var l=e,c=u,s=i,f=t;if(u=Aa,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var p=f;f=c;var d=-1,h=-1;do{if(13===f.tag){var v=f.alternate;if(null!==v&&null!==(v=v.memoizedState)){h=10*(1073741822-v.timedOutAt);break}"number"==typeof(v=f.pendingProps.maxDuration)&&(0>=v?d=0:(-1===d||v<d)&&(d=v))}f=f.return}while(null!==f);f=c;do{if((v=13===f.tag)&&(v=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),v){if(null===(c=f.updateQueue)?((c=new Set).add(p),f.updateQueue=c):c.add(p),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((u=Ki(1073741823)).tag=Hi,Ji(s,u))),s.expirationTime=1073741823;break e}c=u;var m=(s=l).pingCache;null===m?(m=s.pingCache=new wa,v=new Set,m.set(p,v)):void 0===(v=m.get(p))&&(v=new Set,m.set(p,v)),v.has(c)||(v.add(c),s=Ka.bind(null,s,p,c),p.then(s,s)),-1===d?l=1073741823:(-1===h&&(h=10*(1073741822-to(l,u))-5e3),l=h+d),0<=l&&Na<l&&(Na=l),f.effectTag|=2048,f.expirationTime=u;break e}f=f.return}while(null!==f);f=Error((ut(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(s))}Ia=!0,f=ia(f,s),l=c;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=u,Zi(l,u=xa(l,f,u));break e;case 1:if(d=f,h=l.type,s=l.stateNode,0==(64&l.effectTag)&&("function"==typeof h.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===Da||!Da.has(s)))){l.effectTag|=2048,l.expirationTime=u,Zi(l,u=Sa(l,d,u));break e}}l=l.return}while(null!==l)}Pa=Ha(i);continue}o=!0,Iu(t)}}break}if(Ca=!1,Ea.current=n,Di=Li=Fi=null,Jo(),o)Oa=null,e.finishedWork=null;else if(null!==Pa)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Oa=null,Ia){if(o=e.latestPendingTime,i=e.latestSuspendedTime,u=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==u&&u<r)return eo(e,r),void xu(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xu(e,n,r,t,-1)}t&&-1!==Na?(eo(e,r),(t=10*(1073741822-to(e,r)))<Na&&(Na=t),t=10*(1073741822-Su()),t=Na-t,xu(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ya(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Da||!Da.has(r)))return Ji(n,e=Sa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823);break;case 3:return Ji(n,e=xa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823)}n=n.return}3===e.tag&&(Ji(e,n=xa(e,n=ia(t,e),1073741823)),Ja(e,1073741823))}function Qa(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ca&&!ja)r=Aa;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Oa&&r===Aa&&--r}return n===i.unstable_UserBlockingPriority&&(0===uu||r<uu)&&(uu=r),r}function Ka(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oa&&Aa===n?Oa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&ku(e,n)))}function Xa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ja(e,t){null!==(e=Xa(e,t))&&(!Ca&&0!==Aa&&t>Aa&&Ua(),Zr(e,t),Ca&&!ja&&Oa===e||ku(e,e.expirationTime),yu>mu&&(yu=0,a("185")))}function Za(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var eu=null,tu=null,nu=0,ru=void 0,ou=!1,iu=null,au=0,uu=0,lu=!1,cu=null,su=!1,fu=!1,pu=null,du=i.unstable_now(),hu=1073741822-(du/10|0),vu=hu,mu=50,yu=0,gu=null;function bu(){hu=1073741822-((i.unstable_now()-du)/10|0)}function wu(e,t){if(0!==nu){if(t<nu)return;null!==ru&&i.unstable_cancelCallback(ru)}nu=t,e=i.unstable_now()-du,ru=i.unstable_scheduleCallback(Cu,{timeout:10*(1073741822-t)-e})}function xu(e,t,n,r,o){e.expirationTime=r,0!==o||Tu()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bu(),vu=hu,Ou(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Su(){return ou?vu:(Eu(),0!==au&&1!==au||(bu(),vu=hu),vu)}function ku(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tu?(eu=tu=e,e.nextScheduledRoot=e):(tu=tu.nextScheduledRoot=e).nextScheduledRoot=eu):t>e.expirationTime&&(e.expirationTime=t),ou||(su?fu&&(iu=e,au=1073741823,Au(e,1073741823,!1)):1073741823===t?Pu(1073741823,!1):wu(e,t))}function Eu(){var e=0,t=null;if(null!==tu)for(var n=tu,r=eu;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tu)&&a("244"),r===r.nextScheduledRoot){eu=tu=r.nextScheduledRoot=null;break}if(r===eu)eu=o=r.nextScheduledRoot,tu.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tu){(tu=n).nextScheduledRoot=eu,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tu)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}iu=t,au=e}var _u=!1;function Tu(){return!!_u||!!i.unstable_shouldYield()&&(_u=!0)}function Cu(){try{if(!Tu()&&null!==eu){bu();var e=eu;do{var t=e.expirationTime;0!==t&&hu<=t&&(e.nextExpirationTimeToWorkOn=hu),e=e.nextScheduledRoot}while(e!==eu)}Pu(0,!0)}finally{_u=!1}}function Pu(e,t){if(Eu(),t)for(bu(),vu=hu;null!==iu&&0!==au&&e<=au&&!(_u&&hu>au);)Au(iu,au,hu>au),Eu(),bu(),vu=hu;else for(;null!==iu&&0!==au&&e<=au;)Au(iu,au,!1),Eu();if(t&&(nu=0,ru=null),0!==au&&wu(iu,au),yu=0,gu=null,null!==pu)for(e=pu,pu=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){lu||(lu=!0,cu=e)}}if(lu)throw e=cu,cu=null,lu=!1,e}function Ou(e,t){ou&&a("253"),iu=e,au=t,Au(e,t,!1),Pu(1073741823,!1)}function Au(e,t,n){if(ou&&a("245"),ou=!0,n){var r=e.finishedWork;null!==r?Nu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),qa(e,n),null!==(r=e.finishedWork)&&(Tu()?e.finishedWork=r:Nu(e,r,t)))}else null!==(r=e.finishedWork)?Nu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),qa(e,n),null!==(r=e.finishedWork)&&Nu(e,r,t));ou=!1}function Nu(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===pu?pu=[r]:pu.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gu?yu++:(gu=e,yu=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){$a(e,t)})}function Iu(e){null===iu&&a("246"),iu.expirationTime=0,lu||(lu=!0,cu=e)}function Mu(e,t){var n=su;su=!0;try{return e(t)}finally{(su=n)||ou||Pu(1073741823,!1)}}function ju(e,t){if(su&&!fu){fu=!0;try{return e(t)}finally{fu=!1}}return e(t)}function Ru(e,t,n){su||ou||0===uu||(Pu(uu,!1),uu=0);var r=su;su=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(su=r)||ou||Pu(1073741823,!1)}}function Fu(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(jr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);a("171"),u=void 0}if(1===n.tag){var l=n.type;if(jr(l)){n=Dr(n,l,u);break e}}n=u}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ki(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Va(),Ji(i,o),Ja(i,r),r}function Lu(e,t,n,r){var o=t.current;return Fu(e,t,n,o=Qa(Su(),o),r)}function Du(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Uu(e){var t=1073741822-25*(1+((1073741822-Su()+500)/25|0));t>=Ta&&(t=Ta-1),this._expirationTime=Ta=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function zu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Wu(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Bu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vu(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Du(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Wu(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=Du(i._internalRoot);u.call(e)}}ju(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Du(i._internalRoot)}function $u(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Bu(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ye,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Te=function(e,t,n){switch(t){case"input":if(St(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=D(r);o||a("90"),Ve(r),St(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Uu.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new zu;return Fu(e,t,null,n,r._onCommit),r},Uu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Uu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ou(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Uu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},zu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Wu.prototype.render=function(e,t){var n=this._internalRoot,r=new zu;return null!==(t=void 0===t?null:t)&&r.then(t),Lu(e,n,null,r._onCommit),r},Wu.prototype.unmount=function(e){var t=this._internalRoot,n=new zu;return null!==(e=void 0===e?null:e)&&n.then(e),Lu(null,t,null,n._onCommit),n},Wu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new zu;return null!==(n=void 0===n?null:n)&&o.then(n),Lu(t,r,e,o._onCommit),o},Wu.prototype.createBatch=function(){var e=new Uu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ie=Mu,Me=Ru,je=function(){ou||0===uu||(Pu(uu,!1),uu=0)};var Hu={createPortal:$u,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Bu(t)||a("200"),Vu(null,e,t,!0,n)},render:function(e,t,n){return Bu(t)||a("200"),Vu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Bu(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),Vu(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Bu(e)||a("40"),!!e._reactRootContainer&&(ju(function(){Vu(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return $u.apply(void 0,arguments)},unstable_batchedUpdates:Mu,unstable_interactiveUpdates:Ru,flushSync:function(e,t){ou&&a("187");var n=su;su=!0;try{return Za(e,t)}finally{su=n,Pu(1073741823,!1)}},unstable_createRoot:function(e,t){return Bu(e)||a("299","unstable_createRoot"),new Wu(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=su;su=!0;try{Za(e)}finally{(su=t)||ou||Pu(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[F,L,D,O.injectEventPluginsByName,g,$,function(e){T(e,V)},Ae,Ne,Pn,N]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Wr=Vr(function(e){return t.onCommitFiberRoot(n,e)}),Br=Vr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:$e.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:R,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Gu={default:Hu},qu=Gu&&Hu||Gu;e.exports=qu.default||qu},function(e,t,n){"use strict";e.exports=n(322)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,u=!1,l=!1;function c(){if(!u){var e=n.expirationTime;l?k():l=!0,S(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,u=a;o=e,a=t;try{var l=r()}finally{o=i,a=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,c()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){u=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?c():l=!1}}}function p(e){u=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!E())}finally{u=!1,r=o,null!==n?c():l=!1,f()}}var d,h,v=Date,m="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){d=g(function(t){y(h),e(t)}),h=m(function(){b(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return v.now()};var S,k,E,_=null;if("undefined"!=typeof window?_=window:void 0!==e&&(_=e),_&&_._schedMock){var T=_._schedMock;S=T[0],k=T[1],E=T[2],t.unstable_now=T[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,P=function(e){if(null!==C)try{C(e)}finally{C=null}};S=function(e){null!==C?setTimeout(S,0,e):(C=e,setTimeout(P,0,!1))},k=function(){C=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,A=!1,N=-1,I=!1,M=!1,j=0,R=33,F=33;E=function(){return j<=t.unstable_now()};var L=new MessageChannel,D=L.port2;L.port1.onmessage=function(){A=!1;var e=O,n=N;O=null,N=-1;var r=t.unstable_now(),o=!1;if(0>=j-r){if(!(-1!==n&&n<=r))return I||(I=!0,w(U)),O=e,void(N=n);o=!0}if(null!==e){M=!0;try{e(o)}finally{M=!1}}};var U=function(e){if(null!==O){w(U);var t=e-j+F;t<F&&R<F?(8>t&&(t=8),F=t<R?R:t):R=t,j=e+F,A||(A=!0,D.postMessage(void 0))}else I=!1};S=function(e,t){O=e,N=t,M||0>t?D.postMessage(void 0):I||(I=!0,w(U))},k=function(){O=null,A=!1,N=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var u=n;do{if(u.expirationTime>r){a=u;break}u=u.next}while(u!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||E())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(323))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,c=[],s=!1,f=-1;function p(){s&&l&&(s=!1,l.length?c=l.concat(c):f=-1,c.length&&d())}function d(){if(!s){var e=u(p);s=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function v(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||u(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,v=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case a:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case s:case d:case c:return e;default:return t}}case m:case v:case i:return t}}}function g(e){return y(e)===p}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=d,t.Fragment=a,t.Lazy=m,t.Memo=v,t.Portal=i,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===p||e===l||e===u||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===d)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===d},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===m},t.isMemo=function(e){return y(e)===v},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===l},t.isStrictMode=function(e){return y(e)===u},t.isSuspense=function(e){return y(e)===h}},function(e,t,n){e.exports=n(327)()},function(e,t,n){"use strict";var r=n(328);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r),i=n(127),a=n.n(i),u=n(61);function l(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  padding: 0.5rem;\n  margin: 0.5rem 0.5rem 0.5rem 0.5rem;\n  background-color: ",";\n  color: #e9e9e9;\n  border: 0;\n  box-shadow: 4px 4px 7px 0 rgba(208, 208, 208, 1);\n\n  :hover {\n    cursor: pointer;\n    background-color: #4995c7;\n  }\n\n  :disabled {\n    color: rgba(233, 233, 233, 0.8);\n    background-color: ",";\n    cursor: default;\n  }\n"]);return l=function(){return e},e}var c=u.a.button(l(),function(e){return e.action?"green":"#2980b9"},function(e){return e.action?"green":"rgba(72, 148, 199, 0.8)"});var s=function(e){var t=e.greetings,n=e.onAdd,r=t.map(function(e){return o.a.createElement("tr",{key:e.id},o.a.createElement("td",null,e.name),o.a.createElement("td",null,e.greeting))});return o.a.createElement("div",null,o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"Name"),o.a.createElement("th",null,"Greeting"))),o.a.createElement("tbody",null,r)),o.a.createElement(c,{onClick:n},"Add"))};function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function p(e){var t=f(o.a.useState(e.initialName||""),2),n=t[0],r=t[1],i=f(o.a.useState(e.initialGreeting||""),2),a=i[0],u=i[1],l=o.a.useRef(),s=!(n&&a);if(" "===n)throw new Error("Ups...");return o.a.createElement("div",null,o.a.createElement("input",{ref:l,onChange:function(e){r(e.target.value)},value:n,name:"name",placeholder:"Name"}),o.a.createElement("input",{onChange:function(e){return u(e.target.value)},value:a,name:"greeting",placeholder:"Greeting"}),o.a.createElement(c,{onClick:function(){r(""),u(""),l.current.focus()}},"Clear"),o.a.createElement(c,{action:!0,disabled:s,onClick:function(){e.onSave({name:n,greeting:a})}},"Save"))}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function h(e,t,n,r,o,i,a){try{var u=e[i](a),l=u.value}catch(e){return void n(e)}u.done?t(l):Promise.resolve(l).then(r,o)}function v(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var i=e.apply(t,n);function a(e){h(i,r,o,a,u,"next",e)}function u(e){h(i,r,o,a,u,"throw",e)}a(void 0)})}}function m(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var y="http://localhost:7000/greetings",g="MODE_MASTER",b="MODE_DETAIL";function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  background-color: rgba(255, 0, 0, 0.5);\n"]);return _=function(){return e},e}var T=Object(u.a)(function(e){var t=e.msg,n=e.onRetry,r=e.className;return o.a.createElement("div",{className:r},o.a.createElement("h1",null,"An error occured!"),o.a.createElement("pre",null,t),o.a.createElement(c,{onClick:n},"Try again"))})(_()),C=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=S(this,k(t).call(this,e))).state={},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(t,o.a.Component),n=t,i=[{key:"getDerivedStateFromError",value:function(e){return{error:e.toString()}}}],(r=[{key:"componentDidCatch",value:function(e,t){console.error("uups... we caught an error",e,t)}},{key:"render",value:function(){var e=this;return this.state.error?o.a.createElement(T,{msg:this.state.error,onRetry:function(){return e.setState({error:null})}}):this.props.children}}])&&x(n.prototype,r),i&&x(n,i),t}(),P=document.getElementById("mount");a.a.render(o.a.createElement(C,null,o.a.createElement(function(){var e=m(o.a.useState(g),2),t=e[0],n=e[1],r=m(o.a.useState([]),2),i=r[0],a=r[1];function u(){return(u=v(regeneratorRuntime.mark(function e(t){var r,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(y,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)});case 3:if(201===(o=e.sent).status){e.next=6;break}throw new Error("Invalid status code: "+o.status);case 6:return e.next=8,o.json();case 8:r=e.sent,e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),console.error("LOADING GREETINGS FAILED:",e.t0);case 14:a(function(e){return[].concat(d(e),[r])}),n(g);case 16:case"end":return e.stop()}},e,null,[[0,11]])}))).apply(this,arguments)}return o.a.useEffect(function(){function e(){return(e=v(regeneratorRuntime.mark(function e(){var t,n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(y);case 3:return t=e.sent,e.next=6,t.json();case 6:n=e.sent,a(n),e.next=15;break;case 10:return e.prev=10,e.t0=e.catch(0),console.error("LOADING GREETINGS FAILED:",e.t0),a(null),e.abrupt("return");case 15:case"end":return e.stop()}},e,null,[[0,10]])}))).apply(this,arguments)}!function(){e.apply(this,arguments)}()},[]),t===g?o.a.createElement(s,{greetings:i,onAdd:function(){n(b)}}):o.a.createElement(p,{onSave:function(e){return u.apply(this,arguments)}})},null)),P)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oaWRlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmljdC1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jdHguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXNhcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LW1ldGhvZHMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tZXRhLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3ZhbGlkYXRlLWNvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy10cmltLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZsYWdzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZm9yLW9mLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdXNlci1hZ2VudC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9zdHlsZWQtY29tcG9uZW50cy9kaXN0L3N0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy1leHQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1idWcta2V5cy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2h0bWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctd3MuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXJlcGVhdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtc2lnbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtZXhwbTEuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctYXQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1jb250ZXh0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtcmVnZXhwLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmFpbHMtaXMtcmVnZXhwLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NyZWF0ZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktZmlsbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hZHZhbmNlLXN0cmluZy1pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtb2JqZWN0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9zdHlsaXMvc3R5bGlzLm1pbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zYW1lLXZhbHVlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYmluZC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ludm9rZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1udW1iZXItdmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1sb2cxcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1yZWR1Y2UuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1jb3B5LXdpdGhpbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItc3RlcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5leGVjLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmZsYWdzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX25ldy1wcm9taXNlLWNhcGFiaWxpdHkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24td2Vhay5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWluZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctcGFkLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXRvLWFycmF5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9zdHlsaXMtcnVsZS1zaGVldC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91bml0bGVzcy9kaXN0L3VuaXRsZXNzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL0BlbW90aW9uL2lzLXByb3AtdmFsaWQvZGlzdC9pcy1wcm9wLXZhbGlkLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2lzLXdoYXQvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvbWVyZ2UtYW55dGhpbmcvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3BvbHlmaWxsL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9AYmFiZWwvcG9seWZpbGwvbGliL25vQ29uZmxpY3QuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9lczYvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mdW5jdGlvbi10by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNlYWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1zZWFsZWQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnBhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLWZpeGVkLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLXByZWNpc2lvbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWF4LXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguYWNvc2guanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmFzaW5oLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY2JydC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY2x6MzIuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNvc2guanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5mcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLWZyb3VuZC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmltdWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguc2lnbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguc2luaC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudGFuaC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJhdy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy50cmltLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmNvZGUtcG9pbnQtYXQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJlcGVhdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5hbmNob3IuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmlnLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZml4ZWQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcubGluay5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdHJpa2UuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN1cC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1qc29uLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1pc28tc3RyaW5nLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RhdGUtdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mcm9tLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkub2YuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5qb2luLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb3J0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2guanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubWFwLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc29tZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmV2ZXJ5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaW5kZXgtb2YuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWxsLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zcGVjaWVzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21pY3JvdGFzay5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BlcmZvcm0uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXAuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zZXQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi53ZWFrLW1hcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstc2V0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuYXJyYXktYnVmZmVyLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZGF0YS12aWV3LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWFycmF5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtY2xhbXBlZC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50MzItYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0Lmhhcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vYXJyYXkvaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL2FycmF5L2ZsYXQtbWFwLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGF0dGVuLWludG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N0cmluZy9wYWQtZW5kLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1zdGFydC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLWxlZnQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmQuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1yaWdodC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N5bWJvbC9hc3luYy1pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9vYmplY3QvdmFsdWVzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9lbnRyaWVzLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy93ZWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5pbW1lZGlhdGUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3Lmdsb2JhbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jdHguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4tb2JqZWN0LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvR3JlZXRpbmdNYXN0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dyZWV0aW5nRGV0YWlsLmpzIiwid2VicGFjazovLy8uL3NyYy9HcmVldGluZ0NvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0Vycm9ySGFuZGxlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImdsb2JhbCIsImNvcmUiLCJoaWRlIiwicmVkZWZpbmUiLCJjdHgiLCIkZXhwb3J0IiwidHlwZSIsInNvdXJjZSIsIm93biIsIm91dCIsImV4cCIsIklTX0ZPUkNFRCIsIkYiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiUCIsIklTX0JJTkQiLCJCIiwidGFyZ2V0IiwiZXhwUHJvdG8iLCJ1bmRlZmluZWQiLCJGdW5jdGlvbiIsIlUiLCJXIiwiUiIsIndpbmRvdyIsIk1hdGgiLCJzZWxmIiwiX19nIiwiZXhlYyIsImUiLCJpc09iamVjdCIsIml0IiwiVHlwZUVycm9yIiwic3RvcmUiLCJ1aWQiLCJVU0VfU1lNQk9MIiwidG9JbnRlZ2VyIiwibWluIiwidmVyc2lvbiIsIl9fZSIsImEiLCJhbk9iamVjdCIsIklFOF9ET01fREVGSU5FIiwidG9QcmltaXRpdmUiLCJkUCIsImYiLCJPIiwiQXR0cmlidXRlcyIsImRlZmluZWQiLCJoYXMiLCJTUkMiLCIkdG9TdHJpbmciLCJUUEwiLCJzcGxpdCIsImluc3BlY3RTb3VyY2UiLCJ2YWwiLCJzYWZlIiwiaXNGdW5jdGlvbiIsImpvaW4iLCJTdHJpbmciLCJ0aGlzIiwiZmFpbHMiLCJxdW90IiwiY3JlYXRlSFRNTCIsInN0cmluZyIsInRhZyIsImF0dHJpYnV0ZSIsInAxIiwicmVwbGFjZSIsIk5BTUUiLCJ0ZXN0IiwidG9Mb3dlckNhc2UiLCJsZW5ndGgiLCJjcmVhdGVEZXNjIiwiSU9iamVjdCIsIm1ldGhvZCIsImFyZyIsImFGdW5jdGlvbiIsImZuIiwidGhhdCIsImIiLCJhcHBseSIsImFyZ3VtZW50cyIsImNlaWwiLCJmbG9vciIsImlzTmFOIiwicElFIiwidG9JT2JqZWN0IiwiZ09QRCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIktFWSIsInRvT2JqZWN0IiwidG9MZW5ndGgiLCJhc2MiLCJUWVBFIiwiJGNyZWF0ZSIsIklTX01BUCIsIklTX0ZJTFRFUiIsIklTX1NPTUUiLCJJU19FVkVSWSIsIklTX0ZJTkRfSU5ERVgiLCJOT19IT0xFUyIsIiR0aGlzIiwiY2FsbGJhY2tmbiIsInJlcyIsImluZGV4IiwicmVzdWx0IiwicHVzaCIsInRvU3RyaW5nIiwic2xpY2UiLCJMSUJSQVJZIiwiJHR5cGVkIiwiJGJ1ZmZlciIsImFuSW5zdGFuY2UiLCJwcm9wZXJ0eURlc2MiLCJyZWRlZmluZUFsbCIsInRvSW5kZXgiLCJ0b0Fic29sdXRlSW5kZXgiLCJjbGFzc29mIiwiaXNBcnJheUl0ZXIiLCJnZXRQcm90b3R5cGVPZiIsImdPUE4iLCJnZXRJdGVyRm4iLCJ3a3MiLCJjcmVhdGVBcnJheU1ldGhvZCIsImNyZWF0ZUFycmF5SW5jbHVkZXMiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJBcnJheUl0ZXJhdG9ycyIsIkl0ZXJhdG9ycyIsIiRpdGVyRGV0ZWN0Iiwic2V0U3BlY2llcyIsImFycmF5RmlsbCIsImFycmF5Q29weVdpdGhpbiIsIiREUCIsIiRHT1BEIiwiUmFuZ2VFcnJvciIsIlVpbnQ4QXJyYXkiLCJBcnJheVByb3RvIiwiQXJyYXkiLCIkQXJyYXlCdWZmZXIiLCJBcnJheUJ1ZmZlciIsIiREYXRhVmlldyIsIkRhdGFWaWV3IiwiYXJyYXlGb3JFYWNoIiwiYXJyYXlGaWx0ZXIiLCJhcnJheVNvbWUiLCJhcnJheUV2ZXJ5IiwiYXJyYXlGaW5kIiwiYXJyYXlGaW5kSW5kZXgiLCJhcnJheUluY2x1ZGVzIiwiYXJyYXlJbmRleE9mIiwiYXJyYXlWYWx1ZXMiLCJ2YWx1ZXMiLCJhcnJheUtleXMiLCJrZXlzIiwiYXJyYXlFbnRyaWVzIiwiZW50cmllcyIsImFycmF5TGFzdEluZGV4T2YiLCJsYXN0SW5kZXhPZiIsImFycmF5UmVkdWNlIiwicmVkdWNlIiwiYXJyYXlSZWR1Y2VSaWdodCIsInJlZHVjZVJpZ2h0IiwiYXJyYXlKb2luIiwiYXJyYXlTb3J0Iiwic29ydCIsImFycmF5U2xpY2UiLCJhcnJheVRvU3RyaW5nIiwiYXJyYXlUb0xvY2FsZVN0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwiSVRFUkFUT1IiLCJUQUciLCJUWVBFRF9DT05TVFJVQ1RPUiIsIkRFRl9DT05TVFJVQ1RPUiIsIkFMTF9DT05TVFJVQ1RPUlMiLCJDT05TVFIiLCJUWVBFRF9BUlJBWSIsIlRZUEVEIiwiVklFVyIsIiRtYXAiLCJhbGxvY2F0ZSIsIkxJVFRMRV9FTkRJQU4iLCJVaW50MTZBcnJheSIsImJ1ZmZlciIsIkZPUkNFRF9TRVQiLCJzZXQiLCJ0b09mZnNldCIsIkJZVEVTIiwib2Zmc2V0IiwidmFsaWRhdGUiLCJDIiwic3BlY2llc0Zyb21MaXN0IiwibGlzdCIsImZyb21MaXN0IiwiYWRkR2V0dGVyIiwiaW50ZXJuYWwiLCJfZCIsIiRmcm9tIiwic3RlcCIsIml0ZXJhdG9yIiwiYUxlbiIsIm1hcGZuIiwibWFwcGluZyIsIml0ZXJGbiIsIm5leHQiLCJkb25lIiwiJG9mIiwiVE9fTE9DQUxFX0JVRyIsIiR0b0xvY2FsZVN0cmluZyIsInByb3RvIiwiY29weVdpdGhpbiIsInN0YXJ0IiwiZXZlcnkiLCJmaWxsIiwiZmlsdGVyIiwiZmluZCIsInByZWRpY2F0ZSIsImZpbmRJbmRleCIsImZvckVhY2giLCJpbmRleE9mIiwic2VhcmNoRWxlbWVudCIsImluY2x1ZGVzIiwic2VwYXJhdG9yIiwibWFwIiwicmV2ZXJzZSIsIm1pZGRsZSIsInNvbWUiLCJjb21wYXJlZm4iLCJzdWJhcnJheSIsImJlZ2luIiwiZW5kIiwiJGJlZ2luIiwiYnl0ZU9mZnNldCIsIkJZVEVTX1BFUl9FTEVNRU5UIiwiJHNsaWNlIiwiJHNldCIsImFycmF5TGlrZSIsInNyYyIsImxlbiIsIiRpdGVyYXRvcnMiLCJpc1RBSW5kZXgiLCIkZ2V0RGVzYyIsIiRzZXREZXNjIiwiZGVzYyIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiJFR5cGVkQXJyYXlQcm90b3R5cGUkIiwiY29uc3RydWN0b3IiLCJ3cmFwcGVyIiwiQ0xBTVBFRCIsIkdFVFRFUiIsIlNFVFRFUiIsIlR5cGVkQXJyYXkiLCJCYXNlIiwiVEFDIiwiRk9SQ0VEIiwiQUJWIiwiVHlwZWRBcnJheVByb3RvdHlwZSIsImFkZEVsZW1lbnQiLCJkYXRhIiwidiIsInJvdW5kIiwic2V0dGVyIiwiJG9mZnNldCIsIiRsZW5ndGgiLCJieXRlTGVuZ3RoIiwia2xhc3MiLCIkbGVuIiwiaXRlciIsImNvbmNhdCIsIiRuYXRpdmVJdGVyYXRvciIsIkNPUlJFQ1RfSVRFUl9OQU1FIiwiJGl0ZXJhdG9yIiwib2YiLCJmcm9tIiwidmFsdWVPZiIsIk1FVEEiLCJzZXREZXNjIiwiaWQiLCJpc0V4dGVuc2libGUiLCJGUkVFWkUiLCJwcmV2ZW50RXh0ZW5zaW9ucyIsInNldE1ldGEiLCJ3IiwibWV0YSIsIk5FRUQiLCJmYXN0S2V5IiwiZ2V0V2VhayIsIm9uRnJlZXplIiwiYml0bWFwIiwicHgiLCJyYW5kb20iLCIka2V5cyIsImVudW1CdWdLZXlzIiwibWF4IiwiZFBzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsInN0eWxlIiwiZGlzcGxheSIsImFwcGVuZENoaWxkIiwiY29udGVudFdpbmRvdyIsImRvY3VtZW50Iiwib3BlbiIsIndyaXRlIiwibHQiLCJjbG9zZSIsIlByb3BlcnRpZXMiLCJoaWRkZW5LZXlzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsIk9iamVjdFByb3RvIiwiVU5TQ09QQUJMRVMiLCJfdCIsImRlZiIsInN0YXQiLCJzcGFjZXMiLCJzcGFjZSIsImx0cmltIiwiUmVnRXhwIiwicnRyaW0iLCJleHBvcnRlciIsIkFMSUFTIiwiRk9SQ0UiLCJ0cmltIiwiREVTQ1JJUFRPUlMiLCJTUEVDSUVTIiwiQ29uc3RydWN0b3IiLCJmb3JiaWRkZW5GaWVsZCIsImNvZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiQVJHIiwiVCIsInRyeUdldCIsImNhbGxlZSIsIkQiLCJjb3B5cmlnaHQiLCJJU19JTkNMVURFUyIsImVsIiwiZnJvbUluZGV4IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaXNBcnJheSIsIlNBRkVfQ0xPU0lORyIsInJpdGVyIiwic2tpcENsb3NpbmciLCJhcnIiLCJpZ25vcmVDYXNlIiwibXVsdGlsaW5lIiwidW5pY29kZSIsInN0aWNreSIsImJ1aWx0aW5FeGVjIiwicmVnZXhwRXhlYyIsIlJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTIiwicmUiLCJncm91cHMiLCJTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMiLCJvcmlnaW5hbEV4ZWMiLCJTWU1CT0wiLCJERUxFR0FURVNfVE9fU1lNQk9MIiwiREVMRUdBVEVTX1RPX0VYRUMiLCJleGVjQ2FsbGVkIiwibmF0aXZlUmVnRXhwTWV0aG9kIiwiZm5zIiwibmF0aXZlTWV0aG9kIiwicmVnZXhwIiwic3RyIiwiYXJnMiIsImZvcmNlU3RyaW5nTWV0aG9kIiwic3RyZm4iLCJyeGZuIiwiQlJFQUsiLCJSRVRVUk4iLCJpdGVyYWJsZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImZvck9mIiwic2V0VG9TdHJpbmdUYWciLCJpbmhlcml0SWZSZXF1aXJlZCIsIm1ldGhvZHMiLCJjb21tb24iLCJJU19XRUFLIiwiQURERVIiLCJmaXhNZXRob2QiLCJpbnN0YW5jZSIsIkhBU05UX0NIQUlOSU5HIiwiVEhST1dTX09OX1BSSU1JVElWRVMiLCJBQ0NFUFRfSVRFUkFCTEVTIiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsImNsZWFyIiwiZ2V0Q29uc3RydWN0b3IiLCJzZXRTdHJvbmciLCJUeXBlZCIsIlR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMiLCJwcm9jZXNzIiwic3R5bGlzX3N0eWxpc19taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInN0eWxpc19zdHlsaXNfbWluX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsInN0eWxpc19ydWxlX3NoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJzdHlsaXNfcnVsZV9zaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQiLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0IiwiX2Vtb3Rpb25fdW5pdGxlc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsInJlYWN0X2lzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJtZW1vaXplX29uZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX2Vtb3Rpb25faXNfcHJvcF92YWxpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwibWVyZ2VfYW55dGhpbmdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsImludGVybGVhdmUiLCJzdHJpbmdzIiwiaW50ZXJwb2xhdGlvbnMiLCJfdHlwZW9mIiwib2JqIiwiY2xhc3NDYWxsQ2hlY2siLCJjcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImluaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJvYmplY3RXaXRob3V0UHJvcGVydGllcyIsInBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWZlcmVuY2VFcnJvciIsImlzUGxhaW5PYmplY3QiLCJ4IiwiRU1QVFlfQVJSQVkiLCJmcmVlemUiLCJFTVBUWV9PQkpFQ1QiLCJnZXRDb21wb25lbnROYW1lIiwiZGlzcGxheU5hbWUiLCJpc1N0eWxlZENvbXBvbmVudCIsInN0eWxlZENvbXBvbmVudElkIiwiU0NfQVRUUiIsImVudiIsIlJFQUNUX0FQUF9TQ19BVFRSIiwiSVNfQlJPV1NFUiIsIkRJU0FCTEVfU1BFRURZIiwiU0NfRElTQUJMRV9TUEVFRFkiLCJSRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFkiLCJTdHlsZWRDb21wb25lbnRzRXJyb3IiLCJfRXJyb3IiLCJjb2RlIiwiX2xlbiIsIl9rZXkiLCJfdGhpcyIsIkVycm9yIiwiU0NfQ09NUE9ORU5UX0lEIiwiZXh0cmFjdENvbXBzIiwibWF5YmVDU1MiLCJjc3MiLCJleGlzdGluZ0NvbXBvbmVudHMiLCJtYXRjaCIsImNvbXBvbmVudElkIiwibWF0Y2hJbmRleCIsIl9yZWYiLCJuZXh0Q29tcCIsImNzc0Zyb21ET00iLCJDT01NRU5UX1JFR0VYIiwic3R5bGlzU3BsaXR0ZXIiLCJjYXNjYWRlIiwia2V5ZnJhbWUiLCJwcmVmaXgiLCJjb21wcmVzcyIsInNlbWljb2xvbiIsInN0eWxpcyIsInBhcnNpbmdSdWxlcyIsInJldHVyblJ1bGVzUGx1Z2luIiwiY29udGV4dCIsInBhcnNlZFJ1bGVzIiwicGFyc2VSdWxlc1BsdWdpbiIsInJ1bGUiLCJfY29tcG9uZW50SWQiLCJfc2VsZWN0b3IiLCJfc2VsZWN0b3JSZWdleHAiLCJzZWxmUmVmZXJlbmNlUmVwbGFjZXIiLCJ1c2UiLCJfIiwic2VsZWN0b3JzIiwic3RyaW5naWZ5UnVsZXMiLCJydWxlcyIsInNlbGVjdG9yIiwiZmxhdENTUyIsImNzc1N0ciIsImdldE5vbmNlIiwibmMiLCJhZGROYW1lRm9ySWQiLCJuYW1lcyIsInJlc2V0SWROYW1lcyIsImhhc05hbWVGb3JJZCIsInN0cmluZ2lmeU5hbWVzIiwic2hlZXRGb3JUYWciLCJzaGVldCIsInNpemUiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsInNhZmVJbnNlcnRSdWxlIiwiY3NzUnVsZSIsIm1heEluZGV4IiwiY3NzUnVsZXMiLCJpbnNlcnRSdWxlIiwiZXJyIiwibWFrZVRleHRNYXJrZXIiLCJhZGRVcFVudGlsSW5kZXgiLCJzaXplcyIsInRvdGFsVXBUb0luZGV4Iiwid3JhcEFzSHRtbFRhZyIsImFkZGl0aW9uYWxBdHRycyIsIm5vbmNlIiwiU0NfVkVSU0lPTl9BVFRSIiwiQm9vbGVhbiIsIndyYXBBc0VsZW1lbnQiLCJfcHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkiLCJtYXJrZXJzIiwibWFrZVRleHROb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJtYWtlU2VydmVyVGFnIiwibmFtZXNBcmciLCJtYXJrZXJzQXJnIiwiaW5zZXJ0TWFya2VyIiwicHJldiIsImNzc0ZvcklkIiwiY2xvbmUiLCJuYW1lc0Nsb25lIiwiY2xvbmVOYW1lcyIsIm1hcmtlcnNDbG9uZSIsImdldElkcyIsImluc2VydFJ1bGVzIiwicmVtb3ZlUnVsZXMiLCJtYXJrZXIiLCJzZWFsZWQiLCJzdHlsZVRhZyIsInRvRWxlbWVudCIsInRvSFRNTCIsIm1ha2VUYWciLCJ0YWdFbCIsImZvcmNlU2VydmVyIiwiaW5zZXJ0QmVmb3JlIiwiZ2V0SW1wb3J0UnVsZVRhZyIsInNldEF0dHJpYnV0ZSIsInBhcmVudE5vZGUiLCJuZXh0U2libGluZyIsIm1ha2VTdHlsZVRhZyIsImV4dHJhY3RJbXBvcnQiLCJ1c2VkSW1wb3J0UnVsZVRhZyIsImltcG9ydFJ1bGVzIiwiY3NzUnVsZXNTaXplIiwibWF5SGF2ZUltcG9ydCIsImFwcGVuZERhdGEiLCJuZXdNYXJrZXIiLCJyZXBsYWNlQ2hpbGQiLCJtYWtlQnJvd3NlclRhZyIsImNzc1RleHQiLCJpbnNlcnRJbmRleCIsImluamVjdGVkUnVsZXMiLCJyZW1vdmFsSW5kZXgiLCJsb3dlckJvdW5kIiwiZGVsZXRlUnVsZSIsImRlbGV0ZVJ1bGVzIiwibWFrZVNwZWVkeVRhZyIsIlNQTElUX1JFR0VYIiwiTUFYX1NJWkUiLCJzaGVldFJ1bm5pbmdJZCIsIm1hc3RlciIsIlN0eWxlU2hlZXQiLCJoZWFkIiwiaW1wb3J0UnVsZVRhZyIsImZpcnN0VGFnIiwidGFncyIsInRhZ01hcCIsImRlZmVycmVkIiwicmVoeWRyYXRlZE5hbWVzIiwiaWdub3JlUmVoeWRyYXRlZE5hbWVzIiwiY2FwYWNpdHkiLCJjbG9uZXMiLCJyZWh5ZHJhdGUiLCJlbHMiLCJleHRyYWN0ZWQiLCJpc1N0cmVhbWVkIiwibm9kZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibm9kZXNTaXplIiwiZ2V0QXR0cmlidXRlIiwiZWxOYW1lcyIsImVsTmFtZXNTaXplIiwiaiIsInRleHRDb250ZW50IiwiZXh0cmFjdGVkU2l6ZSIsIl9leHRyYWN0ZWQkaSIsIl9pIiwicmVtb3ZlQ2hpbGQiLCJfaiIsInJlc2V0IiwiaWRzIiwibmV3VGFnIiwic2VhbEFsbFRhZ3MiLCJsYXN0RWwiLCJnZXRUYWdGb3JJZCIsImhhc0lkIiwiZGVmZXJyZWRJbmplY3QiLCJpbmplY3QiLCJyZW1vdmUiLCJ0b1JlYWN0RWxlbWVudHMiLCJLZXlmcmFtZXMiLCJzdHlsZVNoZWV0IiwiZ2V0TmFtZSIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJoeXBoZW5hdGVTdHlsZU5hbWUiLCJpc0ZhbHNpc2giLCJjaHVuayIsIm9ialRvQ3NzQXJyYXkiLCJwcmV2S2V5IiwiZmxhdHRlbiIsImV4ZWN1dGlvbkNvbnRleHQiLCJydWxlU2V0IiwiaXNSZWFjdENvbXBvbmVudCIsInN0eWxlcyIsIm11cm11cmhhc2giLCJjaGFyQ29kZUF0IiwiY2hhcnNMZW5ndGgiLCJnZXRBbHBoYWJldGljQ2hhciIsImZyb21DaGFyQ29kZSIsImdlbmVyYXRlQWxwaGFiZXRpY05hbWUiLCJpc1N0YXRpY1J1bGVzIiwiYXR0cnMiLCJoYXNGdW5jdGlvbk9iamVjdEtleSIsIl9UWVBFX1NUQVRJQ1MiLCJpc0hNUkVuYWJsZWQiLCJoYXNoZXIiLCJDb21wb25lbnRTdHlsZSIsImlzU3RhdGljIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJsYXN0Q2xhc3NOYW1lIiwiZ2VuZXJhdGVOYW1lIiwiZGV0ZXJtaW5lVGhlbWUiLCJmYWxsYmFja1RoZW1lIiwiZGVmYXVsdFByb3BzIiwiaXNEZWZhdWx0VGhlbWUiLCJ0aGVtZSIsImVzY2FwZVJlZ2V4IiwiZGFzaGVzQXRFbmRzIiwiZXNjYXBlIiwiaXNUYWciLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZXMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJwcm9wVHlwZXMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiYXJpdHkiLCJUWVBFX1NUQVRJQ1MiLCIkJHR5cGVvZiIsInJlbmRlciIsImRlZmluZVByb3BlcnR5JDEiLCJfT2JqZWN0JGdldE93blByb3BlcnQiLCJvYmplY3RQcm90b3R5cGUiLCJhcnJheVByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJUaGVtZUNvbnRleHQiLCJUaGVtZUNvbnN1bWVyIiwiQ29uc3VtZXIiLCJTdHlsZVNoZWV0Q29udGV4dCIsIl9Db21wb25lbnQiLCJUaGVtZVByb3ZpZGVyIiwiZ2V0Q29udGV4dCIsInJlbmRlcklubmVyIiwiY2hpbGRyZW4iLCJvdXRlclRoZW1lIiwiUHJvdmlkZXIiLCJDaGlsZHJlbiIsIm9ubHkiLCJnZXRUaGVtZSIsIlNlcnZlclN0eWxlU2hlZXQiLCJtYXN0ZXJTaGVldCIsInNlYWwiLCJzcGxpY2UiLCJjb2xsZWN0U3R5bGVzIiwiU3R5bGVTaGVldE1hbmFnZXIiLCJnZXRTdHlsZVRhZ3MiLCJnZXRTdHlsZUVsZW1lbnQiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJyZWFkYWJsZVN0cmVhbSIsIlN0eWxlU2hlZXRDb25zdW1lciIsImlkZW50aWZpZXJzIiwiU3R5bGVkQ29tcG9uZW50IiwicmVuZGVyT3V0ZXIiLCJmb3J3YXJkZWRDb21wb25lbnQiLCJjb21wb25lbnRTdHlsZSIsIl9wcm9wcyRmb3J3YXJkZWRDb21wbyIsImZvbGRlZENvbXBvbmVudElkcyIsImdlbmVyYXRlZENsYXNzTmFtZSIsImVsZW1lbnRUb0JlQ3JlYXRlZCIsImFzIiwiaXNUYXJnZXRUYWciLCJwcm9wc0ZvckVsZW1lbnQiLCJjb21wdXRlZFByb3BzIiwicmVmIiwiY2xhc3NOYW1lIiwiYnVpbGRFeGVjdXRpb25Db250ZXh0IiwiX3RoaXMyIiwiYXR0ckRlZiIsInJlc29sdmVkQXR0ckRlZiIsImF0dHJEZWZXYXNGbiIsImF0dHIiLCJfcHJvcHMkZm9yd2FyZGVkQ29tcG8yIiwid2FyblRvb01hbnlDbGFzc2VzIiwiY3JlYXRlU3R5bGVkQ29tcG9uZW50Iiwib3B0aW9ucyIsImlzVGFyZ2V0U3R5bGVkQ29tcCIsImlzQ2xhc3MiLCJfb3B0aW9ucyRkaXNwbGF5TmFtZSIsImdlbmVyYXRlRGlzcGxheU5hbWUiLCJfb3B0aW9ucyRjb21wb25lbnRJZCIsIl9Db21wb25lbnRTdHlsZSIsIl9kaXNwbGF5TmFtZSIsInBhcmVudENvbXBvbmVudElkIiwibnIiLCJnZW5lcmF0ZUlkIiwiX29wdGlvbnMkUGFyZW50Q29tcG9uIiwiUGFyZW50Q29tcG9uZW50IiwiX29wdGlvbnMkYXR0cnMiLCJmaW5hbEF0dHJzIiwiV3JhcHBlZFN0eWxlZENvbXBvbmVudCIsImZvcndhcmRSZWYiLCJmb3J3YXJkZWRSZWYiLCJ3aXRoQ29tcG9uZW50IiwicHJldmlvdXNDb21wb25lbnRJZCIsIm9wdGlvbnNUb0NvcHkiLCJuZXdDb21wb25lbnRJZCIsIl9mb2xkZWREZWZhdWx0UHJvcHMiLCJzdHlsZWQiLCJjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImNvbXBvbmVudENvbnN0cnVjdG9yIiwidGVtcGxhdGVGdW5jdGlvbiIsIndpdGhDb25maWciLCJjb25maWciLCJkb21FbGVtZW50IiwiR2xvYmFsU3R5bGUiLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJzY0NHU0hNUkNhY2hlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImlzIiwic2hhcmVkIiwiZG9jdW1lbnRFbGVtZW50IiwiY2hlY2siLCJidWdneSIsImNvdW50IiwiSW5maW5pdHkiLCJzaWduIiwiJGV4cG0xIiwiZXhwbTEiLCJUT19TVFJJTkciLCJwb3MiLCJjaGFyQXQiLCIkaXRlckNyZWF0ZSIsIkJVR0dZIiwicmV0dXJuVGhpcyIsIkRFRkFVTFQiLCJJU19TRVQiLCJJdGVyYXRvclByb3RvdHlwZSIsImdldE1ldGhvZCIsImtpbmQiLCJERUZfVkFMVUVTIiwiVkFMVUVTX0JVRyIsIiRuYXRpdmUiLCIkZGVmYXVsdCIsIiRlbnRyaWVzIiwiJGFueU5hdGl2ZSIsImlzUmVnRXhwIiwic2VhcmNoU3RyaW5nIiwiTUFUQ0giLCIkZGVmaW5lUHJvcGVydHkiLCJnZXRJdGVyYXRvck1ldGhvZCIsImVuZFBvcyIsImFkZFRvVW5zY29wYWJsZXMiLCJpdGVyYXRlZCIsIl9rIiwiQXJndW1lbnRzIiwicmUxIiwicmUyIiwicmVnZXhwRmxhZ3MiLCJuYXRpdmVFeGVjIiwibmF0aXZlUmVwbGFjZSIsInBhdGNoZWRFeGVjIiwiVVBEQVRFU19MQVNUX0lOREVYX1dST05HIiwiTlBDR19JTkNMVURFRCIsImxhc3RJbmRleCIsInJlQ29weSIsImF0IiwiZGVmZXIiLCJjaGFubmVsIiwicG9ydCIsImludm9rZSIsImh0bWwiLCJjZWwiLCJzZXRUYXNrIiwic2V0SW1tZWRpYXRlIiwiY2xlYXJUYXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJNZXNzYWdlQ2hhbm5lbCIsIkRpc3BhdGNoIiwiY291bnRlciIsInF1ZXVlIiwicnVuIiwibGlzdGVuZXIiLCJldmVudCIsImFyZ3MiLCJuZXh0VGljayIsIm5vdyIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbXBvcnRTY3JpcHRzIiwic2V0VGltZW91dCIsIlBST1RPVFlQRSIsIldST05HX0lOREVYIiwiQmFzZUJ1ZmZlciIsImFicyIsInBvdyIsImxvZyIsIkxOMiIsIiRCVUZGRVIiLCIkTEVOR1RIIiwiJE9GRlNFVCIsInBhY2tJRUVFNzU0IiwibUxlbiIsIm5CeXRlcyIsImVMZW4iLCJlTWF4IiwiZUJpYXMiLCJydCIsInVucGFja0lFRUU3NTQiLCJuQml0cyIsIk5hTiIsInVucGFja0kzMiIsImJ5dGVzIiwicGFja0k4IiwicGFja0kxNiIsInBhY2tJMzIiLCJwYWNrRjY0IiwicGFja0YzMiIsInZpZXciLCJpc0xpdHRsZUVuZGlhbiIsImludEluZGV4IiwiX2IiLCJwYWNrIiwiY29udmVyc2lvbiIsIkFycmF5QnVmZmVyUHJvdG8iLCIkc2V0SW50OCIsInNldEludDgiLCJnZXRJbnQ4Iiwic2V0VWludDgiLCJidWZmZXJMZW5ndGgiLCJnZXRVaW50OCIsImdldEludDE2IiwiZ2V0VWludDE2IiwiZ2V0SW50MzIiLCJnZXRVaW50MzIiLCJnZXRGbG9hdDMyIiwiZ2V0RmxvYXQ2NCIsInNldEludDE2Iiwic2V0VWludDE2Iiwic2V0SW50MzIiLCJzZXRVaW50MzIiLCJzZXRGbG9hdDMyIiwic2V0RmxvYXQ2NCIsImgiLCJ1IiwiayIsImciLCJBIiwiJCIsInkiLCJ6IiwiTiIsInEiLCJFIiwiSCIsIkkiLCJKIiwiSyIsIkwiLCJNIiwiUSIsIlYiLCJYIiwiWSIsIloiLCJlZSIsImFlIiwiY2UiLCJzZSIsInRlIiwiaWUiLCJmZSIsIm5lIiwibGUiLCJvZSIsImhlIiwidWUiLCJkZSIsImJlIiwicGUiLCJrZSIsImdlIiwiQWUiLCJDZSIsIndlIiwidmUiLCJtZSIsInhlIiwiJGUiLCJ5ZSIsIk9lIiwiamUiLCJ6ZSIsIk5lIiwiU2UiLCJGZSIsIldlIiwicWUiLCJCZSIsIkRlIiwiRWUiLCJHZSIsIkhlIiwiSmUiLCJSZSIsIlRlIiwiVWUiLCJWZSIsIlhlIiwiWWUiLCJRZSIsInN1YnN0cmluZyIsIkllIiwiUGUiLCJNZSIsIkxlIiwiS2UiLCJwYXJzZUZsb2F0IiwiYXJlSW5wdXRzRXF1YWwiLCJuZXdJbnB1dHMiLCJsYXN0SW5wdXRzIiwicmVzdWx0Rm4iLCJpc0VxdWFsIiwibGFzdFRoaXMiLCJsYXN0UmVzdWx0IiwibGFzdEFyZ3MiLCJjYWxsZWRPbmNlIiwibmV3QXJncyIsIndrc0V4dCIsIiRTeW1ib2wiLCJnZXRLZXlzIiwid2luZG93TmFtZXMiLCJnZXRXaW5kb3dOYW1lcyIsImdPUFMiLCIkYXNzaWduIiwiZ2V0U3ltYm9scyIsImlzRW51bSIsImZhY3RvcmllcyIsInBhcnRBcmdzIiwiYm91bmQiLCJjb25zdHJ1Y3QiLCJ1biIsIiRwYXJzZUludCIsInBhcnNlSW50IiwiJHRyaW0iLCJ3cyIsImhleCIsInJhZGl4IiwiJHBhcnNlRmxvYXQiLCJtc2ciLCJpc0Zpbml0ZSIsImxvZzFwIiwicmV0Iiwib3JpZ2luYWwiLCJtZW1vIiwiaXNSaWdodCIsInRvIiwiaW5jIiwiZm9yY2VkIiwiZmxhZ3MiLCJJbnRlcm5hbCIsIm5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSIsIk93blByb21pc2VDYXBhYmlsaXR5IiwiV3JhcHBlciIsInRhc2siLCJtaWNyb3Rhc2siLCJuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSIsInBlcmZvcm0iLCJwcm9taXNlUmVzb2x2ZSIsInZlcnNpb25zIiwidjgiLCIkUHJvbWlzZSIsImlzTm9kZSIsImVtcHR5IiwibmV3UHJvbWlzZUNhcGFiaWxpdHkiLCJVU0VfTkFUSVZFIiwicHJvbWlzZSIsInJlc29sdmUiLCJGYWtlUHJvbWlzZSIsIlByb21pc2VSZWplY3Rpb25FdmVudCIsInRoZW4iLCJpc1RoZW5hYmxlIiwibm90aWZ5IiwiaXNSZWplY3QiLCJfbiIsImNoYWluIiwiX2MiLCJfdiIsIm9rIiwiX3MiLCJyZWFjdGlvbiIsImV4aXRlZCIsImhhbmRsZXIiLCJmYWlsIiwicmVqZWN0IiwiZG9tYWluIiwiX2giLCJvbkhhbmRsZVVuaGFuZGxlZCIsImVudGVyIiwiZXhpdCIsIm9uVW5oYW5kbGVkIiwiY29uc29sZSIsInVuaGFuZGxlZCIsImlzVW5oYW5kbGVkIiwiZW1pdCIsIm9udW5oYW5kbGVkcmVqZWN0aW9uIiwicmVhc29uIiwiZXJyb3IiLCJfYSIsIm9ucmVqZWN0aW9uaGFuZGxlZCIsIiRyZWplY3QiLCJfdyIsIiRyZXNvbHZlIiwiZXhlY3V0b3IiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJjYXRjaCIsIlByb21pc2UiLCJjYXBhYmlsaXR5IiwiJCRyZWplY3QiLCJhbGwiLCJyZW1haW5pbmciLCIkaW5kZXgiLCJhbHJlYWR5Q2FsbGVkIiwicmFjZSIsIlByb21pc2VDYXBhYmlsaXR5IiwiJCRyZXNvbHZlIiwicHJvbWlzZUNhcGFiaWxpdHkiLCIkaXRlckRlZmluZSIsIlNJWkUiLCJnZXRFbnRyeSIsImVudHJ5IiwiX2YiLCJfbCIsImRlbGV0ZSIsIiRoYXMiLCJ1bmNhdWdodEZyb3plblN0b3JlIiwiVW5jYXVnaHRGcm96ZW5TdG9yZSIsImZpbmRVbmNhdWdodEZyb3plbiIsInVmc3RvcmUiLCJudW1iZXIiLCJSZWZsZWN0Iiwib3duS2V5cyIsInJlcGVhdCIsIm1heExlbmd0aCIsImZpbGxTdHJpbmciLCJsZWZ0Iiwic3RyaW5nTGVuZ3RoIiwiZmlsbFN0ciIsImludE1heExlbmd0aCIsImZpbGxMZW4iLCJzdHJpbmdGaWxsZXIiLCJpc0VudHJpZXMiLCJwcm9wSXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwidG9TaGVldCIsImJsb2NrIiwiY29udGVudCIsInBhcmVudHMiLCJsaW5lIiwiY29sdW1uIiwiZGVwdGgiLCJkZWxpbWl0ZXIiLCJmYWN0b3J5IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJXZWJraXRMaW5lQ2xhbXAiLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyZWFjdFByb3BzUmVnZXgiLCJjYWNoZSIsIm1lbW9pemVfYnJvd3Nlcl9lc20iLCJwcm9wIiwiZ2V0VHlwZSIsInBheWxvYWQiLCJpc1N5bWJvbCIsImFzc2lnblByb3AiLCJjYXJyeSIsIm5ld1ZhbCIsIm9yaWdpbmFsT2JqZWN0IiwicHJvcFR5cGUiLCJvcmlnaW4iLCJuZXdDb21lcnMiLCJleHRlbnNpb25zIiwiYmFzZSIsIm5ld0NvbWVyIiwibWVyZ2VSZWN1cnNpdmVseSIsImV4dGVuZCIsIm5ld09iamVjdCIsInByb3BzXzEiLCJzeW1ib2xzXzEiLCJ0YXJnZXRWYWwiLCJfZ2xvYmFsIiwiZGVmYXVsdCIsIl9iYWJlbFBvbHlmaWxsIiwid2FybiIsIiRmYWlscyIsIndrc0RlZmluZSIsImVudW1LZXlzIiwiX2NyZWF0ZSIsImdPUE5FeHQiLCIkR09QUyIsIiRKU09OIiwiSlNPTiIsIl9zdHJpbmdpZnkiLCJzdHJpbmdpZnkiLCJISURERU4iLCJUT19QUklNSVRJVkUiLCJTeW1ib2xSZWdpc3RyeSIsIkFsbFN5bWJvbHMiLCJPUFN5bWJvbHMiLCJRT2JqZWN0IiwiZmluZENoaWxkIiwic2V0U3ltYm9sRGVzYyIsInByb3RvRGVzYyIsIndyYXAiLCJzeW0iLCIkZGVmaW5lUHJvcGVydGllcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIiRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCIkZ2V0T3duUHJvcGVydHlOYW1lcyIsIiRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJJU19PUCIsImVzNlN5bWJvbHMiLCJ3ZWxsS25vd25TeW1ib2xzIiwiZm9yIiwia2V5Rm9yIiwidXNlU2V0dGVyIiwidXNlU2ltcGxlIiwiRkFJTFNfT05fUFJJTUlUSVZFUyIsInJlcGxhY2VyIiwiJHJlcGxhY2VyIiwiJGdldFByb3RvdHlwZU9mIiwiJGZyZWV6ZSIsIiRzZWFsIiwiJHByZXZlbnRFeHRlbnNpb25zIiwiJGlzRnJvemVuIiwiJGlzU2VhbGVkIiwiJGlzRXh0ZW5zaWJsZSIsIkZQcm90byIsIm5hbWVSRSIsIkhBU19JTlNUQU5DRSIsIkZ1bmN0aW9uUHJvdG8iLCIkTnVtYmVyIiwiQlJPS0VOX0NPRiIsIlRSSU0iLCJ0b051bWJlciIsImFyZ3VtZW50IiwidGhpcmQiLCJtYXhDb2RlIiwiZmlyc3QiLCJkaWdpdHMiLCJhTnVtYmVyVmFsdWUiLCIkdG9GaXhlZCIsInRvRml4ZWQiLCJFUlJPUiIsIm11bHRpcGx5IiwiYzIiLCJkaXZpZGUiLCJudW1Ub1N0cmluZyIsImFjYyIsImZyYWN0aW9uRGlnaXRzIiwieDIiLCIkdG9QcmVjaXNpb24iLCJ0b1ByZWNpc2lvbiIsInByZWNpc2lvbiIsIkVQU0lMT04iLCJfaXNGaW5pdGUiLCJpc0ludGVnZXIiLCJpc1NhZmVJbnRlZ2VyIiwiTUFYX1NBRkVfSU5URUdFUiIsIk1JTl9TQUZFX0lOVEVHRVIiLCJOdW1iZXIiLCJzcXJ0IiwiJGFjb3NoIiwiYWNvc2giLCJNQVhfVkFMVUUiLCIkYXNpbmgiLCJhc2luaCIsIiRhdGFuaCIsImF0YW5oIiwiY2JydCIsImNsejMyIiwiTE9HMkUiLCJjb3NoIiwiZnJvdW5kIiwiRVBTSUxPTjMyIiwiTUFYMzIiLCJNSU4zMiIsIiRhYnMiLCIkc2lnbiIsImh5cG90IiwidmFsdWUxIiwidmFsdWUyIiwiZGl2Iiwic3VtIiwibGFyZyIsIiRpbXVsIiwiaW11bCIsInhuIiwieW4iLCJ4bCIsInlsIiwibG9nMTAiLCJMT0cxMEUiLCJsb2cyIiwic2luaCIsInRhbmgiLCJ0cnVuYyIsIiRmcm9tQ29kZVBvaW50IiwiZnJvbUNvZGVQb2ludCIsInJhdyIsImNhbGxTaXRlIiwidHBsIiwiJGF0IiwicG9pbnQiLCJjb2RlUG9pbnRBdCIsIiRlbmRzV2l0aCIsImVuZHNXaXRoIiwiZW5kUG9zaXRpb24iLCJzZWFyY2giLCIkc3RhcnRzV2l0aCIsInN0YXJ0c1dpdGgiLCJjb2xvciIsInVybCIsIkRhdGUiLCJnZXRUaW1lIiwidG9KU09OIiwidG9JU09TdHJpbmciLCJwdiIsIiR0b0lTT1N0cmluZyIsImx6IiwibnVtIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNaWxsaXNlY29uZHMiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiRGF0ZVByb3RvIiwiaGludCIsImNyZWF0ZVByb3BlcnR5IiwidXBUbyIsImNsb25lZCIsIiRzb3J0IiwiJGZvckVhY2giLCJTVFJJQ1QiLCIkZmlsdGVyIiwiJHNvbWUiLCIkZXZlcnkiLCIkcmVkdWNlIiwiJGluZGV4T2YiLCJORUdBVElWRV9aRVJPIiwiJGZpbmQiLCIkZmxhZ3MiLCIkUmVnRXhwIiwiQ09SUkVDVF9ORVciLCJ0aVJFIiwicGlSRSIsImZpVSIsInByb3h5IiwiZGVmaW5lIiwiYWR2YW5jZVN0cmluZ0luZGV4IiwicmVnRXhwRXhlYyIsIiRtYXRjaCIsIm1heWJlQ2FsbE5hdGl2ZSIsInJ4IiwiZnVsbFVuaWNvZGUiLCJtYXRjaFN0ciIsIlNVQlNUSVRVVElPTl9TWU1CT0xTIiwiU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQiLCJSRVBMQUNFIiwiJHJlcGxhY2UiLCJzZWFyY2hWYWx1ZSIsInJlcGxhY2VWYWx1ZSIsImZ1bmN0aW9uYWxSZXBsYWNlIiwicmVzdWx0cyIsImFjY3VtdWxhdGVkUmVzdWx0IiwibmV4dFNvdXJjZVBvc2l0aW9uIiwibWF0Y2hlZCIsInBvc2l0aW9uIiwiY2FwdHVyZXMiLCJuYW1lZENhcHR1cmVzIiwicmVwbGFjZXJBcmdzIiwicmVwbGFjZW1lbnQiLCJnZXRTdWJzdGl0dXRpb24iLCJ0YWlsUG9zIiwiY2giLCJjYXB0dXJlIiwic2FtZVZhbHVlIiwiU0VBUkNIIiwiJHNlYXJjaCIsInByZXZpb3VzTGFzdEluZGV4IiwiY2FsbFJlZ0V4cEV4ZWMiLCIkbWluIiwiJHB1c2giLCJTVVBQT1JUU19ZIiwiU1BMSVQiLCIkc3BsaXQiLCJpbnRlcm5hbFNwbGl0IiwibGltaXQiLCJsYXN0TGVuZ3RoIiwib3V0cHV0IiwibGFzdExhc3RJbmRleCIsInNwbGl0TGltaXQiLCJzZXBhcmF0b3JDb3B5Iiwic3BsaXR0ZXIiLCJ1bmljb2RlTWF0Y2hpbmciLCJsaW0iLCJtYWNyb3Rhc2siLCJPYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJXZWJLaXRNdXRhdGlvbk9ic2VydmVyIiwibGFzdCIsImZsdXNoIiwicGFyZW50Iiwic3RhbmRhbG9uZSIsInRvZ2dsZSIsIm5vZGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsInN0cm9uZyIsImFkZCIsIkludGVybmFsTWFwIiwiZWFjaCIsIndlYWsiLCJOQVRJVkVfV0VBS19NQVAiLCJJU19JRTExIiwiQWN0aXZlWE9iamVjdCIsIiRXZWFrTWFwIiwiJGlzVmlldyIsImlzVmlldyIsImZpbiIsInZpZXdTIiwidmlld1QiLCJpbml0IiwickFwcGx5IiwiZkFwcGx5IiwidGhpc0FyZ3VtZW50IiwiYXJndW1lbnRzTGlzdCIsInJDb25zdHJ1Y3QiLCJORVdfVEFSR0VUX0JVRyIsIkFSR1NfQlVHIiwiVGFyZ2V0IiwibmV3VGFyZ2V0IiwiJGFyZ3MiLCJwcm9wZXJ0eUtleSIsImF0dHJpYnV0ZXMiLCJkZWxldGVQcm9wZXJ0eSIsIkVudW1lcmF0ZSIsImVudW1lcmF0ZSIsInJlY2VpdmVyIiwiZ2V0UHJvdG8iLCJleGlzdGluZ0Rlc2NyaXB0b3IiLCJvd25EZXNjIiwic2V0UHJvdG8iLCIkaW5jbHVkZXMiLCJmbGF0TWFwIiwiZmxhdHRlbkludG9BcnJheSIsImFycmF5U3BlY2llc0NyZWF0ZSIsInNvdXJjZUxlbiIsIklTX0NPTkNBVF9TUFJFQURBQkxFIiwibWFwcGVyIiwidGhpc0FyZyIsImVsZW1lbnQiLCJzcHJlYWRhYmxlIiwidGFyZ2V0SW5kZXgiLCJzb3VyY2VJbmRleCIsIm1hcEZuIiwicGFkU3RhcnQiLCIkcGFkIiwiV0VCS0lUX0JVRyIsInBhZEVuZCIsInRyaW1MZWZ0IiwidHJpbVJpZ2h0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImdldERlc2MiLCIkdmFsdWVzIiwiZmluYWxseSIsIm9uRmluYWxseSIsIk1TSUUiLCJ0aW1lIiwiYm91bmRBcmdzIiwic2V0SW50ZXJ2YWwiLCIkdGFzayIsIlRPX1NUUklOR19UQUciLCJBcnJheVZhbHVlcyIsIkRPTUl0ZXJhYmxlcyIsIkNTU1J1bGVMaXN0IiwiQ1NTU3R5bGVEZWNsYXJhdGlvbiIsIkNTU1ZhbHVlTGlzdCIsIkNsaWVudFJlY3RMaXN0IiwiRE9NUmVjdExpc3QiLCJET01TdHJpbmdMaXN0IiwiRE9NVG9rZW5MaXN0IiwiRGF0YVRyYW5zZmVySXRlbUxpc3QiLCJGaWxlTGlzdCIsIkhUTUxBbGxDb2xsZWN0aW9uIiwiSFRNTENvbGxlY3Rpb24iLCJIVE1MRm9ybUVsZW1lbnQiLCJIVE1MU2VsZWN0RWxlbWVudCIsIk1lZGlhTGlzdCIsIk1pbWVUeXBlQXJyYXkiLCJOYW1lZE5vZGVNYXAiLCJOb2RlTGlzdCIsIlBhaW50UmVxdWVzdExpc3QiLCJQbHVnaW4iLCJQbHVnaW5BcnJheSIsIlNWR0xlbmd0aExpc3QiLCJTVkdOdW1iZXJMaXN0IiwiU1ZHUGF0aFNlZ0xpc3QiLCJTVkdQb2ludExpc3QiLCJTVkdTdHJpbmdMaXN0IiwiU1ZHVHJhbnNmb3JtTGlzdCIsIlNvdXJjZUJ1ZmZlckxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIlRleHRUcmFja0N1ZUxpc3QiLCJUZXh0VHJhY2tMaXN0IiwiVG91Y2hMaXN0IiwiY29sbGVjdGlvbnMiLCJleHBsaWNpdCIsIkNvbGxlY3Rpb24iLCJydW50aW1lIiwiT3AiLCJoYXNPd24iLCJpdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJpbm5lckZuIiwib3V0ZXJGbiIsInRyeUxvY3NMaXN0IiwicHJvdG9HZW5lcmF0b3IiLCJHZW5lcmF0b3IiLCJnZW5lcmF0b3IiLCJDb250ZXh0IiwiX2ludm9rZSIsInN0YXRlIiwiR2VuU3RhdGVTdXNwZW5kZWRTdGFydCIsIkdlblN0YXRlRXhlY3V0aW5nIiwiR2VuU3RhdGVDb21wbGV0ZWQiLCJkb25lUmVzdWx0IiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJDb250aW51ZVNlbnRpbmVsIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJyZWNvcmQiLCJ0cnlDYXRjaCIsIkdlblN0YXRlU3VzcGVuZGVkWWllbGQiLCJtYWtlSW52b2tlTWV0aG9kIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJfX2F3YWl0IiwidW53cmFwcGVkIiwiaW5mbyIsInJlc3VsdE5hbWUiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwibG9jcyIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwiaXRlcmF0b3JNZXRob2QiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsImFzeW5jIiwicG9wIiwic2tpcFRlbXBSZXNldCIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlZ2VuZXJhdG9yUnVudGltZSIsImFjY2lkZW50YWxTdHJpY3RNb2RlIiwiSVNfV1JBUCIsInZpcnR1YWwiLCJhYSIsImJhIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZnJhbWVzVG9Qb3AiLCJjYSIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJyZWZzIiwidXBkYXRlciIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsImN1cnJlbnQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9vd25lciIsImtleVByZWZpeCIsImZ1bmMiLCI9IiwiOiIsImVhIiwiZmEiLCJkYSIsInRvQXJyYXkiLCJjcmVhdGVSZWYiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJjb21wYXJlIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50T3duZXIiLCJoYSIsImlhIiwib25FcnJvciIsImphIiwibGEiLCJtYSIsIm5hIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ1YSIsInZhIiwid2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkJhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkNhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJUYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlVhIiwiVmEiLCJXYSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYSIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsImRvY3VtZW50TW9kZSIsInBiIiwicWIiLCJyYiIsInNiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInRiIiwidWIiLCJrZXlDb2RlIiwidmIiLCJkZXRhaWwiLCJ3YiIsInpiIiwibG9jYWxlIiwid2hpY2giLCJ4YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInliIiwiQWIiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ3ZWVrIiwiTWIiLCJub2RlTmFtZSIsIk5iIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJPYiIsIlBiIiwiUmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlFiIiwiU2IiLCJjaGVja2VkIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJrYyIsImxjIiwibWMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwicmMiLCJzYyIsInRvVXBwZXJDYXNlIiwidGMiLCJwYyIsInFjIiwib2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInVjIiwidmMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIndjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsInhjIiwieWMiLCJ6YyIsIkFjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJCYyIsImNoYW5nZSIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJkZXRhY2hFdmVudCIsIktjIiwiTGMiLCJhdHRhY2hFdmVudCIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIlFjIiwiUmMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiU2MiLCJnZXRNb2RpZmllclN0YXRlIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJaYyIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIiRjIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJhZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiYmQiLCJjZCIsImRkIiwiZWQiLCJlZmZlY3RUYWciLCJmZCIsImhkIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJsb2NhdGlvbiIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwid2QiLCJpc0ludGVyYWN0aXZlIiwieGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJ5ZCIsInpkIiwiQWQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkJkIiwiQ2QiLCJEZCIsIkVkIiwiRmQiLCJHZCIsIkhkIiwiSWQiLCJKZCIsImJvZHkiLCJLZCIsImZpcnN0Q2hpbGQiLCJMZCIsIk5kIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJocmVmIiwiT2QiLCJjb250ZW50RWRpdGFibGUiLCJRZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJNZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJSZCIsIlNkIiwic2VsZWN0IiwiVGQiLCJVZCIsIlZkIiwiV2QiLCJYZCIsIllkIiwib25TZWxlY3QiLCIkZCIsIlpkIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwibWF0aG1sIiwic3ZnIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImdyaWRBcmVhIiwibGluZUNsYW1wIiwic2V0UHJvcGVydHkiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwiYmx1ciIsImF1dG9Gb2N1cyIsImNsZWFyVGltZW91dCIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlNldCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImdldENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJjb250ZXh0RGVwZW5kZW5jaWVzIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJaZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsImNhbGxiYWNrIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwiY29udGV4dFR5cGUiLCJ3ZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInhmIiwieWYiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsImJhc2VVcGRhdGUiLCJuZyIsIm9nIiwicGciLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJxZyIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIlFnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsImhmIiwiaHlkcmF0ZSIsImhpZGRlbiIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImRoIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwic3RhY2siLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwib25DbGljayIsIm9uY2xpY2siLCJwaCIsIldlYWtTZXQiLCJxaCIsInJoIiwic2giLCJ0aCIsInZoIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJ3aCIsInhoIiwieWgiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiemgiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwidWgiLCJoaSIsIlhoIiwiQmgiLCJXZWFrTWFwIiwiQ2giLCJEaCIsIkVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJGaCIsImNvbXBvbmVudFN0YWNrIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlloIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmaW5pc2hlZFdvcmsiLCIkaCIsImFpIiwiY3JlYXRlRWxlbWVudE5TIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJWaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiV2kiLCJYaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsImFycmF5Iiwibm9vcCIsInRpdGxlIiwiYnJvd3NlciIsImFyZ3YiLCJvbiIsImFkZExpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRm9yd2FyZFJlZiIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzTWVtbyIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImJvb2wiLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJCdXR0b24iLCJfdGVtcGxhdGVPYmplY3QiLCJHcmVldGluZ01hc3RlciIsImdyZWV0aW5ncyIsIm9uQWRkIiwiZ3JlZXRpbmciLCJyZWFjdF9kZWZhdWx0IiwiR3JlZXRpbmdEZXRhaWwiLCJfUmVhY3QkdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJSZWFjdCIsImluaXRpYWxOYW1lIiwic2V0TmFtZSIsIl9SZWFjdCR1c2VTdGF0ZTQiLCJpbml0aWFsR3JlZXRpbmciLCJzZXRHcmVldGluZyIsImlucHV0UmVmIiwic2F2ZURpc2FibGVkIiwib25DaGFuZ2UiLCJwbGFjZWhvbGRlciIsIm9uU2F2ZSIsIkJBQ0tFTkRfVVJMIiwiTU9ERV9NQVNURVIiLCJNT0RFX0RFVEFJTCIsIlN0eWxlZEVycm9yTWVzc2FnZSIsIm9uUmV0cnkiLCJFcnJvckhhbmRsZXJfdGVtcGxhdGVPYmplY3QiLCJFcnJvckhhbmRsZXIiLCJfY2xhc3NDYWxsQ2hlY2siLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9nZXRQcm90b3R5cGVPZiIsIm1vdW50Tm9kZSIsImdldEVsZW1lbnRCeUlkIiwiUmVhY3RET00iLCJFcnJvckhhbmRsZXJfRXJyb3JIYW5kbGVyIiwiR3JlZXRpbmdDb250cm9sbGVyX3NsaWNlZFRvQXJyYXkiLCJzZXRNb2RlIiwic2V0R3JlZXRpbmdzIiwiX2FkZEdyZWV0aW5nIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfY2FsbGVlMiIsImdyZWV0aW5nVG9CZUFkZGVkIiwibmV3R3JlZXRpbmciLCJyZXNwb25zZSIsIl9jb250ZXh0MiIsImZldGNoIiwiaGVhZGVycyIsIkFjY2VwdCIsIkNvbnRlbnQtVHlwZSIsInN0YXR1cyIsImpzb24iLCJ0MCIsImN1cnJlbnRHcmVldGluZ3MiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJfbG9hZEdyZWV0aW5ncyIsIl9jYWxsZWUiLCJfZ3JlZXRpbmdzIiwibG9hZEdyZWV0aW5ncyIsInNyY19HcmVldGluZ01hc3RlciIsIl94Il0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkExQixFQUFBa0IsRUFBQU8sR0FDQVgsT0FBQUMsZUFBQVUsRUFB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USxLQUVSQSxFQUFRLEtBRVJBLEVBQVEsS0FFUkEsRUFBUSxLQUVSQSxFQUFRLEtBRVJBLEVBQVEsS0FFUkEsRUFBUSxLQUVSQSxFQUFRLEtBRVJBLEVBQVEsS0FFUkEsRUFBUSxLQUVSQSxFQUFRLEtBRVJBLEVBQVEsS0FFUkEsRUFBUSxzQkM1QlJBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JBLEVBQVEsS0FDUkEsRUFBUSxLQUNSQSxFQUFRLEtBQ1JB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QUFBZixFQUFBbC9CLG1CQUFBbkIsS0FDcEIsU0FBQXFoQyxJQUFBLElBQUFaLEVBQUFhLEVBQUEsT0FBQW5nQyxtQkFBQWpZLEtBQUEsU0FBQXVhLEdBQUEsY0FBQUEsRUFBQTVrQyxLQUFBNGtDLEVBQUFsNUMsTUFBQSxjQUFBazVDLEVBQUE1a0MsS0FBQSxFQUFBNGtDLEVBQUFsNUMsS0FBQSxFQUUyQm8yRSxNQUFNeEIsR0FGakMsY0FFVXNCLEVBRlZoOUIsRUFBQTNGLEtBQUEyRixFQUFBbDVDLEtBQUEsRUFHNEJrMkUsRUFBU08sT0FIckMsT0FHVS9DLEVBSFZ4NkIsRUFBQTNGLEtBSUlxaUMsRUFBYWxDLEdBSmpCeDZCLEVBQUFsNUMsS0FBQSx3QkFBQWs1QyxFQUFBNWtDLEtBQUEsR0FBQTRrQyxFQUFBdzlCLEdBQUF4OUIsRUFBQSxTQU1JeGtCLFFBQVFNLE1BQU0sNEJBQWRra0IsRUFBQXc5QixJQUNBZCxFQUFhLE1BUGpCMThCLEVBQUF4RixPQUFBLG1DQUFBd0YsRUFBQXBELFNBQUFnaEMsRUFBQSxtQkFEb0J6K0UsTUFBQXJCLEtBQUFzQixZQUFBLFdBQUF1K0UsRUFBQXgrRSxNQUFBckIsS0FBQXNCLFdBWXBCMCtFLElBQ0MsSUE0QkM3a0YsSUFBUzBpRixFQUVUaEIsRUFBQWorRSxFQUFBK2QsY0FBQ3NqRSxFQUFELENBQ0V2RCxVQUFXQSxFQUNYQyxNQUFPLFdBQ0xnQyxFQUFRYixNQUtUakIsRUFBQWorRSxFQUFBK2QsY0FBQ21nRSxFQUFELENBQWdCYSxPQXZEb0IsU0FBQXVDLEdBQUEsT0FBQXJCLEVBQUF4OUUsTUFBQXJCLEtBQUFzQixlRUF6QyxPQUVGZzlFIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9kaXN0XCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMzIpO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gfHwgKGdsb2JhbFtuYW1lXSA9IHt9KSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXSB8fCAoZXhwb3J0c1tQUk9UT1RZUEVdID0ge30pO1xuICB2YXIga2V5LCBvd24sIG91dCwgZXhwO1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gKG93biA/IHRhcmdldCA6IHNvdXJjZSlba2V5XTtcbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIGV4cCA9IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4dGVuZCBnbG9iYWxcbiAgICBpZiAodGFyZ2V0KSByZWRlZmluZSh0YXJnZXQsIGtleSwgb3V0LCB0eXBlICYgJGV4cG9ydC5VKTtcbiAgICAvLyBleHBvcnRcbiAgICBpZiAoZXhwb3J0c1trZXldICE9IG91dCkgaGlkZShleHBvcnRzLCBrZXksIGV4cCk7XG4gICAgaWYgKElTX1BST1RPICYmIGV4cFByb3RvW2tleV0gIT0gb3V0KSBleHBQcm90b1trZXldID0gb3V0O1xuICB9XG59O1xuZ2xvYmFsLmNvcmUgPSBjb3JlO1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuIiwidmFyIGNvcmUgPSBtb2R1bGUuZXhwb3J0cyA9IHsgdmVyc2lvbjogJzIuNi42JyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgU1JDID0gcmVxdWlyZSgnLi9fdWlkJykoJ3NyYycpO1xudmFyICR0b1N0cmluZyA9IHJlcXVpcmUoJy4vX2Z1bmN0aW9uLXRvLXN0cmluZycpO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgVFBMID0gKCcnICsgJHRvU3RyaW5nKS5zcGxpdChUT19TVFJJTkcpO1xuXG5yZXF1aXJlKCcuL19jb3JlJykuaW5zcGVjdFNvdXJjZSA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gJHRvU3RyaW5nLmNhbGwoaXQpO1xufTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIGtleSwgdmFsLCBzYWZlKSB7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIHZhbCA9PSAnZnVuY3Rpb24nO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgJ25hbWUnKSB8fCBoaWRlKHZhbCwgJ25hbWUnLCBrZXkpO1xuICBpZiAoT1trZXldID09PSB2YWwpIHJldHVybjtcbiAgaWYgKGlzRnVuY3Rpb24pIGhhcyh2YWwsIFNSQykgfHwgaGlkZSh2YWwsIFNSQywgT1trZXldID8gJycgKyBPW2tleV0gOiBUUEwuam9pbihTdHJpbmcoa2V5KSkpO1xuICBpZiAoTyA9PT0gZ2xvYmFsKSB7XG4gICAgT1trZXldID0gdmFsO1xuICB9IGVsc2UgaWYgKCFzYWZlKSB7XG4gICAgZGVsZXRlIE9ba2V5XTtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfSBlbHNlIGlmIChPW2tleV0pIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSB7XG4gICAgaGlkZShPLCBrZXksIHZhbCk7XG4gIH1cbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxufSkoRnVuY3Rpb24ucHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyAmJiB0aGlzW1NSQ10gfHwgJHRvU3RyaW5nLmNhbGwodGhpcyk7XG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgcXVvdCA9IC9cIi9nO1xuLy8gQi4yLjMuMi4xIENyZWF0ZUhUTUwoc3RyaW5nLCB0YWcsIGF0dHJpYnV0ZSwgdmFsdWUpXG52YXIgY3JlYXRlSFRNTCA9IGZ1bmN0aW9uIChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSkge1xuICB2YXIgUyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICB2YXIgcDEgPSAnPCcgKyB0YWc7XG4gIGlmIChhdHRyaWJ1dGUgIT09ICcnKSBwMSArPSAnICcgKyBhdHRyaWJ1dGUgKyAnPVwiJyArIFN0cmluZyh2YWx1ZSkucmVwbGFjZShxdW90LCAnJnF1b3Q7JykgKyAnXCInO1xuICByZXR1cm4gcDEgKyAnPicgKyBTICsgJzwvJyArIHRhZyArICc+Jztcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCBleGVjKSB7XG4gIHZhciBPID0ge307XG4gIE9bTkFNRV0gPSBleGVjKGNyZWF0ZUhUTUwpO1xuICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGVzdCA9ICcnW05BTUVdKCdcIicpO1xuICAgIHJldHVybiB0ZXN0ICE9PSB0ZXN0LnRvTG93ZXJDYXNlKCkgfHwgdGVzdC5zcGxpdCgnXCInKS5sZW5ndGggPiAzO1xuICB9KSwgJ1N0cmluZycsIE8pO1xufTtcbiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChpdCwga2V5KTtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iLCIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsInZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzKE8sIFApKSByZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuIiwiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG4iLCIvLyAwIC0+IEFycmF5I2ZvckVhY2hcbi8vIDEgLT4gQXJyYXkjbWFwXG4vLyAyIC0+IEFycmF5I2ZpbHRlclxuLy8gMyAtPiBBcnJheSNzb21lXG4vLyA0IC0+IEFycmF5I2V2ZXJ5XG4vLyA1IC0+IEFycmF5I2ZpbmRcbi8vIDYgLT4gQXJyYXkjZmluZEluZGV4XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgYXNjID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRZUEUsICRjcmVhdGUpIHtcbiAgdmFyIElTX01BUCA9IFRZUEUgPT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT0gMjtcbiAgdmFyIElTX1NPTUUgPSBUWVBFID09IDM7XG4gIHZhciBJU19FVkVSWSA9IFRZUEUgPT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDY7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYO1xuICB2YXIgY3JlYXRlID0gJGNyZWF0ZSB8fCBhc2M7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IElPYmplY3QoTyk7XG4gICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKHNlbGYubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciByZXN1bHQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkO1xuICAgIHZhciB2YWwsIHJlcztcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbCA9IHNlbGZbaW5kZXhdO1xuICAgICAgcmVzID0gZih2YWwsIGluZGV4LCBPKTtcbiAgICAgIGlmIChUWVBFKSB7XG4gICAgICAgIGlmIChJU19NQVApIHJlc3VsdFtpbmRleF0gPSByZXM7ICAgLy8gbWFwXG4gICAgICAgIGVsc2UgaWYgKHJlcykgc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbDsgICAgICAgICAgICAgIC8vIGZpbmRcbiAgICAgICAgICBjYXNlIDY6IHJldHVybiBpbmRleDsgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIGlmIChJU19FVkVSWSkgcmV0dXJuIGZhbHNlOyAvLyBldmVyeVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogcmVzdWx0O1xuICB9O1xufTtcbiIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChpdCkuc2xpY2UoOCwgLTEpO1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSkge1xuICB2YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbiAgdmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xuICB2YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xuICB2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuICB2YXIgJHR5cGVkID0gcmVxdWlyZSgnLi9fdHlwZWQnKTtcbiAgdmFyICRidWZmZXIgPSByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKTtcbiAgdmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xuICB2YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG4gIHZhciBwcm9wZXJ0eURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG4gIHZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xuICB2YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbiAgdmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbiAgdmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG4gIHZhciB0b0luZGV4ID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbiAgdmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG4gIHZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xuICB2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG4gIHZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xuICB2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbiAgdmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG4gIHZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbiAgdmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbiAgdmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xuICB2YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbiAgdmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG4gIHZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbiAgdmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xuICB2YXIgY3JlYXRlQXJyYXlNZXRob2QgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJyk7XG4gIHZhciBjcmVhdGVBcnJheUluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKTtcbiAgdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbiAgdmFyIEFycmF5SXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbiAgdmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xuICB2YXIgJGl0ZXJEZXRlY3QgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpO1xuICB2YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG4gIHZhciBhcnJheUZpbGwgPSByZXF1aXJlKCcuL19hcnJheS1maWxsJyk7XG4gIHZhciBhcnJheUNvcHlXaXRoaW4gPSByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpO1xuICB2YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG4gIHZhciAkR09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG4gIHZhciBkUCA9ICREUC5mO1xuICB2YXIgZ09QRCA9ICRHT1BELmY7XG4gIHZhciBSYW5nZUVycm9yID0gZ2xvYmFsLlJhbmdlRXJyb3I7XG4gIHZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xuICB2YXIgVWludDhBcnJheSA9IGdsb2JhbC5VaW50OEFycmF5O1xuICB2YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcbiAgdmFyIFNIQVJFRF9CVUZGRVIgPSAnU2hhcmVkJyArIEFSUkFZX0JVRkZFUjtcbiAgdmFyIEJZVEVTX1BFUl9FTEVNRU5UID0gJ0JZVEVTX1BFUl9FTEVNRU5UJztcbiAgdmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuICB2YXIgQXJyYXlQcm90byA9IEFycmF5W1BST1RPVFlQRV07XG4gIHZhciAkQXJyYXlCdWZmZXIgPSAkYnVmZmVyLkFycmF5QnVmZmVyO1xuICB2YXIgJERhdGFWaWV3ID0gJGJ1ZmZlci5EYXRhVmlldztcbiAgdmFyIGFycmF5Rm9yRWFjaCA9IGNyZWF0ZUFycmF5TWV0aG9kKDApO1xuICB2YXIgYXJyYXlGaWx0ZXIgPSBjcmVhdGVBcnJheU1ldGhvZCgyKTtcbiAgdmFyIGFycmF5U29tZSA9IGNyZWF0ZUFycmF5TWV0aG9kKDMpO1xuICB2YXIgYXJyYXlFdmVyeSA9IGNyZWF0ZUFycmF5TWV0aG9kKDQpO1xuICB2YXIgYXJyYXlGaW5kID0gY3JlYXRlQXJyYXlNZXRob2QoNSk7XG4gIHZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xuICB2YXIgYXJyYXlJbmNsdWRlcyA9IGNyZWF0ZUFycmF5SW5jbHVkZXModHJ1ZSk7XG4gIHZhciBhcnJheUluZGV4T2YgPSBjcmVhdGVBcnJheUluY2x1ZGVzKGZhbHNlKTtcbiAgdmFyIGFycmF5VmFsdWVzID0gQXJyYXlJdGVyYXRvcnMudmFsdWVzO1xuICB2YXIgYXJyYXlLZXlzID0gQXJyYXlJdGVyYXRvcnMua2V5cztcbiAgdmFyIGFycmF5RW50cmllcyA9IEFycmF5SXRlcmF0b3JzLmVudHJpZXM7XG4gIHZhciBhcnJheUxhc3RJbmRleE9mID0gQXJyYXlQcm90by5sYXN0SW5kZXhPZjtcbiAgdmFyIGFycmF5UmVkdWNlID0gQXJyYXlQcm90by5yZWR1Y2U7XG4gIHZhciBhcnJheVJlZHVjZVJpZ2h0ID0gQXJyYXlQcm90by5yZWR1Y2VSaWdodDtcbiAgdmFyIGFycmF5Sm9pbiA9IEFycmF5UHJvdG8uam9pbjtcbiAgdmFyIGFycmF5U29ydCA9IEFycmF5UHJvdG8uc29ydDtcbiAgdmFyIGFycmF5U2xpY2UgPSBBcnJheVByb3RvLnNsaWNlO1xuICB2YXIgYXJyYXlUb1N0cmluZyA9IEFycmF5UHJvdG8udG9TdHJpbmc7XG4gIHZhciBhcnJheVRvTG9jYWxlU3RyaW5nID0gQXJyYXlQcm90by50b0xvY2FsZVN0cmluZztcbiAgdmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xuICB2YXIgVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xuICB2YXIgVFlQRURfQ09OU1RSVUNUT1IgPSB1aWQoJ3R5cGVkX2NvbnN0cnVjdG9yJyk7XG4gIHZhciBERUZfQ09OU1RSVUNUT1IgPSB1aWQoJ2RlZl9jb25zdHJ1Y3RvcicpO1xuICB2YXIgQUxMX0NPTlNUUlVDVE9SUyA9ICR0eXBlZC5DT05TVFI7XG4gIHZhciBUWVBFRF9BUlJBWSA9ICR0eXBlZC5UWVBFRDtcbiAgdmFyIFZJRVcgPSAkdHlwZWQuVklFVztcbiAgdmFyIFdST05HX0xFTkdUSCA9ICdXcm9uZyBsZW5ndGghJztcblxuICB2YXIgJG1hcCA9IGNyZWF0ZUFycmF5TWV0aG9kKDEsIGZ1bmN0aW9uIChPLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gYWxsb2NhdGUoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSksIGxlbmd0aCk7XG4gIH0pO1xuXG4gIHZhciBMSVRUTEVfRU5ESUFOID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShuZXcgVWludDE2QXJyYXkoWzFdKS5idWZmZXIpWzBdID09PSAxO1xuICB9KTtcblxuICB2YXIgRk9SQ0VEX1NFVCA9ICEhVWludDhBcnJheSAmJiAhIVVpbnQ4QXJyYXlbUFJPVE9UWVBFXS5zZXQgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyBVaW50OEFycmF5KDEpLnNldCh7fSk7XG4gIH0pO1xuXG4gIHZhciB0b09mZnNldCA9IGZ1bmN0aW9uIChpdCwgQllURVMpIHtcbiAgICB2YXIgb2Zmc2V0ID0gdG9JbnRlZ2VyKGl0KTtcbiAgICBpZiAob2Zmc2V0IDwgMCB8fCBvZmZzZXQgJSBCWVRFUykgdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIHJldHVybiBvZmZzZXQ7XG4gIH07XG5cbiAgdmFyIHZhbGlkYXRlID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgaWYgKGlzT2JqZWN0KGl0KSAmJiBUWVBFRF9BUlJBWSBpbiBpdCkgcmV0dXJuIGl0O1xuICAgIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgdHlwZWQgYXJyYXkhJyk7XG4gIH07XG5cbiAgdmFyIGFsbG9jYXRlID0gZnVuY3Rpb24gKEMsIGxlbmd0aCkge1xuICAgIGlmICghKGlzT2JqZWN0KEMpICYmIFRZUEVEX0NPTlNUUlVDVE9SIGluIEMpKSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ0l0IGlzIG5vdCBhIHR5cGVkIGFycmF5IGNvbnN0cnVjdG9yIScpO1xuICAgIH0gcmV0dXJuIG5ldyBDKGxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHNwZWNpZXNGcm9tTGlzdCA9IGZ1bmN0aW9uIChPLCBsaXN0KSB7XG4gICAgcmV0dXJuIGZyb21MaXN0KHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsaXN0KTtcbiAgfTtcblxuICB2YXIgZnJvbUxpc3QgPSBmdW5jdGlvbiAoQywgbGlzdCkge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IGxpc3QubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSBhbGxvY2F0ZShDLCBsZW5ndGgpO1xuICAgIHdoaWxlIChsZW5ndGggPiBpbmRleCkgcmVzdWx0W2luZGV4XSA9IGxpc3RbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICB2YXIgYWRkR2V0dGVyID0gZnVuY3Rpb24gKGl0LCBrZXksIGludGVybmFsKSB7XG4gICAgZFAoaXQsIGtleSwgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX2RbaW50ZXJuYWxdOyB9IH0pO1xuICB9O1xuXG4gIHZhciAkZnJvbSA9IGZ1bmN0aW9uIGZyb20oc291cmNlIC8qICwgbWFwZm4sIHRoaXNBcmcgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHNvdXJjZSk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBpLCBsZW5ndGgsIHZhbHVlcywgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhaXNBcnJheUl0ZXIoaXRlckZuKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCB2YWx1ZXMgPSBbXSwgaSA9IDA7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaSsrKSB7XG4gICAgICAgIHZhbHVlcy5wdXNoKHN0ZXAudmFsdWUpO1xuICAgICAgfSBPID0gdmFsdWVzO1xuICAgIH1cbiAgICBpZiAobWFwcGluZyAmJiBhTGVuID4gMikgbWFwZm4gPSBjdHgobWFwZm4sIGFyZ3VtZW50c1syXSwgMik7XG4gICAgZm9yIChpID0gMCwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpLCByZXN1bHQgPSBhbGxvY2F0ZSh0aGlzLCBsZW5ndGgpOyBsZW5ndGggPiBpOyBpKyspIHtcbiAgICAgIHJlc3VsdFtpXSA9IG1hcHBpbmcgPyBtYXBmbihPW2ldLCBpKSA6IE9baV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyICRvZiA9IGZ1bmN0aW9uIG9mKC8qIC4uLml0ZW1zICovKSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHJlc3VsdFtpbmRleF0gPSBhcmd1bWVudHNbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICAvLyBpT1MgU2FmYXJpIDYueCBmYWlscyBoZXJlXG4gIHZhciBUT19MT0NBTEVfQlVHID0gISFVaW50OEFycmF5ICYmIGZhaWxzKGZ1bmN0aW9uICgpIHsgYXJyYXlUb0xvY2FsZVN0cmluZy5jYWxsKG5ldyBVaW50OEFycmF5KDEpKTsgfSk7XG5cbiAgdmFyICR0b0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvTG9jYWxlU3RyaW5nKCkge1xuICAgIHJldHVybiBhcnJheVRvTG9jYWxlU3RyaW5nLmFwcGx5KFRPX0xPQ0FMRV9CVUcgPyBhcnJheVNsaWNlLmNhbGwodmFsaWRhdGUodGhpcykpIDogdmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gIH07XG5cbiAgdmFyIHByb3RvID0ge1xuICAgIGNvcHlXaXRoaW46IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCAvKiAsIGVuZCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5Q29weVdpdGhpbi5jYWxsKHZhbGlkYXRlKHRoaXMpLCB0YXJnZXQsIHN0YXJ0LCBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBldmVyeTogZnVuY3Rpb24gZXZlcnkoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUV2ZXJ5KHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmaWxsOiBmdW5jdGlvbiBmaWxsKHZhbHVlIC8qICwgc3RhcnQsIGVuZCAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlGaWxsLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBzcGVjaWVzRnJvbUxpc3QodGhpcywgYXJyYXlGaWx0ZXIodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sXG4gICAgICAgIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKSk7XG4gICAgfSxcbiAgICBmaW5kOiBmdW5jdGlvbiBmaW5kKHByZWRpY2F0ZSAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUZpbmQodmFsaWRhdGUodGhpcyksIHByZWRpY2F0ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZmluZEluZGV4OiBmdW5jdGlvbiBmaW5kSW5kZXgocHJlZGljYXRlIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5RmluZEluZGV4KHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIGFycmF5Rm9yRWFjaCh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlJbmRleE9mKHZhbGlkYXRlKHRoaXMpLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5SW5jbHVkZXModmFsaWRhdGUodGhpcyksIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGpvaW46IGZ1bmN0aW9uIGpvaW4oc2VwYXJhdG9yKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheUpvaW4uYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlMYXN0SW5kZXhPZi5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIG1hcDogZnVuY3Rpb24gbWFwKG1hcGZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuICRtYXAodmFsaWRhdGUodGhpcyksIG1hcGZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheVJlZHVjZS5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheVJlZHVjZVJpZ2h0LmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgcmV2ZXJzZTogZnVuY3Rpb24gcmV2ZXJzZSgpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgIHZhciBsZW5ndGggPSB2YWxpZGF0ZSh0aGF0KS5sZW5ndGg7XG4gICAgICB2YXIgbWlkZGxlID0gTWF0aC5mbG9vcihsZW5ndGggLyAyKTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgdmFsdWU7XG4gICAgICB3aGlsZSAoaW5kZXggPCBtaWRkbGUpIHtcbiAgICAgICAgdmFsdWUgPSB0aGF0W2luZGV4XTtcbiAgICAgICAgdGhhdFtpbmRleCsrXSA9IHRoYXRbLS1sZW5ndGhdO1xuICAgICAgICB0aGF0W2xlbmd0aF0gPSB2YWx1ZTtcbiAgICAgIH0gcmV0dXJuIHRoYXQ7XG4gICAgfSxcbiAgICBzb21lOiBmdW5jdGlvbiBzb21lKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlTb21lKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBzb3J0OiBmdW5jdGlvbiBzb3J0KGNvbXBhcmVmbikge1xuICAgICAgcmV0dXJuIGFycmF5U29ydC5jYWxsKHZhbGlkYXRlKHRoaXMpLCBjb21wYXJlZm4pO1xuICAgIH0sXG4gICAgc3ViYXJyYXk6IGZ1bmN0aW9uIHN1YmFycmF5KGJlZ2luLCBlbmQpIHtcbiAgICAgIHZhciBPID0gdmFsaWRhdGUodGhpcyk7XG4gICAgICB2YXIgbGVuZ3RoID0gTy5sZW5ndGg7XG4gICAgICB2YXIgJGJlZ2luID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW5ndGgpO1xuICAgICAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSkpKFxuICAgICAgICBPLmJ1ZmZlcixcbiAgICAgICAgTy5ieXRlT2Zmc2V0ICsgJGJlZ2luICogTy5CWVRFU19QRVJfRUxFTUVOVCxcbiAgICAgICAgdG9MZW5ndGgoKGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuZ3RoKSkgLSAkYmVnaW4pXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICB2YXIgJHNsaWNlID0gZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBzcGVjaWVzRnJvbUxpc3QodGhpcywgYXJyYXlTbGljZS5jYWxsKHZhbGlkYXRlKHRoaXMpLCBzdGFydCwgZW5kKSk7XG4gIH07XG5cbiAgdmFyICRzZXQgPSBmdW5jdGlvbiBzZXQoYXJyYXlMaWtlIC8qICwgb2Zmc2V0ICovKSB7XG4gICAgdmFsaWRhdGUodGhpcyk7XG4gICAgdmFyIG9mZnNldCA9IHRvT2Zmc2V0KGFyZ3VtZW50c1sxXSwgMSk7XG4gICAgdmFyIGxlbmd0aCA9IHRoaXMubGVuZ3RoO1xuICAgIHZhciBzcmMgPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aChzcmMubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGlmIChsZW4gKyBvZmZzZXQgPiBsZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICB3aGlsZSAoaW5kZXggPCBsZW4pIHRoaXNbb2Zmc2V0ICsgaW5kZXhdID0gc3JjW2luZGV4KytdO1xuICB9O1xuXG4gIHZhciAkaXRlcmF0b3JzID0ge1xuICAgIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlFbnRyaWVzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH0sXG4gICAga2V5czogZnVuY3Rpb24ga2V5cygpIHtcbiAgICAgIHJldHVybiBhcnJheUtleXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfSxcbiAgICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcygpIHtcbiAgICAgIHJldHVybiBhcnJheVZhbHVlcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzVEFJbmRleCA9IGZ1bmN0aW9uICh0YXJnZXQsIGtleSkge1xuICAgIHJldHVybiBpc09iamVjdCh0YXJnZXQpXG4gICAgICAmJiB0YXJnZXRbVFlQRURfQVJSQVldXG4gICAgICAmJiB0eXBlb2Yga2V5ICE9ICdzeW1ib2wnXG4gICAgICAmJiBrZXkgaW4gdGFyZ2V0XG4gICAgICAmJiBTdHJpbmcoK2tleSkgPT0gU3RyaW5nKGtleSk7XG4gIH07XG4gIHZhciAkZ2V0RGVzYyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkge1xuICAgIHJldHVybiBpc1RBSW5kZXgodGFyZ2V0LCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKVxuICAgICAgPyBwcm9wZXJ0eURlc2MoMiwgdGFyZ2V0W2tleV0pXG4gICAgICA6IGdPUEQodGFyZ2V0LCBrZXkpO1xuICB9O1xuICB2YXIgJHNldERlc2MgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIGlmIChpc1RBSW5kZXgodGFyZ2V0LCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKVxuICAgICAgJiYgaXNPYmplY3QoZGVzYylcbiAgICAgICYmIGhhcyhkZXNjLCAndmFsdWUnKVxuICAgICAgJiYgIWhhcyhkZXNjLCAnZ2V0JylcbiAgICAgICYmICFoYXMoZGVzYywgJ3NldCcpXG4gICAgICAvLyBUT0RPOiBhZGQgdmFsaWRhdGlvbiBkZXNjcmlwdG9yIHcvbyBjYWxsaW5nIGFjY2Vzc29yc1xuICAgICAgJiYgIWRlc2MuY29uZmlndXJhYmxlXG4gICAgICAmJiAoIWhhcyhkZXNjLCAnd3JpdGFibGUnKSB8fCBkZXNjLndyaXRhYmxlKVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ2VudW1lcmFibGUnKSB8fCBkZXNjLmVudW1lcmFibGUpXG4gICAgKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IGRlc2MudmFsdWU7XG4gICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH0gcmV0dXJuIGRQKHRhcmdldCwga2V5LCBkZXNjKTtcbiAgfTtcblxuICBpZiAoIUFMTF9DT05TVFJVQ1RPUlMpIHtcbiAgICAkR09QRC5mID0gJGdldERlc2M7XG4gICAgJERQLmYgPSAkc2V0RGVzYztcbiAgfVxuXG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIUFMTF9DT05TVFJVQ1RPUlMsICdPYmplY3QnLCB7XG4gICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0RGVzYyxcbiAgICBkZWZpbmVQcm9wZXJ0eTogJHNldERlc2NcbiAgfSk7XG5cbiAgaWYgKGZhaWxzKGZ1bmN0aW9uICgpIHsgYXJyYXlUb1N0cmluZy5jYWxsKHt9KTsgfSkpIHtcbiAgICBhcnJheVRvU3RyaW5nID0gYXJyYXlUb0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIGFycmF5Sm9pbi5jYWxsKHRoaXMpO1xuICAgIH07XG4gIH1cblxuICB2YXIgJFR5cGVkQXJyYXlQcm90b3R5cGUkID0gcmVkZWZpbmVBbGwoe30sIHByb3RvKTtcbiAgcmVkZWZpbmVBbGwoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAkaXRlcmF0b3JzKTtcbiAgaGlkZSgkVHlwZWRBcnJheVByb3RvdHlwZSQsIElURVJBVE9SLCAkaXRlcmF0b3JzLnZhbHVlcyk7XG4gIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwge1xuICAgIHNsaWNlOiAkc2xpY2UsXG4gICAgc2V0OiAkc2V0LFxuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiAoKSB7IC8qIG5vb3AgKi8gfSxcbiAgICB0b1N0cmluZzogYXJyYXlUb1N0cmluZyxcbiAgICB0b0xvY2FsZVN0cmluZzogJHRvTG9jYWxlU3RyaW5nXG4gIH0pO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnVmZmVyJywgJ2InKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVPZmZzZXQnLCAnbycpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnl0ZUxlbmd0aCcsICdsJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdsZW5ndGgnLCAnZScpO1xuICBkUCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIFRBRywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc1tUWVBFRF9BUlJBWV07IH1cbiAgfSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1zdGF0ZW1lbnRzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgQllURVMsIHdyYXBwZXIsIENMQU1QRUQpIHtcbiAgICBDTEFNUEVEID0gISFDTEFNUEVEO1xuICAgIHZhciBOQU1FID0gS0VZICsgKENMQU1QRUQgPyAnQ2xhbXBlZCcgOiAnJykgKyAnQXJyYXknO1xuICAgIHZhciBHRVRURVIgPSAnZ2V0JyArIEtFWTtcbiAgICB2YXIgU0VUVEVSID0gJ3NldCcgKyBLRVk7XG4gICAgdmFyIFR5cGVkQXJyYXkgPSBnbG9iYWxbTkFNRV07XG4gICAgdmFyIEJhc2UgPSBUeXBlZEFycmF5IHx8IHt9O1xuICAgIHZhciBUQUMgPSBUeXBlZEFycmF5ICYmIGdldFByb3RvdHlwZU9mKFR5cGVkQXJyYXkpO1xuICAgIHZhciBGT1JDRUQgPSAhVHlwZWRBcnJheSB8fCAhJHR5cGVkLkFCVjtcbiAgICB2YXIgTyA9IHt9O1xuICAgIHZhciBUeXBlZEFycmF5UHJvdG90eXBlID0gVHlwZWRBcnJheSAmJiBUeXBlZEFycmF5W1BST1RPVFlQRV07XG4gICAgdmFyIGdldHRlciA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCkge1xuICAgICAgdmFyIGRhdGEgPSB0aGF0Ll9kO1xuICAgICAgcmV0dXJuIGRhdGEudltHRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIExJVFRMRV9FTkRJQU4pO1xuICAgIH07XG4gICAgdmFyIHNldHRlciA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCwgdmFsdWUpIHtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIGlmIChDTEFNUEVEKSB2YWx1ZSA9ICh2YWx1ZSA9IE1hdGgucm91bmQodmFsdWUpKSA8IDAgPyAwIDogdmFsdWUgPiAweGZmID8gMHhmZiA6IHZhbHVlICYgMHhmZjtcbiAgICAgIGRhdGEudltTRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIHZhbHVlLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBhZGRFbGVtZW50ID0gZnVuY3Rpb24gKHRoYXQsIGluZGV4KSB7XG4gICAgICBkUCh0aGF0LCBpbmRleCwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gZ2V0dGVyKHRoaXMsIGluZGV4KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gc2V0dGVyKHRoaXMsIGluZGV4LCB2YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkge1xuICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGRhdGEsICRvZmZzZXQsICRsZW5ndGgpIHtcbiAgICAgICAgYW5JbnN0YW5jZSh0aGF0LCBUeXBlZEFycmF5LCBOQU1FLCAnX2QnKTtcbiAgICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgICAgdmFyIG9mZnNldCA9IDA7XG4gICAgICAgIHZhciBidWZmZXIsIGJ5dGVMZW5ndGgsIGxlbmd0aCwga2xhc3M7XG4gICAgICAgIGlmICghaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgICAgICBsZW5ndGggPSB0b0luZGV4KGRhdGEpO1xuICAgICAgICAgIGJ5dGVMZW5ndGggPSBsZW5ndGggKiBCWVRFUztcbiAgICAgICAgICBidWZmZXIgPSBuZXcgJEFycmF5QnVmZmVyKGJ5dGVMZW5ndGgpO1xuICAgICAgICB9IGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiAkQXJyYXlCdWZmZXIgfHwgKGtsYXNzID0gY2xhc3NvZihkYXRhKSkgPT0gQVJSQVlfQlVGRkVSIHx8IGtsYXNzID09IFNIQVJFRF9CVUZGRVIpIHtcbiAgICAgICAgICBidWZmZXIgPSBkYXRhO1xuICAgICAgICAgIG9mZnNldCA9IHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKTtcbiAgICAgICAgICB2YXIgJGxlbiA9IGRhdGEuYnl0ZUxlbmd0aDtcbiAgICAgICAgICBpZiAoJGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAoJGxlbiAlIEJZVEVTKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgICAgICAgICBieXRlTGVuZ3RoID0gJGxlbiAtIG9mZnNldDtcbiAgICAgICAgICAgIGlmIChieXRlTGVuZ3RoIDwgMCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBieXRlTGVuZ3RoID0gdG9MZW5ndGgoJGxlbmd0aCkgKiBCWVRFUztcbiAgICAgICAgICAgIGlmIChieXRlTGVuZ3RoICsgb2Zmc2V0ID4gJGxlbikgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZW5ndGggPSBieXRlTGVuZ3RoIC8gQllURVM7XG4gICAgICAgIH0gZWxzZSBpZiAoVFlQRURfQVJSQVkgaW4gZGF0YSkge1xuICAgICAgICAgIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJGZyb20uY2FsbChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBoaWRlKHRoYXQsICdfZCcsIHtcbiAgICAgICAgICBiOiBidWZmZXIsXG4gICAgICAgICAgbzogb2Zmc2V0LFxuICAgICAgICAgIGw6IGJ5dGVMZW5ndGgsXG4gICAgICAgICAgZTogbGVuZ3RoLFxuICAgICAgICAgIHY6IG5ldyAkRGF0YVZpZXcoYnVmZmVyKVxuICAgICAgICB9KTtcbiAgICAgICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSBhZGRFbGVtZW50KHRoYXQsIGluZGV4KyspO1xuICAgICAgfSk7XG4gICAgICBUeXBlZEFycmF5UHJvdG90eXBlID0gVHlwZWRBcnJheVtQUk9UT1RZUEVdID0gY3JlYXRlKCRUeXBlZEFycmF5UHJvdG90eXBlJCk7XG4gICAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsICdjb25zdHJ1Y3RvcicsIFR5cGVkQXJyYXkpO1xuICAgIH0gZWxzZSBpZiAoIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIFR5cGVkQXJyYXkoMSk7XG4gICAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KC0xKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICB9KSB8fCAhJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheShudWxsKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAgIG5ldyBUeXBlZEFycmF5KDEuNSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheShpdGVyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICB9LCB0cnVlKSkge1xuICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGRhdGEsICRvZmZzZXQsICRsZW5ndGgpIHtcbiAgICAgICAgYW5JbnN0YW5jZSh0aGF0LCBUeXBlZEFycmF5LCBOQU1FKTtcbiAgICAgICAgdmFyIGtsYXNzO1xuICAgICAgICAvLyBgd3NgIG1vZHVsZSBidWcsIHRlbXBvcmFyaWx5IHJlbW92ZSB2YWxpZGF0aW9uIGxlbmd0aCBmb3IgVWludDhBcnJheVxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2Vic29ja2V0cy93cy9wdWxsLzY0NVxuICAgICAgICBpZiAoIWlzT2JqZWN0KGRhdGEpKSByZXR1cm4gbmV3IEJhc2UodG9JbmRleChkYXRhKSk7XG4gICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgJEFycmF5QnVmZmVyIHx8IChrbGFzcyA9IGNsYXNzb2YoZGF0YSkpID09IEFSUkFZX0JVRkZFUiB8fCBrbGFzcyA9PSBTSEFSRURfQlVGRkVSKSB7XG4gICAgICAgICAgcmV0dXJuICRsZW5ndGggIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyksICRsZW5ndGgpXG4gICAgICAgICAgICA6ICRvZmZzZXQgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICA/IG5ldyBCYXNlKGRhdGEsIHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKSlcbiAgICAgICAgICAgICAgOiBuZXcgQmFzZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoVFlQRURfQVJSQVkgaW4gZGF0YSkgcmV0dXJuIGZyb21MaXN0KFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gJGZyb20uY2FsbChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgIH0pO1xuICAgICAgYXJyYXlGb3JFYWNoKFRBQyAhPT0gRnVuY3Rpb24ucHJvdG90eXBlID8gZ09QTihCYXNlKS5jb25jYXQoZ09QTihUQUMpKSA6IGdPUE4oQmFzZSksIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCEoa2V5IGluIFR5cGVkQXJyYXkpKSBoaWRlKFR5cGVkQXJyYXksIGtleSwgQmFzZVtrZXldKTtcbiAgICAgIH0pO1xuICAgICAgVHlwZWRBcnJheVtQUk9UT1RZUEVdID0gVHlwZWRBcnJheVByb3RvdHlwZTtcbiAgICAgIGlmICghTElCUkFSWSkgVHlwZWRBcnJheVByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFR5cGVkQXJyYXk7XG4gICAgfVxuICAgIHZhciAkbmF0aXZlSXRlcmF0b3IgPSBUeXBlZEFycmF5UHJvdG90eXBlW0lURVJBVE9SXTtcbiAgICB2YXIgQ09SUkVDVF9JVEVSX05BTUUgPSAhISRuYXRpdmVJdGVyYXRvclxuICAgICAgJiYgKCRuYXRpdmVJdGVyYXRvci5uYW1lID09ICd2YWx1ZXMnIHx8ICRuYXRpdmVJdGVyYXRvci5uYW1lID09IHVuZGVmaW5lZCk7XG4gICAgdmFyICRpdGVyYXRvciA9ICRpdGVyYXRvcnMudmFsdWVzO1xuICAgIGhpZGUoVHlwZWRBcnJheSwgVFlQRURfQ09OU1RSVUNUT1IsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVFlQRURfQVJSQVksIE5BTUUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBERUZfQ09OU1RSVUNUT1IsIFR5cGVkQXJyYXkpO1xuXG4gICAgaWYgKENMQU1QRUQgPyBuZXcgVHlwZWRBcnJheSgxKVtUQUddICE9IE5BTUUgOiAhKFRBRyBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSkge1xuICAgICAgZFAoVHlwZWRBcnJheVByb3RvdHlwZSwgVEFHLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTkFNRTsgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgT1tOQU1FXSA9IFR5cGVkQXJyYXk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChUeXBlZEFycmF5ICE9IEJhc2UpLCBPKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5TLCBOQU1FLCB7XG4gICAgICBCWVRFU19QRVJfRUxFTUVOVDogQllURVNcbiAgICB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkgeyBCYXNlLm9mLmNhbGwoVHlwZWRBcnJheSwgMSk7IH0pLCBOQU1FLCB7XG4gICAgICBmcm9tOiAkZnJvbSxcbiAgICAgIG9mOiAkb2ZcbiAgICB9KTtcblxuICAgIGlmICghKEJZVEVTX1BFUl9FTEVNRU5UIGluIFR5cGVkQXJyYXlQcm90b3R5cGUpKSBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIEJZVEVTX1BFUl9FTEVNRU5ULCBCWVRFUyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCwgTkFNRSwgcHJvdG8pO1xuXG4gICAgc2V0U3BlY2llcyhOQU1FKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogRk9SQ0VEX1NFVCwgTkFNRSwgeyBzZXQ6ICRzZXQgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFDT1JSRUNUX0lURVJfTkFNRSwgTkFNRSwgJGl0ZXJhdG9ycyk7XG5cbiAgICBpZiAoIUxJQlJBUlkgJiYgVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyAhPSBhcnJheVRvU3RyaW5nKSBUeXBlZEFycmF5UHJvdG90eXBlLnRvU3RyaW5nID0gYXJyYXlUb1N0cmluZztcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgbmV3IFR5cGVkQXJyYXkoMSkuc2xpY2UoKTtcbiAgICB9KSwgTkFNRSwgeyBzbGljZTogJHNsaWNlIH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFsxLCAyXS50b0xvY2FsZVN0cmluZygpICE9IG5ldyBUeXBlZEFycmF5KFsxLCAyXSkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgVHlwZWRBcnJheVByb3RvdHlwZS50b0xvY2FsZVN0cmluZy5jYWxsKFsxLCAyXSk7XG4gICAgfSkpLCBOQU1FLCB7IHRvTG9jYWxlU3RyaW5nOiAkdG9Mb2NhbGVTdHJpbmcgfSk7XG5cbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBDT1JSRUNUX0lURVJfTkFNRSA/ICRuYXRpdmVJdGVyYXRvciA6ICRpdGVyYXRvcjtcbiAgICBpZiAoIUxJQlJBUlkgJiYgIUNPUlJFQ1RfSVRFUl9OQU1FKSBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIElURVJBVE9SLCAkaXRlcmF0b3IpO1xuICB9O1xufSBlbHNlIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiIsInZhciBpZCA9IDA7XG52YXIgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCIvLyAxOS4xLjIuOSAvIDE1LjIuMy4yIE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiAoTykge1xuICBPID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXMoTywgSUVfUFJPVE8pKSByZXR1cm4gT1tJRV9QUk9UT107XG4gIGlmICh0eXBlb2YgTy5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmIE8gaW5zdGFuY2VvZiBPLmNvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcbiIsIi8vIDIyLjEuMy4zMSBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbnZhciBVTlNDT1BBQkxFUyA9IHJlcXVpcmUoJy4vX3drcycpKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5pZiAoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSByZXF1aXJlKCcuL19oaWRlJykoQXJyYXlQcm90bywgVU5TQ09QQUJMRVMsIHt9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBUWVBFKSB7XG4gIGlmICghaXNPYmplY3QoaXQpIHx8IGl0Ll90ICE9PSBUWVBFKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29tcGF0aWJsZSByZWNlaXZlciwgJyArIFRZUEUgKyAnIHJlcXVpcmVkIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNwYWNlcyA9IHJlcXVpcmUoJy4vX3N0cmluZy13cycpO1xudmFyIHNwYWNlID0gJ1snICsgc3BhY2VzICsgJ10nO1xudmFyIG5vbiA9ICdcXHUyMDBiXFx1MDA4NSc7XG52YXIgbHRyaW0gPSBSZWdFeHAoJ14nICsgc3BhY2UgKyBzcGFjZSArICcqJyk7XG52YXIgcnRyaW0gPSBSZWdFeHAoc3BhY2UgKyBzcGFjZSArICcqJCcpO1xuXG52YXIgZXhwb3J0ZXIgPSBmdW5jdGlvbiAoS0VZLCBleGVjLCBBTElBUykge1xuICB2YXIgZXhwID0ge307XG4gIHZhciBGT1JDRSA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gISFzcGFjZXNbS0VZXSgpIHx8IG5vbltLRVldKCkgIT0gbm9uO1xuICB9KTtcbiAgdmFyIGZuID0gZXhwW0tFWV0gPSBGT1JDRSA/IGV4ZWModHJpbSkgOiBzcGFjZXNbS0VZXTtcbiAgaWYgKEFMSUFTKSBleHBbQUxJQVNdID0gZm47XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogRk9SQ0UsICdTdHJpbmcnLCBleHApO1xufTtcblxuLy8gMSAtPiBTdHJpbmcjdHJpbUxlZnRcbi8vIDIgLT4gU3RyaW5nI3RyaW1SaWdodFxuLy8gMyAtPiBTdHJpbmcjdHJpbVxudmFyIHRyaW0gPSBleHBvcnRlci50cmltID0gZnVuY3Rpb24gKHN0cmluZywgVFlQRSkge1xuICBzdHJpbmcgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKTtcbiAgaWYgKFRZUEUgJiAxKSBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShsdHJpbSwgJycpO1xuICBpZiAoVFlQRSAmIDIpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJ0cmltLCAnJyk7XG4gIHJldHVybiBzdHJpbmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVyO1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciBDID0gZ2xvYmFsW0tFWV07XG4gIGlmIChERVNDUklQVE9SUyAmJiBDICYmICFDW1NQRUNJRVNdKSBkUC5mKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9XG4gIH0pO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgc2FmZSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGNvZihpdCkgPT0gJ1N0cmluZycgPyBpdC5zcGxpdCgnJykgOiBPYmplY3QoaXQpO1xufTtcbiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwidmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXyc7XG52YXIgc3RvcmUgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoge30pO1xufSkoJ3ZlcnNpb25zJywgW10pLnB1c2goe1xuICB2ZXJzaW9uOiBjb3JlLnZlcnNpb24sXG4gIG1vZGU6IHJlcXVpcmUoJy4vX2xpYnJhcnknKSA/ICdwdXJlJyA6ICdnbG9iYWwnLFxuICBjb3B5cmlnaHQ6ICfCqSAyMDE5IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpJ1xufSk7XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIvLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4yLjUuMyBnZXQgUmVnRXhwLnByb3RvdHlwZS5mbGFnc1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSBhbk9iamVjdCh0aGlzKTtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAodGhhdC5nbG9iYWwpIHJlc3VsdCArPSAnZyc7XG4gIGlmICh0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7XG4gIGlmICh0aGF0Lm11bHRpbGluZSkgcmVzdWx0ICs9ICdtJztcbiAgaWYgKHRoYXQudW5pY29kZSkgcmVzdWx0ICs9ICd1JztcbiAgaWYgKHRoYXQuc3RpY2t5KSByZXN1bHQgKz0gJ3knO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgYnVpbHRpbkV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG5cbiAvLyBgUmVnRXhwRXhlY2AgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHBleGVjXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChSLCBTKSB7XG4gIHZhciBleGVjID0gUi5leGVjO1xuICBpZiAodHlwZW9mIGV4ZWMgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgcmVzdWx0ID0gZXhlYy5jYWxsKFIsIFMpO1xuICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwIGV4ZWMgbWV0aG9kIHJldHVybmVkIHNvbWV0aGluZyBvdGhlciB0aGFuIGFuIE9iamVjdCBvciBudWxsJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKGNsYXNzb2YoUikgIT09ICdSZWdFeHAnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwI2V4ZWMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlcicpO1xuICB9XG4gIHJldHVybiBidWlsdGluRXhlYy5jYWxsKFIsIFMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5leGVjJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjJyk7XG5cbnZhciBTUEVDSUVTID0gd2tzKCdzcGVjaWVzJyk7XG5cbnZhciBSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vICNyZXBsYWNlIG5lZWRzIGJ1aWx0LWluIHN1cHBvcnQgZm9yIG5hbWVkIGdyb3Vwcy5cbiAgLy8gI21hdGNoIHdvcmtzIGZpbmUgYmVjYXVzZSBpdCBqdXN0IHJldHVybiB0aGUgZXhlYyByZXN1bHRzLCBldmVuIGlmIGl0IGhhc1xuICAvLyBhIFwiZ3JvcHNcIiBwcm9wZXJ0eS5cbiAgdmFyIHJlID0gLy4vO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICByZXN1bHQuZ3JvdXBzID0geyBhOiAnNycgfTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICByZXR1cm4gJycucmVwbGFjZShyZSwgJyQ8YT4nKSAhPT0gJzcnO1xufSk7XG5cbnZhciBTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMgPSAoZnVuY3Rpb24gKCkge1xuICAvLyBDaHJvbWUgNTEgaGFzIGEgYnVnZ3kgXCJzcGxpdFwiIGltcGxlbWVudGF0aW9uIHdoZW4gUmVnRXhwI2V4ZWMgIT09IG5hdGl2ZUV4ZWNcbiAgdmFyIHJlID0gLyg/OikvO1xuICB2YXIgb3JpZ2luYWxFeGVjID0gcmUuZXhlYztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG9yaWdpbmFsRXhlYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9O1xuICB2YXIgcmVzdWx0ID0gJ2FiJy5zcGxpdChyZSk7XG4gIHJldHVybiByZXN1bHQubGVuZ3RoID09PSAyICYmIHJlc3VsdFswXSA9PT0gJ2EnICYmIHJlc3VsdFsxXSA9PT0gJ2InO1xufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBsZW5ndGgsIGV4ZWMpIHtcbiAgdmFyIFNZTUJPTCA9IHdrcyhLRVkpO1xuXG4gIHZhciBERUxFR0FURVNfVE9fU1lNQk9MID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTdHJpbmcgbWV0aG9kcyBjYWxsIHN5bWJvbC1uYW1lZCBSZWdFcCBtZXRob2RzXG4gICAgdmFyIE8gPSB7fTtcbiAgICBPW1NZTUJPTF0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9O1xuICAgIHJldHVybiAnJ1tLRVldKE8pICE9IDc7XG4gIH0pO1xuXG4gIHZhciBERUxFR0FURVNfVE9fRVhFQyA9IERFTEVHQVRFU19UT19TWU1CT0wgPyAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN5bWJvbC1uYW1lZCBSZWdFeHAgbWV0aG9kcyBjYWxsIC5leGVjXG4gICAgdmFyIGV4ZWNDYWxsZWQgPSBmYWxzZTtcbiAgICB2YXIgcmUgPSAvYS87XG4gICAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHsgZXhlY0NhbGxlZCA9IHRydWU7IHJldHVybiBudWxsOyB9O1xuICAgIGlmIChLRVkgPT09ICdzcGxpdCcpIHtcbiAgICAgIC8vIFJlZ0V4cFtAQHNwbGl0XSBkb2Vzbid0IGNhbGwgdGhlIHJlZ2V4J3MgZXhlYyBtZXRob2QsIGJ1dCBmaXJzdCBjcmVhdGVzXG4gICAgICAvLyBhIG5ldyBvbmUuIFdlIG5lZWQgdG8gcmV0dXJuIHRoZSBwYXRjaGVkIHJlZ2V4IHdoZW4gY3JlYXRpbmcgdGhlIG5ldyBvbmUuXG4gICAgICByZS5jb25zdHJ1Y3RvciA9IHt9O1xuICAgICAgcmUuY29uc3RydWN0b3JbU1BFQ0lFU10gPSBmdW5jdGlvbiAoKSB7IHJldHVybiByZTsgfTtcbiAgICB9XG4gICAgcmVbU1lNQk9MXSgnJyk7XG4gICAgcmV0dXJuICFleGVjQ2FsbGVkO1xuICB9KSA6IHVuZGVmaW5lZDtcblxuICBpZiAoXG4gICAgIURFTEVHQVRFU19UT19TWU1CT0wgfHxcbiAgICAhREVMRUdBVEVTX1RPX0VYRUMgfHxcbiAgICAoS0VZID09PSAncmVwbGFjZScgJiYgIVJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTKSB8fFxuICAgIChLRVkgPT09ICdzcGxpdCcgJiYgIVNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQylcbiAgKSB7XG4gICAgdmFyIG5hdGl2ZVJlZ0V4cE1ldGhvZCA9IC8uL1tTWU1CT0xdO1xuICAgIHZhciBmbnMgPSBleGVjKFxuICAgICAgZGVmaW5lZCxcbiAgICAgIFNZTUJPTCxcbiAgICAgICcnW0tFWV0sXG4gICAgICBmdW5jdGlvbiBtYXliZUNhbGxOYXRpdmUobmF0aXZlTWV0aG9kLCByZWdleHAsIHN0ciwgYXJnMiwgZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgaWYgKHJlZ2V4cC5leGVjID09PSByZWdleHBFeGVjKSB7XG4gICAgICAgICAgaWYgKERFTEVHQVRFU19UT19TWU1CT0wgJiYgIWZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgICAgICAvLyBUaGUgbmF0aXZlIFN0cmluZyBtZXRob2QgYWxyZWFkeSBkZWxlZ2F0ZXMgdG8gQEBtZXRob2QgKHRoaXNcbiAgICAgICAgICAgIC8vIHBvbHlmaWxsZWQgZnVuY3Rpb24pLCBsZWFzaW5nIHRvIGluZmluaXRlIHJlY3Vyc2lvbi5cbiAgICAgICAgICAgIC8vIFdlIGF2b2lkIGl0IGJ5IGRpcmVjdGx5IGNhbGxpbmcgdGhlIG5hdGl2ZSBAQG1ldGhvZCBtZXRob2QuXG4gICAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlUmVnRXhwTWV0aG9kLmNhbGwocmVnZXhwLCBzdHIsIGFyZzIpIH07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVNZXRob2QuY2FsbChzdHIsIHJlZ2V4cCwgYXJnMikgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBkb25lOiBmYWxzZSB9O1xuICAgICAgfVxuICAgICk7XG4gICAgdmFyIHN0cmZuID0gZm5zWzBdO1xuICAgIHZhciByeGZuID0gZm5zWzFdO1xuXG4gICAgcmVkZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgS0VZLCBzdHJmbik7XG4gICAgaGlkZShSZWdFeHAucHJvdG90eXBlLCBTWU1CT0wsIGxlbmd0aCA9PSAyXG4gICAgICAvLyAyMS4yLjUuOCBSZWdFeHAucHJvdG90eXBlW0BAcmVwbGFjZV0oc3RyaW5nLCByZXBsYWNlVmFsdWUpXG4gICAgICAvLyAyMS4yLjUuMTEgUmVnRXhwLnByb3RvdHlwZVtAQHNwbGl0XShzdHJpbmcsIGxpbWl0KVxuICAgICAgPyBmdW5jdGlvbiAoc3RyaW5nLCBhcmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMsIGFyZyk7IH1cbiAgICAgIC8vIDIxLjIuNS42IFJlZ0V4cC5wcm90b3R5cGVbQEBtYXRjaF0oc3RyaW5nKVxuICAgICAgLy8gMjEuMi41LjkgUmVnRXhwLnByb3RvdHlwZVtAQHNlYXJjaF0oc3RyaW5nKVxuICAgICAgOiBmdW5jdGlvbiAoc3RyaW5nKSB7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzKTsgfVxuICAgICk7XG4gIH1cbn07XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkaXRlckRldGVjdCA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0Jyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCB3cmFwcGVyLCBtZXRob2RzLCBjb21tb24sIElTX01BUCwgSVNfV0VBSykge1xuICB2YXIgQmFzZSA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIEMgPSBCYXNlO1xuICB2YXIgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnO1xuICB2YXIgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlO1xuICB2YXIgTyA9IHt9O1xuICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24gKEtFWSkge1xuICAgIHZhciBmbiA9IHByb3RvW0tFWV07XG4gICAgcmVkZWZpbmUocHJvdG8sIEtFWSxcbiAgICAgIEtFWSA9PSAnZGVsZXRlJyA/IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnaGFzJyA/IGZ1bmN0aW9uIGhhcyhhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnZ2V0JyA/IGZ1bmN0aW9uIGdldChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IHVuZGVmaW5lZCA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQoYSkgeyBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7IHJldHVybiB0aGlzOyB9XG4gICAgICAgIDogZnVuY3Rpb24gc2V0KGEsIGIpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEsIGIpOyByZXR1cm4gdGhpczsgfVxuICAgICk7XG4gIH07XG4gIGlmICh0eXBlb2YgQyAhPSAnZnVuY3Rpb24nIHx8ICEoSVNfV0VBSyB8fCBwcm90by5mb3JFYWNoICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3IEMoKS5lbnRyaWVzKCkubmV4dCgpO1xuICB9KSkpIHtcbiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3RvclxuICAgIEMgPSBjb21tb24uZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUik7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICAgIG1ldGEuTkVFRCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAvLyBlYXJseSBpbXBsZW1lbnRhdGlvbnMgbm90IHN1cHBvcnRzIGNoYWluaW5nXG4gICAgdmFyIEhBU05UX0NIQUlOSU5HID0gaW5zdGFuY2VbQURERVJdKElTX1dFQUsgPyB7fSA6IC0wLCAxKSAhPSBpbnN0YW5jZTtcbiAgICAvLyBWOCB+ICBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2VcbiAgICB2YXIgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IGluc3RhbmNlLmhhcygxKTsgfSk7XG4gICAgLy8gbW9zdCBlYXJseSBpbXBsZW1lbnRhdGlvbnMgZG9lc24ndCBzdXBwb3J0cyBpdGVyYWJsZXMsIG1vc3QgbW9kZXJuIC0gbm90IGNsb3NlIGl0IGNvcnJlY3RseVxuICAgIHZhciBBQ0NFUFRfSVRFUkFCTEVTID0gJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHsgbmV3IEMoaXRlcik7IH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIC8vIGZvciBlYXJseSBpbXBsZW1lbnRhdGlvbnMgLTAgYW5kICswIG5vdCB0aGUgc2FtZVxuICAgIHZhciBCVUdHWV9aRVJPID0gIUlTX1dFQUsgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVjggfiBDaHJvbWl1bSA0Mi0gZmFpbHMgb25seSB3aXRoIDUrIGVsZW1lbnRzXG4gICAgICB2YXIgJGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAgIHZhciBpbmRleCA9IDU7XG4gICAgICB3aGlsZSAoaW5kZXgtLSkgJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpO1xuICAgICAgcmV0dXJuICEkaW5zdGFuY2UuaGFzKC0wKTtcbiAgICB9KTtcbiAgICBpZiAoIUFDQ0VQVF9JVEVSQUJMRVMpIHtcbiAgICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0YXJnZXQsIGl0ZXJhYmxlKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGFyZ2V0LCBDLCBOQU1FKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSgpLCB0YXJnZXQsIEMpO1xuICAgICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgICAgIHJldHVybiB0aGF0O1xuICAgICAgfSk7XG4gICAgICBDLnByb3RvdHlwZSA9IHByb3RvO1xuICAgICAgcHJvdG8uY29uc3RydWN0b3IgPSBDO1xuICAgIH1cbiAgICBpZiAoVEhST1dTX09OX1BSSU1JVElWRVMgfHwgQlVHR1lfWkVSTykge1xuICAgICAgZml4TWV0aG9kKCdkZWxldGUnKTtcbiAgICAgIGZpeE1ldGhvZCgnaGFzJyk7XG4gICAgICBJU19NQVAgJiYgZml4TWV0aG9kKCdnZXQnKTtcbiAgICB9XG4gICAgaWYgKEJVR0dZX1pFUk8gfHwgSEFTTlRfQ0hBSU5JTkcpIGZpeE1ldGhvZChBRERFUik7XG4gICAgLy8gd2VhayBjb2xsZWN0aW9ucyBzaG91bGQgbm90IGNvbnRhaW5zIC5jbGVhciBtZXRob2RcbiAgICBpZiAoSVNfV0VBSyAmJiBwcm90by5jbGVhcikgZGVsZXRlIHByb3RvLmNsZWFyO1xuICB9XG5cbiAgc2V0VG9TdHJpbmdUYWcoQywgTkFNRSk7XG5cbiAgT1tOQU1FXSA9IEM7XG4gICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEMgIT0gQmFzZSksIE8pO1xuXG4gIGlmICghSVNfV0VBSykgY29tbW9uLnNldFN0cm9uZyhDLCBOQU1FLCBJU19NQVApO1xuXG4gIHJldHVybiBDO1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFRZUEVEID0gdWlkKCd0eXBlZF9hcnJheScpO1xudmFyIFZJRVcgPSB1aWQoJ3ZpZXcnKTtcbnZhciBBQlYgPSAhIShnbG9iYWwuQXJyYXlCdWZmZXIgJiYgZ2xvYmFsLkRhdGFWaWV3KTtcbnZhciBDT05TVFIgPSBBQlY7XG52YXIgaSA9IDA7XG52YXIgbCA9IDk7XG52YXIgVHlwZWQ7XG5cbnZhciBUeXBlZEFycmF5Q29uc3RydWN0b3JzID0gKFxuICAnSW50OEFycmF5LFVpbnQ4QXJyYXksVWludDhDbGFtcGVkQXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXknXG4pLnNwbGl0KCcsJyk7XG5cbndoaWxlIChpIDwgbCkge1xuICBpZiAoVHlwZWQgPSBnbG9iYWxbVHlwZWRBcnJheUNvbnN0cnVjdG9yc1tpKytdXSkge1xuICAgIGhpZGUoVHlwZWQucHJvdG90eXBlLCBUWVBFRCwgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICB9IGVsc2UgQ09OU1RSID0gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBQlY6IEFCVixcbiAgQ09OU1RSOiBDT05TVFIsXG4gIFRZUEVEOiBUWVBFRCxcbiAgVklFVzogVklFV1xufTtcbiIsImltcG9ydCBTdHlsaXMgZnJvbSAnc3R5bGlzL3N0eWxpcy5taW4nO1xuaW1wb3J0IF9pbnNlcnRSdWxlUGx1Z2luIGZyb20gJ3N0eWxpcy1ydWxlLXNoZWV0JztcbmltcG9ydCBSZWFjdCwgeyBjbG9uZUVsZW1lbnQsIGNyZWF0ZUNvbnRleHQsIENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzVmFsaWRFbGVtZW50VHlwZSwgRm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBtZW1vaXplIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgdmFsaWRBdHRyIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnO1xuaW1wb3J0IG1lcmdlIGZyb20gJ21lcmdlLWFueXRoaW5nJztcblxuLy8gXG5cbnZhciBpbnRlcmxlYXZlID0gKGZ1bmN0aW9uIChzdHJpbmdzLCBpbnRlcnBvbGF0aW9ucykge1xuICB2YXIgcmVzdWx0ID0gW3N0cmluZ3NbMF1dO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBpbnRlcnBvbGF0aW9ucy5sZW5ndGg7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgIHJlc3VsdC5wdXNoKGludGVycG9sYXRpb25zW2ldLCBzdHJpbmdzW2kgKyAxXSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufSk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG59O1xuXG52YXIgY2xhc3NDYWxsQ2hlY2sgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTtcblxudmFyIGNyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9O1xufSgpO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxudmFyIGluaGVyaXRzID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTtcblxudmFyIG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iaiwga2V5cykge1xuICB2YXIgdGFyZ2V0ID0ge307XG5cbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAoa2V5cy5pbmRleE9mKGkpID49IDApIGNvbnRpbnVlO1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlO1xuICAgIHRhcmdldFtpXSA9IG9ialtpXTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG52YXIgcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiA9IGZ1bmN0aW9uIChzZWxmLCBjYWxsKSB7XG4gIGlmICghc2VsZikge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmO1xufTtcblxuLy8gXG52YXIgaXNQbGFpbk9iamVjdCA9IChmdW5jdGlvbiAoeCkge1xuICByZXR1cm4gKHR5cGVvZiB4ID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih4KSkgPT09ICdvYmplY3QnICYmIHguY29uc3RydWN0b3IgPT09IE9iamVjdDtcbn0pO1xuXG4vLyBcbnZhciBFTVBUWV9BUlJBWSA9IE9iamVjdC5mcmVlemUoW10pO1xudmFyIEVNUFRZX09CSkVDVCA9IE9iamVjdC5mcmVlemUoe30pO1xuXG4vLyBcbmZ1bmN0aW9uIGlzRnVuY3Rpb24odGVzdCkge1xuICByZXR1cm4gdHlwZW9mIHRlc3QgPT09ICdmdW5jdGlvbic7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBnZXRDb21wb25lbnROYW1lKHRhcmdldCkge1xuICByZXR1cm4gKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyAmJiB0YXJnZXQgOiBmYWxzZSkgfHwgdGFyZ2V0LmRpc3BsYXlOYW1lIHx8IHRhcmdldC5uYW1lIHx8ICdDb21wb25lbnQnO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzU3RhdGVsZXNzRnVuY3Rpb24odGVzdCkge1xuICByZXR1cm4gdHlwZW9mIHRlc3QgPT09ICdmdW5jdGlvbicgJiYgISh0ZXN0LnByb3RvdHlwZSAmJiB0ZXN0LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuLy8gXG5mdW5jdGlvbiBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0LnN0eWxlZENvbXBvbmVudElkID09PSAnc3RyaW5nJztcbn1cblxuLy8gXG5cbnZhciBTQ19BVFRSID0gdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIChwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfQVRUUiB8fCBwcm9jZXNzLmVudi5TQ19BVFRSKSB8fCAnZGF0YS1zdHlsZWQnO1xuXG52YXIgU0NfVkVSU0lPTl9BVFRSID0gJ2RhdGEtc3R5bGVkLXZlcnNpb24nO1xuXG52YXIgU0NfU1RSRUFNX0FUVFIgPSAnZGF0YS1zdHlsZWQtc3RyZWFtZWQnO1xuXG52YXIgSVNfQlJPV1NFUiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICdIVE1MRWxlbWVudCcgaW4gd2luZG93O1xuXG52YXIgRElTQUJMRV9TUEVFRFkgPSB0eXBlb2YgU0NfRElTQUJMRV9TUEVFRFkgPT09ICdib29sZWFuJyAmJiBTQ19ESVNBQkxFX1NQRUVEWSB8fCB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgKHByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSB8fCBwcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSkgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxuLy8gU2hhcmVkIGVtcHR5IGV4ZWN1dGlvbiBjb250ZXh0IHdoZW4gZ2VuZXJhdGluZyBzdGF0aWMgc3R5bGVzXG52YXIgU1RBVElDX0VYRUNVVElPTl9DT05URVhUID0ge307XG5cbi8vIFxuXG5cbi8qKlxuICogUGFyc2UgZXJyb3JzLm1kIGFuZCB0dXJuIGl0IGludG8gYSBzaW1wbGUgaGFzaCBvZiBjb2RlOiBtZXNzYWdlXG4gKi9cbnZhciBFUlJPUlMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8ge1xuICBcIjFcIjogXCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsXG4gIFwiMlwiOiBcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLFxuICBcIjNcIjogXCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIixcbiAgXCI0XCI6IFwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIixcbiAgXCI1XCI6IFwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIixcbiAgXCI2XCI6IFwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIixcbiAgXCI3XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFxcXCJ0aGVtZVxcXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuXCIsXG4gIFwiOFwiOiBcIlRoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG5cIixcbiAgXCI5XCI6IFwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLFxuICBcIjEwXCI6IFwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIixcbiAgXCIxMVwiOiBcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsXG4gIFwiMTJcIjogXCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciAoc2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3MpLCB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS5cXG5cXG5cIixcbiAgXCIxM1wiOiBcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cIlxufSA6IHt9O1xuXG4vKipcbiAqIHN1cGVyIGJhc2ljIHZlcnNpb24gb2Ygc3ByaW50ZlxuICovXG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBhID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzBdO1xuICB2YXIgYiA9IFtdO1xuXG4gIGZvciAodmFyIGMgPSAxLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoOyBjIDwgbGVuOyBjICs9IDEpIHtcbiAgICBiLnB1c2goYXJndW1lbnRzLmxlbmd0aCA8PSBjID8gdW5kZWZpbmVkIDogYXJndW1lbnRzW2NdKTtcbiAgfVxuXG4gIGIuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgIGEgPSBhLnJlcGxhY2UoLyVbYS16XS8sIGQpO1xuICB9KTtcblxuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gZXJyb3IgZmlsZSBvdXQgb2YgZXJyb3JzLm1kIGZvciBkZXZlbG9wbWVudCBhbmQgYSBzaW1wbGUgd2ViIGxpbmsgdG8gdGhlIGZ1bGwgZXJyb3JzXG4gKiBpbiBwcm9kdWN0aW9uIG1vZGUuXG4gKi9cblxudmFyIFN0eWxlZENvbXBvbmVudHNFcnJvciA9IGZ1bmN0aW9uIChfRXJyb3IpIHtcbiAgaW5oZXJpdHMoU3R5bGVkQ29tcG9uZW50c0Vycm9yLCBfRXJyb3IpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlZENvbXBvbmVudHNFcnJvcihjb2RlKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgU3R5bGVkQ29tcG9uZW50c0Vycm9yKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfRXJyb3IuY2FsbCh0aGlzLCAnQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvYmxvYi9tYXN0ZXIvcGFja2FnZXMvc3R5bGVkLWNvbXBvbmVudHMvc3JjL3V0aWxzL2Vycm9ycy5tZCMnICsgY29kZSArICcgZm9yIG1vcmUgaW5mb3JtYXRpb24uJyArIChpbnRlcnBvbGF0aW9ucy5sZW5ndGggPiAwID8gJyBBZGRpdGlvbmFsIGFyZ3VtZW50czogJyArIGludGVycG9sYXRpb25zLmpvaW4oJywgJykgOiAnJykpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfRXJyb3IuY2FsbCh0aGlzLCBmb3JtYXQuYXBwbHkodW5kZWZpbmVkLCBbRVJST1JTW2NvZGVdXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKS50cmltKCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMpO1xuICB9XG5cbiAgcmV0dXJuIFN0eWxlZENvbXBvbmVudHNFcnJvcjtcbn0oRXJyb3IpO1xuXG4vLyBcbnZhciBTQ19DT01QT05FTlRfSUQgPSAvXlteXFxTXFxuXSo/XFwvXFwqIHNjLWNvbXBvbmVudC1pZDpcXHMqKFxcUyspXFxzK1xcKlxcLy9nbTtcblxudmFyIGV4dHJhY3RDb21wcyA9IChmdW5jdGlvbiAobWF5YmVDU1MpIHtcbiAgdmFyIGNzcyA9ICcnICsgKG1heWJlQ1NTIHx8ICcnKTsgLy8gRGVmaW5pdGVseSBhIHN0cmluZywgYW5kIGEgY2xvbmVcbiAgdmFyIGV4aXN0aW5nQ29tcG9uZW50cyA9IFtdO1xuICBjc3MucmVwbGFjZShTQ19DT01QT05FTlRfSUQsIGZ1bmN0aW9uIChtYXRjaCwgY29tcG9uZW50SWQsIG1hdGNoSW5kZXgpIHtcbiAgICBleGlzdGluZ0NvbXBvbmVudHMucHVzaCh7IGNvbXBvbmVudElkOiBjb21wb25lbnRJZCwgbWF0Y2hJbmRleDogbWF0Y2hJbmRleCB9KTtcbiAgICByZXR1cm4gbWF0Y2g7XG4gIH0pO1xuICByZXR1cm4gZXhpc3RpbmdDb21wb25lbnRzLm1hcChmdW5jdGlvbiAoX3JlZiwgaSkge1xuICAgIHZhciBjb21wb25lbnRJZCA9IF9yZWYuY29tcG9uZW50SWQsXG4gICAgICAgIG1hdGNoSW5kZXggPSBfcmVmLm1hdGNoSW5kZXg7XG5cbiAgICB2YXIgbmV4dENvbXAgPSBleGlzdGluZ0NvbXBvbmVudHNbaSArIDFdO1xuICAgIHZhciBjc3NGcm9tRE9NID0gbmV4dENvbXAgPyBjc3Muc2xpY2UobWF0Y2hJbmRleCwgbmV4dENvbXAubWF0Y2hJbmRleCkgOiBjc3Muc2xpY2UobWF0Y2hJbmRleCk7XG4gICAgcmV0dXJuIHsgY29tcG9uZW50SWQ6IGNvbXBvbmVudElkLCBjc3NGcm9tRE9NOiBjc3NGcm9tRE9NIH07XG4gIH0pO1xufSk7XG5cbi8vIFxuXG52YXIgQ09NTUVOVF9SRUdFWCA9IC9eXFxzKlxcL1xcLy4qJC9nbTtcblxuLy8gTk9URTogVGhpcyBzdHlsaXMgaW5zdGFuY2UgaXMgb25seSB1c2VkIHRvIHNwbGl0IHJ1bGVzIGZyb20gU1NSJ2Qgc3R5bGUgdGFnc1xudmFyIHN0eWxpc1NwbGl0dGVyID0gbmV3IFN0eWxpcyh7XG4gIGdsb2JhbDogZmFsc2UsXG4gIGNhc2NhZGU6IHRydWUsXG4gIGtleWZyYW1lOiBmYWxzZSxcbiAgcHJlZml4OiBmYWxzZSxcbiAgY29tcHJlc3M6IGZhbHNlLFxuICBzZW1pY29sb246IHRydWVcbn0pO1xuXG52YXIgc3R5bGlzID0gbmV3IFN0eWxpcyh7XG4gIGdsb2JhbDogZmFsc2UsXG4gIGNhc2NhZGU6IHRydWUsXG4gIGtleWZyYW1lOiBmYWxzZSxcbiAgcHJlZml4OiB0cnVlLFxuICBjb21wcmVzczogZmFsc2UsXG4gIHNlbWljb2xvbjogZmFsc2UgLy8gTk9URTogVGhpcyBtZWFucyBcImF1dG9jb21wbGV0ZSBtaXNzaW5nIHNlbWljb2xvbnNcIlxufSk7XG5cbi8vIFdyYXAgYGluc2VydFJ1bGVQbHVnaW4gdG8gYnVpbGQgYSBsaXN0IG9mIHJ1bGVzLFxuLy8gYW5kIHRoZW4gbWFrZSBvdXIgb3duIHBsdWdpbiB0byByZXR1cm4gdGhlIHJ1bGVzLiBUaGlzXG4vLyBtYWtlcyBpdCBlYXNpZXIgdG8gaG9vayBpbnRvIHRoZSBleGlzdGluZyBTU1IgYXJjaGl0ZWN0dXJlXG5cbnZhciBwYXJzaW5nUnVsZXMgPSBbXTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG52YXIgcmV0dXJuUnVsZXNQbHVnaW4gPSBmdW5jdGlvbiByZXR1cm5SdWxlc1BsdWdpbihjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSAtMikge1xuICAgIHZhciBwYXJzZWRSdWxlcyA9IHBhcnNpbmdSdWxlcztcbiAgICBwYXJzaW5nUnVsZXMgPSBbXTtcbiAgICByZXR1cm4gcGFyc2VkUnVsZXM7XG4gIH1cbn07XG5cbnZhciBwYXJzZVJ1bGVzUGx1Z2luID0gX2luc2VydFJ1bGVQbHVnaW4oZnVuY3Rpb24gKHJ1bGUpIHtcbiAgcGFyc2luZ1J1bGVzLnB1c2gocnVsZSk7XG59KTtcblxudmFyIF9jb21wb25lbnRJZCA9IHZvaWQgMDtcbnZhciBfc2VsZWN0b3IgPSB2b2lkIDA7XG52YXIgX3NlbGVjdG9yUmVnZXhwID0gdm9pZCAwO1xuXG52YXIgc2VsZlJlZmVyZW5jZVJlcGxhY2VyID0gZnVuY3Rpb24gc2VsZlJlZmVyZW5jZVJlcGxhY2VyKG1hdGNoLCBvZmZzZXQsIHN0cmluZykge1xuICBpZiAoXG4gIC8vIHRoZSBmaXJzdCBzZWxmLXJlZiBpcyBhbHdheXMgdW50b3VjaGVkXG4gIG9mZnNldCA+IDAgJiZcbiAgLy8gdGhlcmUgc2hvdWxkIGJlIGF0IGxlYXN0IHR3byBzZWxmLXJlZnMgdG8gZG8gYSByZXBsYWNlbWVudCAoLmIgPiAuYilcbiAgc3RyaW5nLnNsaWNlKDAsIG9mZnNldCkuaW5kZXhPZihfc2VsZWN0b3IpICE9PSAtMSAmJlxuICAvLyBubyBjb25zZWN1dGl2ZSBzZWxmIHJlZnMgKC5iLmIpOyB0aGF0IGlzIGEgcHJlY2VkZW5jZSBib29zdCBhbmQgdHJlYXRlZCBkaWZmZXJlbnRseVxuICBzdHJpbmcuc2xpY2Uob2Zmc2V0IC0gX3NlbGVjdG9yLmxlbmd0aCwgb2Zmc2V0KSAhPT0gX3NlbGVjdG9yKSB7XG4gICAgcmV0dXJuICcuJyArIF9jb21wb25lbnRJZDtcbiAgfVxuXG4gIHJldHVybiBtYXRjaDtcbn07XG5cbi8qKlxuICogV2hlbiB3cml0aW5nIGEgc3R5bGUgbGlrZVxuICpcbiAqICYgKyAmIHtcbiAqICAgY29sb3I6IHJlZDtcbiAqIH1cbiAqXG4gKiBUaGUgc2Vjb25kIGFtcGVyc2FuZCBzaG91bGQgYmUgYSByZWZlcmVuY2UgdG8gdGhlIHN0YXRpYyBjb21wb25lbnQgY2xhc3MuIHN0eWxpc1xuICogaGFzIG5vIGtub3dsZWRnZSBvZiBzdGF0aWMgY2xhc3Mgc28gd2UgaGF2ZSB0byBpbnRlbGxpZ2VudGx5IHJlcGxhY2UgdGhlIGJhc2Ugc2VsZWN0b3IuXG4gKi9cbnZhciBzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4gPSBmdW5jdGlvbiBzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4oY29udGV4dCwgXywgc2VsZWN0b3JzKSB7XG4gIGlmIChjb250ZXh0ID09PSAyICYmIHNlbGVjdG9ycy5sZW5ndGggJiYgc2VsZWN0b3JzWzBdLmxhc3RJbmRleE9mKF9zZWxlY3RvcikgPiAwKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgc2VsZWN0b3JzWzBdID0gc2VsZWN0b3JzWzBdLnJlcGxhY2UoX3NlbGVjdG9yUmVnZXhwLCBzZWxmUmVmZXJlbmNlUmVwbGFjZXIpO1xuICB9XG59O1xuXG5zdHlsaXMudXNlKFtzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4sIHBhcnNlUnVsZXNQbHVnaW4sIHJldHVyblJ1bGVzUGx1Z2luXSk7XG5zdHlsaXNTcGxpdHRlci51c2UoW3BhcnNlUnVsZXNQbHVnaW4sIHJldHVyblJ1bGVzUGx1Z2luXSk7XG5cbnZhciBzcGxpdEJ5UnVsZXMgPSBmdW5jdGlvbiBzcGxpdEJ5UnVsZXMoY3NzKSB7XG4gIHJldHVybiBzdHlsaXNTcGxpdHRlcignJywgY3NzKTtcbn07XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVJ1bGVzKHJ1bGVzLCBzZWxlY3RvciwgcHJlZml4KSB7XG4gIHZhciBjb21wb25lbnRJZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogJyYnO1xuXG4gIHZhciBmbGF0Q1NTID0gcnVsZXMuam9pbignJykucmVwbGFjZShDT01NRU5UX1JFR0VYLCAnJyk7IC8vIHJlcGxhY2UgSlMgY29tbWVudHNcblxuICB2YXIgY3NzU3RyID0gc2VsZWN0b3IgJiYgcHJlZml4ID8gcHJlZml4ICsgJyAnICsgc2VsZWN0b3IgKyAnIHsgJyArIGZsYXRDU1MgKyAnIH0nIDogZmxhdENTUztcblxuICAvLyBzdHlsaXMgaGFzIG5vIGNvbmNlcHQgb2Ygc3RhdGUgdG8gYmUgcGFzc2VkIHRvIHBsdWdpbnNcbiAgLy8gYnV0IHNpbmNlIEpTIGlzIHNpbmdsZT10aHJlYWRlZCwgd2UgY2FuIHJlbHkgb24gdGhhdCB0byBlbnN1cmVcbiAgLy8gdGhlc2UgcHJvcGVydGllcyBzdGF5IGluIHN5bmMgd2l0aCB0aGUgY3VycmVudCBzdHlsaXMgcnVuXG4gIF9jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuICBfc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgX3NlbGVjdG9yUmVnZXhwID0gbmV3IFJlZ0V4cCgnXFxcXCcgKyBfc2VsZWN0b3IgKyAnXFxcXGInLCAnZycpO1xuXG4gIHJldHVybiBzdHlsaXMocHJlZml4IHx8ICFzZWxlY3RvciA/ICcnIDogc2VsZWN0b3IsIGNzc1N0cik7XG59XG5cbi8vIFxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlLCBuby11bmRlZiAqL1xuXG52YXIgZ2V0Tm9uY2UgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbn0pO1xuXG4vLyBcbi8qIFRoZXNlIGFyZSBoZWxwZXJzIGZvciB0aGUgU3R5bGVUYWdzIHRvIGtlZXAgdHJhY2sgb2YgdGhlIGluamVjdGVkXG4gKiBydWxlIG5hbWVzIGZvciBlYWNoIChjb21wb25lbnQpIElEIHRoYXQgdGhleSdyZSBrZWVwaW5nIHRyYWNrIG9mLlxuICogVGhleSdyZSBjcnVjaWFsIGZvciBkZXRlY3Rpbmcgd2hldGhlciBhIG5hbWUgaGFzIGFscmVhZHkgYmVlblxuICogaW5qZWN0ZWQuXG4gKiAoVGhpcyBleGNsdWRlcyByZWh5ZHJhdGVkIG5hbWVzKSAqL1xuXG4vKiBhZGRzIGEgbmV3IElEOm5hbWUgcGFpcmluZyB0byBhIG5hbWVzIGRpY3Rpb25hcnkgKi9cbnZhciBhZGROYW1lRm9ySWQgPSBmdW5jdGlvbiBhZGROYW1lRm9ySWQobmFtZXMsIGlkLCBuYW1lKSB7XG4gIGlmIChuYW1lKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdmFyIG5hbWVzRm9ySWQgPSBuYW1lc1tpZF0gfHwgKG5hbWVzW2lkXSA9IE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICAgIG5hbWVzRm9ySWRbbmFtZV0gPSB0cnVlO1xuICB9XG59O1xuXG4vKiByZXNldHMgYW4gSUQgZW50aXJlbHkgYnkgb3ZlcndyaXRpbmcgaXQgaW4gdGhlIGRpY3Rpb25hcnkgKi9cbnZhciByZXNldElkTmFtZXMgPSBmdW5jdGlvbiByZXNldElkTmFtZXMobmFtZXMsIGlkKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBuYW1lc1tpZF0gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xufTtcblxuLyogZmFjdG9yeSBmb3IgYSBuYW1lcyBkaWN0aW9uYXJ5IGNoZWNraW5nIHRoZSBleGlzdGFuY2Ugb2YgYW4gSUQ6bmFtZSBwYWlyaW5nICovXG52YXIgaGFzTmFtZUZvcklkID0gZnVuY3Rpb24gaGFzTmFtZUZvcklkKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaWQsIG5hbWUpIHtcbiAgICByZXR1cm4gbmFtZXNbaWRdICE9PSB1bmRlZmluZWQgJiYgbmFtZXNbaWRdW25hbWVdO1xuICB9O1xufTtcblxuLyogc3RyaW5naWZpZXMgbmFtZXMgZm9yIHRoZSBodG1sL2VsZW1lbnQgb3V0cHV0ICovXG52YXIgc3RyaW5naWZ5TmFtZXMgPSBmdW5jdGlvbiBzdHJpbmdpZnlOYW1lcyhuYW1lcykge1xuICB2YXIgc3RyID0gJyc7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgZm9yICh2YXIgaWQgaW4gbmFtZXMpIHtcbiAgICBzdHIgKz0gT2JqZWN0LmtleXMobmFtZXNbaWRdKS5qb2luKCcgJykgKyAnICc7XG4gIH1cbiAgcmV0dXJuIHN0ci50cmltKCk7XG59O1xuXG4vKiBjbG9uZXMgdGhlIG5lc3RlZCBuYW1lcyBkaWN0aW9uYXJ5ICovXG52YXIgY2xvbmVOYW1lcyA9IGZ1bmN0aW9uIGNsb25lTmFtZXMobmFtZXMpIHtcbiAgdmFyIGNsb25lID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICBmb3IgKHZhciBpZCBpbiBuYW1lcykge1xuICAgIGNsb25lW2lkXSA9IF9leHRlbmRzKHt9LCBuYW1lc1tpZF0pO1xuICB9XG4gIHJldHVybiBjbG9uZTtcbn07XG5cbi8vIFxuXG4vKiBUaGVzZSBhcmUgaGVscGVycyB0aGF0IGRlYWwgd2l0aCB0aGUgaW5zZXJ0UnVsZSAoYWthIHNwZWVkeSkgQVBJXG4gKiBUaGV5IGFyZSB1c2VkIGluIHRoZSBTdHlsZVRhZ3MgYW5kIHNwZWNpZmljYWxseSB0aGUgc3BlZWR5IHRhZ1xuICovXG5cbi8qIHJldHJpZXZlIGEgc2hlZXQgZm9yIGEgZ2l2ZW4gc3R5bGUgdGFnICovXG52YXIgc2hlZXRGb3JUYWcgPSBmdW5jdGlvbiBzaGVldEZvclRhZyh0YWcpIHtcbiAgLy8gJEZsb3dGaXhNZVxuICBpZiAodGFnLnNoZWV0KSByZXR1cm4gdGFnLnNoZWV0O1xuXG4gIC8qIEZpcmVmb3ggcXVpcmsgcmVxdWlyZXMgdXMgdG8gc3RlcCB0aHJvdWdoIGFsbCBzdHlsZXNoZWV0cyB0byBmaW5kIG9uZSBvd25lZCBieSB0aGUgZ2l2ZW4gdGFnICovXG4gIHZhciBzaXplID0gZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgIHZhciBzaGVldCA9IGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgIC8vICRGbG93Rml4TWVcbiAgICBpZiAoc2hlZXQub3duZXJOb2RlID09PSB0YWcpIHJldHVybiBzaGVldDtcbiAgfVxuXG4gIC8qIHdlIHNob3VsZCBhbHdheXMgYmUgYWJsZSB0byBmaW5kIGEgdGFnICovXG4gIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMTApO1xufTtcblxuLyogaW5zZXJ0IGEgcnVsZSBzYWZlbHkgYW5kIHJldHVybiB3aGV0aGVyIGl0IHdhcyBhY3R1YWxseSBpbmplY3RlZCAqL1xudmFyIHNhZmVJbnNlcnRSdWxlID0gZnVuY3Rpb24gc2FmZUluc2VydFJ1bGUoc2hlZXQsIGNzc1J1bGUsIGluZGV4KSB7XG4gIC8qIGFib3J0IGVhcmx5IGlmIGNzc1J1bGUgc3RyaW5nIGlzIGZhbHN5ICovXG4gIGlmICghY3NzUnVsZSkgcmV0dXJuIGZhbHNlO1xuXG4gIHZhciBtYXhJbmRleCA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcblxuICB0cnkge1xuICAgIC8qIHVzZSBpbnNlcnRSdWxlIGFuZCBjYXAgcGFzc2VkIGluZGV4IHdpdGggbWF4SW5kZXggKG5vIG9mIGNzc1J1bGVzKSAqL1xuICAgIHNoZWV0Lmluc2VydFJ1bGUoY3NzUnVsZSwgaW5kZXggPD0gbWF4SW5kZXggPyBpbmRleCA6IG1heEluZGV4KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLyogYW55IGVycm9yIGluZGljYXRlcyBhbiBpbnZhbGlkIHJ1bGUgKi9cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8qIGRlbGV0ZXMgYHNpemVgIHJ1bGVzIHN0YXJ0aW5nIGZyb20gYHJlbW92YWxJbmRleGAgKi9cbnZhciBkZWxldGVSdWxlcyA9IGZ1bmN0aW9uIGRlbGV0ZVJ1bGVzKHNoZWV0LCByZW1vdmFsSW5kZXgsIHNpemUpIHtcbiAgdmFyIGxvd2VyQm91bmQgPSByZW1vdmFsSW5kZXggLSBzaXplO1xuICBmb3IgKHZhciBpID0gcmVtb3ZhbEluZGV4OyBpID4gbG93ZXJCb3VuZDsgaSAtPSAxKSB7XG4gICAgc2hlZXQuZGVsZXRlUnVsZShpKTtcbiAgfVxufTtcblxuLy8gXG5cbi8qIHRoaXMgbWFya2VyIHNlcGFyYXRlcyBjb21wb25lbnQgc3R5bGVzIGFuZCBpcyBpbXBvcnRhbnQgZm9yIHJlaHlkcmF0aW9uICovXG52YXIgbWFrZVRleHRNYXJrZXIgPSBmdW5jdGlvbiBtYWtlVGV4dE1hcmtlcihpZCkge1xuICByZXR1cm4gJ1xcbi8qIHNjLWNvbXBvbmVudC1pZDogJyArIGlkICsgJyAqL1xcbic7XG59O1xuXG4vKiBhZGQgdXAgYWxsIG51bWJlcnMgaW4gYXJyYXkgdXAgdW50aWwgYW5kIGluY2x1ZGluZyB0aGUgaW5kZXggKi9cbnZhciBhZGRVcFVudGlsSW5kZXggPSBmdW5jdGlvbiBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIGluZGV4KSB7XG4gIHZhciB0b3RhbFVwVG9JbmRleCA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDw9IGluZGV4OyBpICs9IDEpIHtcbiAgICB0b3RhbFVwVG9JbmRleCArPSBzaXplc1tpXTtcbiAgfVxuXG4gIHJldHVybiB0b3RhbFVwVG9JbmRleDtcbn07XG5cbi8qIGNyZWF0ZSBhIG5ldyBzdHlsZSB0YWcgYWZ0ZXIgbGFzdEVsICovXG52YXIgbWFrZVN0eWxlVGFnID0gZnVuY3Rpb24gbWFrZVN0eWxlVGFnKHRhcmdldCwgdGFnRWwsIGluc2VydEJlZm9yZSkge1xuICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBlbC5zZXRBdHRyaWJ1dGUoU0NfQVRUUiwgJycpO1xuICBlbC5zZXRBdHRyaWJ1dGUoU0NfVkVSU0lPTl9BVFRSLCBcIjQuMy4yXCIpO1xuXG4gIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gIGlmIChub25jZSkge1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBub25jZSk7XG4gIH1cblxuICAvKiBXb3JrIGFyb3VuZCBpbnNlcnRSdWxlIHF1aXJrIGluIEVkZ2VIVE1MICovXG4gIGVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKSk7XG5cbiAgaWYgKHRhcmdldCAmJiAhdGFnRWwpIHtcbiAgICAvKiBBcHBlbmQgdG8gdGFyZ2V0IHdoZW4gbm8gcHJldmlvdXMgZWxlbWVudCB3YXMgcGFzc2VkICovXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKGVsKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIXRhZ0VsIHx8ICF0YXJnZXQgfHwgIXRhZ0VsLnBhcmVudE5vZGUpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNik7XG4gICAgfVxuXG4gICAgLyogSW5zZXJ0IG5ldyBzdHlsZSB0YWcgYWZ0ZXIgdGhlIHByZXZpb3VzIG9uZSAqL1xuICAgIHRhZ0VsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsLCBpbnNlcnRCZWZvcmUgPyB0YWdFbCA6IHRhZ0VsLm5leHRTaWJsaW5nKTtcbiAgfVxuXG4gIHJldHVybiBlbDtcbn07XG5cbi8qIHRha2VzIGEgY3NzIGZhY3RvcnkgZnVuY3Rpb24gYW5kIG91dHB1dHMgYW4gaHRtbCBzdHlsZWQgdGFnIGZhY3RvcnkgKi9cbnZhciB3cmFwQXNIdG1sVGFnID0gZnVuY3Rpb24gd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoYWRkaXRpb25hbEF0dHJzKSB7XG4gICAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgICB2YXIgYXR0cnMgPSBbbm9uY2UgJiYgJ25vbmNlPVwiJyArIG5vbmNlICsgJ1wiJywgU0NfQVRUUiArICc9XCInICsgc3RyaW5naWZ5TmFtZXMobmFtZXMpICsgJ1wiJywgU0NfVkVSU0lPTl9BVFRSICsgJz1cIicgKyBcIjQuMy4yXCIgKyAnXCInLCBhZGRpdGlvbmFsQXR0cnNdO1xuXG4gICAgdmFyIGh0bWxBdHRyID0gYXR0cnMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcbiAgICByZXR1cm4gJzxzdHlsZSAnICsgaHRtbEF0dHIgKyAnPicgKyBjc3MoKSArICc8L3N0eWxlPic7XG4gIH07XG59O1xuXG4vKiB0YWtlcyBhIGNzcyBmYWN0b3J5IGZ1bmN0aW9uIGFuZCBvdXRwdXRzIGFuIGVsZW1lbnQgZmFjdG9yeSAqL1xudmFyIHdyYXBBc0VsZW1lbnQgPSBmdW5jdGlvbiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX3Byb3BzO1xuXG4gICAgdmFyIHByb3BzID0gKF9wcm9wcyA9IHt9LCBfcHJvcHNbU0NfQVRUUl0gPSBzdHJpbmdpZnlOYW1lcyhuYW1lcyksIF9wcm9wc1tTQ19WRVJTSU9OX0FUVFJdID0gXCI0LjMuMlwiLCBfcHJvcHMpO1xuXG4gICAgdmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHByb3BzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWRhbmdlclxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCdzdHlsZScsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IGNzcygpIH0gfSkpO1xuICB9O1xufTtcblxudmFyIGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeSA9IGZ1bmN0aW9uIGdldElkc0Zyb21NYXJrZXJzRmFjdG9yeShtYXJrZXJzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcmtlcnMpO1xuICB9O1xufTtcblxuLyogc3BlZWR5IHRhZ3MgdXRpbGlzZSBpbnNlcnRSdWxlICovXG52YXIgbWFrZVNwZWVkeVRhZyA9IGZ1bmN0aW9uIG1ha2VTcGVlZHlUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpIHtcbiAgdmFyIG5hbWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdmFyIG1hcmtlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgc2l6ZXMgPSBbXTtcblxuICB2YXIgZXh0cmFjdEltcG9ydCA9IGdldEltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZDtcbiAgLyogaW5kaWNhdGVzIHdoZXRoZXIgZ2V0SW1wb3J0UnVsZVRhZyB3YXMgY2FsbGVkICovXG4gIHZhciB1c2VkSW1wb3J0UnVsZVRhZyA9IGZhbHNlO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIG1hcmtlcnNbaWRdID0gc2l6ZXMubGVuZ3RoO1xuICAgIHNpemVzLnB1c2goMCk7XG4gICAgcmVzZXRJZE5hbWVzKG5hbWVzLCBpZCk7XG5cbiAgICByZXR1cm4gbWFya2Vyc1tpZF07XG4gIH07XG5cbiAgdmFyIGluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIGNzc1J1bGVzLCBuYW1lKSB7XG4gICAgdmFyIG1hcmtlciA9IGluc2VydE1hcmtlcihpZCk7XG4gICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcoZWwpO1xuICAgIHZhciBpbnNlcnRJbmRleCA9IGFkZFVwVW50aWxJbmRleChzaXplcywgbWFya2VyKTtcblxuICAgIHZhciBpbmplY3RlZFJ1bGVzID0gMDtcbiAgICB2YXIgaW1wb3J0UnVsZXMgPSBbXTtcbiAgICB2YXIgY3NzUnVsZXNTaXplID0gY3NzUnVsZXMubGVuZ3RoO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3NSdWxlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIGNzc1J1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgIHZhciBtYXlIYXZlSW1wb3J0ID0gZXh0cmFjdEltcG9ydDsgLyogQGltcG9ydCBydWxlcyBhcmUgcmVvcmRlcmVkIHRvIGFwcGVhciBmaXJzdCAqL1xuICAgICAgaWYgKG1heUhhdmVJbXBvcnQgJiYgY3NzUnVsZS5pbmRleE9mKCdAaW1wb3J0JykgIT09IC0xKSB7XG4gICAgICAgIGltcG9ydFJ1bGVzLnB1c2goY3NzUnVsZSk7XG4gICAgICB9IGVsc2UgaWYgKHNhZmVJbnNlcnRSdWxlKHNoZWV0LCBjc3NSdWxlLCBpbnNlcnRJbmRleCArIGluamVjdGVkUnVsZXMpKSB7XG4gICAgICAgIG1heUhhdmVJbXBvcnQgPSBmYWxzZTtcbiAgICAgICAgaW5qZWN0ZWRSdWxlcyArPSAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIGltcG9ydFJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVzZWRJbXBvcnRSdWxlVGFnID0gdHJ1ZTtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5pbnNlcnRSdWxlcyhpZCArICctaW1wb3J0JywgaW1wb3J0UnVsZXMpO1xuICAgIH1cblxuICAgIHNpemVzW21hcmtlcl0gKz0gaW5qZWN0ZWRSdWxlczsgLyogYWRkIHVwIG5vIG9mIGluamVjdGVkIHJ1bGVzICovXG4gICAgYWRkTmFtZUZvcklkKG5hbWVzLCBpZCwgbmFtZSk7XG4gIH07XG5cbiAgdmFyIHJlbW92ZVJ1bGVzID0gZnVuY3Rpb24gcmVtb3ZlUnVsZXMoaWQpIHtcbiAgICB2YXIgbWFya2VyID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKG1hcmtlciA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgc2l6ZSA9IHNpemVzW21hcmtlcl07XG4gICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcoZWwpO1xuICAgIHZhciByZW1vdmFsSW5kZXggPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcikgLSAxO1xuICAgIGRlbGV0ZVJ1bGVzKHNoZWV0LCByZW1vdmFsSW5kZXgsIHNpemUpO1xuICAgIHNpemVzW21hcmtlcl0gPSAwO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgdXNlZEltcG9ydFJ1bGVUYWcpIHtcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIGdldEltcG9ydFJ1bGVUYWcoKS5yZW1vdmVSdWxlcyhpZCArICctaW1wb3J0Jyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIF9zaGVldEZvclRhZyA9IHNoZWV0Rm9yVGFnKGVsKSxcbiAgICAgICAgY3NzUnVsZXMgPSBfc2hlZXRGb3JUYWcuY3NzUnVsZXM7XG5cbiAgICB2YXIgc3RyID0gJyc7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgZm9yICh2YXIgaWQgaW4gbWFya2Vycykge1xuICAgICAgc3RyICs9IG1ha2VUZXh0TWFya2VyKGlkKTtcbiAgICAgIHZhciBtYXJrZXIgPSBtYXJrZXJzW2lkXTtcbiAgICAgIHZhciBlbmQgPSBhZGRVcFVudGlsSW5kZXgoc2l6ZXMsIG1hcmtlcik7XG4gICAgICB2YXIgc2l6ZSA9IHNpemVzW21hcmtlcl07XG4gICAgICBmb3IgKHZhciBpID0gZW5kIC0gc2l6ZTsgaSA8IGVuZDsgaSArPSAxKSB7XG4gICAgICAgIHZhciBydWxlID0gY3NzUnVsZXNbaV07XG4gICAgICAgIGlmIChydWxlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHIgKz0gcnVsZS5jc3NUZXh0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNsb25lOiBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNSk7XG4gICAgfSxcblxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IGVsLFxuICAgIHRvRWxlbWVudDogd3JhcEFzRWxlbWVudChjc3MsIG5hbWVzKSxcbiAgICB0b0hUTUw6IHdyYXBBc0h0bWxUYWcoY3NzLCBuYW1lcylcbiAgfTtcbn07XG5cbnZhciBtYWtlVGV4dE5vZGUgPSBmdW5jdGlvbiBtYWtlVGV4dE5vZGUoaWQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG1ha2VUZXh0TWFya2VyKGlkKSk7XG59O1xuXG52YXIgbWFrZUJyb3dzZXJUYWcgPSBmdW5jdGlvbiBtYWtlQnJvd3NlclRhZyhlbCwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICB2YXIgbmFtZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgbWFya2VycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgdmFyIGV4dHJhY3RJbXBvcnQgPSBnZXRJbXBvcnRSdWxlVGFnICE9PSB1bmRlZmluZWQ7XG5cbiAgLyogaW5kaWNhdGVzIHdoZXRoZXIgZ2V0SW1wb3J0UnVsZVRhZyB3YXMgY2FsbGVkICovXG4gIHZhciB1c2VkSW1wb3J0UnVsZVRhZyA9IGZhbHNlO1xuXG4gIHZhciBpbnNlcnRNYXJrZXIgPSBmdW5jdGlvbiBpbnNlcnRNYXJrZXIoaWQpIHtcbiAgICB2YXIgcHJldiA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChwcmV2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIG1hcmtlcnNbaWRdID0gbWFrZVRleHROb2RlKGlkKTtcbiAgICBlbC5hcHBlbmRDaGlsZChtYXJrZXJzW2lkXSk7XG4gICAgbmFtZXNbaWRdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIHJldHVybiBtYXJrZXJzW2lkXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICB2YXIgaW1wb3J0UnVsZXMgPSBbXTtcbiAgICB2YXIgY3NzUnVsZXNTaXplID0gY3NzUnVsZXMubGVuZ3RoO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjc3NSdWxlc1NpemU7IGkgKz0gMSkge1xuICAgICAgdmFyIHJ1bGUgPSBjc3NSdWxlc1tpXTtcbiAgICAgIHZhciBtYXlIYXZlSW1wb3J0ID0gZXh0cmFjdEltcG9ydDtcbiAgICAgIGlmIChtYXlIYXZlSW1wb3J0ICYmIHJ1bGUuaW5kZXhPZignQGltcG9ydCcpICE9PSAtMSkge1xuICAgICAgICBpbXBvcnRSdWxlcy5wdXNoKHJ1bGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWF5SGF2ZUltcG9ydCA9IGZhbHNlO1xuICAgICAgICB2YXIgc2VwYXJhdG9yID0gaSA9PT0gY3NzUnVsZXNTaXplIC0gMSA/ICcnIDogJyAnO1xuICAgICAgICBtYXJrZXIuYXBwZW5kRGF0YSgnJyArIHJ1bGUgKyBzZXBhcmF0b3IpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuXG4gICAgaWYgKGV4dHJhY3RJbXBvcnQgJiYgaW1wb3J0UnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgdXNlZEltcG9ydFJ1bGVUYWcgPSB0cnVlO1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgZ2V0SW1wb3J0UnVsZVRhZygpLmluc2VydFJ1bGVzKGlkICsgJy1pbXBvcnQnLCBpbXBvcnRSdWxlcyk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgLyogY3JlYXRlIG5ldyBlbXB0eSB0ZXh0IG5vZGUgYW5kIHJlcGxhY2UgdGhlIGN1cnJlbnQgb25lICovXG4gICAgdmFyIG5ld01hcmtlciA9IG1ha2VUZXh0Tm9kZShpZCk7XG4gICAgZWwucmVwbGFjZUNoaWxkKG5ld01hcmtlciwgbWFya2VyKTtcbiAgICBtYXJrZXJzW2lkXSA9IG5ld01hcmtlcjtcbiAgICByZXNldElkTmFtZXMobmFtZXMsIGlkKTtcblxuICAgIGlmIChleHRyYWN0SW1wb3J0ICYmIHVzZWRJbXBvcnRSdWxlVGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBnZXRJbXBvcnRSdWxlVGFnKCkucmVtb3ZlUnVsZXMoaWQgKyAnLWltcG9ydCcpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgY3NzID0gZnVuY3Rpb24gY3NzKCkge1xuICAgIHZhciBzdHIgPSAnJztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBzdHIgKz0gbWFya2Vyc1tpZF0uZGF0YTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY2xvbmU6IGZ1bmN0aW9uIGNsb25lKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig1KTtcbiAgICB9LFxuXG4gICAgY3NzOiBjc3MsXG4gICAgZ2V0SWRzOiBnZXRJZHNGcm9tTWFya2Vyc0ZhY3RvcnkobWFya2VycyksXG4gICAgaGFzTmFtZUZvcklkOiBoYXNOYW1lRm9ySWQobmFtZXMpLFxuICAgIGluc2VydE1hcmtlcjogaW5zZXJ0TWFya2VyLFxuICAgIGluc2VydFJ1bGVzOiBpbnNlcnRSdWxlcyxcbiAgICByZW1vdmVSdWxlczogcmVtb3ZlUnVsZXMsXG4gICAgc2VhbGVkOiBmYWxzZSxcbiAgICBzdHlsZVRhZzogZWwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xufTtcblxudmFyIG1ha2VTZXJ2ZXJUYWcgPSBmdW5jdGlvbiBtYWtlU2VydmVyVGFnKG5hbWVzQXJnLCBtYXJrZXJzQXJnKSB7XG4gIHZhciBuYW1lcyA9IG5hbWVzQXJnID09PSB1bmRlZmluZWQgPyBPYmplY3QuY3JlYXRlKG51bGwpIDogbmFtZXNBcmc7XG4gIHZhciBtYXJrZXJzID0gbWFya2Vyc0FyZyA9PT0gdW5kZWZpbmVkID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IG1hcmtlcnNBcmc7XG5cbiAgdmFyIGluc2VydE1hcmtlciA9IGZ1bmN0aW9uIGluc2VydE1hcmtlcihpZCkge1xuICAgIHZhciBwcmV2ID0gbWFya2Vyc1tpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcmtlcnNbaWRdID0gWycnXTtcbiAgfTtcblxuICB2YXIgaW5zZXJ0UnVsZXMgPSBmdW5jdGlvbiBpbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgbWFya2VyID0gaW5zZXJ0TWFya2VyKGlkKTtcbiAgICBtYXJrZXJbMF0gKz0gY3NzUnVsZXMuam9pbignICcpO1xuICAgIGFkZE5hbWVGb3JJZChuYW1lcywgaWQsIG5hbWUpO1xuICB9O1xuXG4gIHZhciByZW1vdmVSdWxlcyA9IGZ1bmN0aW9uIHJlbW92ZVJ1bGVzKGlkKSB7XG4gICAgdmFyIG1hcmtlciA9IG1hcmtlcnNbaWRdO1xuICAgIGlmIChtYXJrZXIgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICAgIG1hcmtlclswXSA9ICcnO1xuICAgIHJlc2V0SWROYW1lcyhuYW1lcywgaWQpO1xuICB9O1xuXG4gIHZhciBjc3MgPSBmdW5jdGlvbiBjc3MoKSB7XG4gICAgdmFyIHN0ciA9ICcnO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICB2YXIgY3NzRm9ySWQgPSBtYXJrZXJzW2lkXVswXTtcbiAgICAgIGlmIChjc3NGb3JJZCkge1xuICAgICAgICBzdHIgKz0gbWFrZVRleHRNYXJrZXIoaWQpICsgY3NzRm9ySWQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbiAgdmFyIGNsb25lID0gZnVuY3Rpb24gY2xvbmUoKSB7XG4gICAgdmFyIG5hbWVzQ2xvbmUgPSBjbG9uZU5hbWVzKG5hbWVzKTtcbiAgICB2YXIgbWFya2Vyc0Nsb25lID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICBmb3IgKHZhciBpZCBpbiBtYXJrZXJzKSB7XG4gICAgICBtYXJrZXJzQ2xvbmVbaWRdID0gW21hcmtlcnNbaWRdWzBdXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWFrZVNlcnZlclRhZyhuYW1lc0Nsb25lLCBtYXJrZXJzQ2xvbmUpO1xuICB9O1xuXG4gIHZhciB0YWcgPSB7XG4gICAgY2xvbmU6IGNsb25lLFxuICAgIGNzczogY3NzLFxuICAgIGdldElkczogZ2V0SWRzRnJvbU1hcmtlcnNGYWN0b3J5KG1hcmtlcnMpLFxuICAgIGhhc05hbWVGb3JJZDogaGFzTmFtZUZvcklkKG5hbWVzKSxcbiAgICBpbnNlcnRNYXJrZXI6IGluc2VydE1hcmtlcixcbiAgICBpbnNlcnRSdWxlczogaW5zZXJ0UnVsZXMsXG4gICAgcmVtb3ZlUnVsZXM6IHJlbW92ZVJ1bGVzLFxuICAgIHNlYWxlZDogZmFsc2UsXG4gICAgc3R5bGVUYWc6IG51bGwsXG4gICAgdG9FbGVtZW50OiB3cmFwQXNFbGVtZW50KGNzcywgbmFtZXMpLFxuICAgIHRvSFRNTDogd3JhcEFzSHRtbFRhZyhjc3MsIG5hbWVzKVxuICB9O1xuXG4gIHJldHVybiB0YWc7XG59O1xuXG52YXIgbWFrZVRhZyA9IGZ1bmN0aW9uIG1ha2VUYWcodGFyZ2V0LCB0YWdFbCwgZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSwgZ2V0SW1wb3J0UnVsZVRhZykge1xuICBpZiAoSVNfQlJPV1NFUiAmJiAhZm9yY2VTZXJ2ZXIpIHtcbiAgICB2YXIgZWwgPSBtYWtlU3R5bGVUYWcodGFyZ2V0LCB0YWdFbCwgaW5zZXJ0QmVmb3JlKTtcblxuICAgIGlmIChESVNBQkxFX1NQRUVEWSkge1xuICAgICAgcmV0dXJuIG1ha2VCcm93c2VyVGFnKGVsLCBnZXRJbXBvcnRSdWxlVGFnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG1ha2VTcGVlZHlUYWcoZWwsIGdldEltcG9ydFJ1bGVUYWcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYWtlU2VydmVyVGFnKCk7XG59O1xuXG52YXIgcmVoeWRyYXRlID0gZnVuY3Rpb24gcmVoeWRyYXRlKHRhZywgZWxzLCBleHRyYWN0ZWQpIHtcbiAgLyogYWRkIGFsbCBleHRyYWN0ZWQgY29tcG9uZW50cyB0byB0aGUgbmV3IHRhZyAqL1xuICBmb3IgKHZhciBpID0gMCwgbGVuID0gZXh0cmFjdGVkLmxlbmd0aDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgdmFyIF9leHRyYWN0ZWQkaSA9IGV4dHJhY3RlZFtpXSxcbiAgICAgICAgY29tcG9uZW50SWQgPSBfZXh0cmFjdGVkJGkuY29tcG9uZW50SWQsXG4gICAgICAgIGNzc0Zyb21ET00gPSBfZXh0cmFjdGVkJGkuY3NzRnJvbURPTTtcblxuICAgIHZhciBjc3NSdWxlcyA9IHNwbGl0QnlSdWxlcyhjc3NGcm9tRE9NKTtcbiAgICB0YWcuaW5zZXJ0UnVsZXMoY29tcG9uZW50SWQsIGNzc1J1bGVzKTtcbiAgfVxuXG4gIC8qIHJlbW92ZSBvbGQgSFRNTFN0eWxlRWxlbWVudHMsIHNpbmNlIHRoZXkgaGF2ZSBiZWVuIHJlaHlkcmF0ZWQgKi9cbiAgZm9yICh2YXIgX2kgPSAwLCBfbGVuID0gZWxzLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSArPSAxKSB7XG4gICAgdmFyIGVsID0gZWxzW19pXTtcbiAgICBpZiAoZWwucGFyZW50Tm9kZSkge1xuICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBcblxudmFyIFNQTElUX1JFR0VYID0gL1xccysvO1xuXG4vKiBkZXRlcm1pbmUgdGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbXBvbmVudHMgYmVmb3JlIHRhZ3MgYXJlIHNoYXJkZWQgKi9cbnZhciBNQVhfU0laRSA9IHZvaWQgMDtcbmlmIChJU19CUk9XU0VSKSB7XG4gIC8qIGluIHNwZWVkeSBtb2RlIHdlIGNhbiBrZWVwIGEgbG90IG1vcmUgcnVsZXMgaW4gYSBzaGVldCBiZWZvcmUgYSBzbG93ZG93biBjYW4gYmUgZXhwZWN0ZWQgKi9cbiAgTUFYX1NJWkUgPSBESVNBQkxFX1NQRUVEWSA/IDQwIDogMTAwMDtcbn0gZWxzZSB7XG4gIC8qIGZvciBzZXJ2ZXJzIHdlIGRvIG5vdCBuZWVkIHRvIHNoYXJkIGF0IGFsbCAqL1xuICBNQVhfU0laRSA9IC0xO1xufVxuXG52YXIgc2hlZXRSdW5uaW5nSWQgPSAwO1xudmFyIG1hc3RlciA9IHZvaWQgMDtcblxudmFyIFN0eWxlU2hlZXQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgLyogYSBtYXAgZnJvbSBpZHMgdG8gdGFncyAqL1xuXG4gIC8qIGRlZmVycmVkIHJ1bGVzIGZvciBhIGdpdmVuIGlkICovXG5cbiAgLyogdGhpcyBpcyB1c2VkIGZvciBub3QgcmVpbmplY3RpbmcgcnVsZXMgdmlhIGhhc05hbWVGb3JJZCgpICovXG5cbiAgLyogd2hlbiBydWxlcyBmb3IgYW4gaWQgYXJlIHJlbW92ZWQgdXNpbmcgcmVtb3ZlKCkgd2UgaGF2ZSB0byBpZ25vcmUgcmVoeWRyYXRlZE5hbWVzIGZvciBpdCAqL1xuXG4gIC8qIGEgbGlzdCBvZiB0YWdzIGJlbG9uZ2luZyB0byB0aGlzIFN0eWxlU2hlZXQgKi9cblxuICAvKiBhIHRhZyBmb3IgaW1wb3J0IHJ1bGVzICovXG5cbiAgLyogY3VycmVudCBjYXBhY2l0eSB1bnRpbCBhIG5ldyB0YWcgbXVzdCBiZSBjcmVhdGVkICovXG5cbiAgLyogY2hpbGRyZW4gKGFrYSBjbG9uZXMpIG9mIHRoaXMgU3R5bGVTaGVldCBpbmhlcml0aW5nIGFsbCBhbmQgZnV0dXJlIGluamVjdGlvbnMgKi9cblxuICBmdW5jdGlvbiBTdHlsZVNoZWV0KCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgdGFyZ2V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBJU19CUk9XU0VSID8gZG9jdW1lbnQuaGVhZCA6IG51bGw7XG4gICAgdmFyIGZvcmNlU2VydmVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZVNoZWV0KTtcblxuICAgIHRoaXMuZ2V0SW1wb3J0UnVsZVRhZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpbXBvcnRSdWxlVGFnID0gX3RoaXMuaW1wb3J0UnVsZVRhZztcblxuICAgICAgaWYgKGltcG9ydFJ1bGVUYWcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gaW1wb3J0UnVsZVRhZztcbiAgICAgIH1cblxuICAgICAgdmFyIGZpcnN0VGFnID0gX3RoaXMudGFnc1swXTtcbiAgICAgIHZhciBpbnNlcnRCZWZvcmUgPSB0cnVlO1xuXG4gICAgICByZXR1cm4gX3RoaXMuaW1wb3J0UnVsZVRhZyA9IG1ha2VUYWcoX3RoaXMudGFyZ2V0LCBmaXJzdFRhZyA/IGZpcnN0VGFnLnN0eWxlVGFnIDogbnVsbCwgX3RoaXMuZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSk7XG4gICAgfTtcblxuICAgIHNoZWV0UnVubmluZ0lkICs9IDE7XG4gICAgdGhpcy5pZCA9IHNoZWV0UnVubmluZ0lkO1xuICAgIHRoaXMuZm9yY2VTZXJ2ZXIgPSBmb3JjZVNlcnZlcjtcbiAgICB0aGlzLnRhcmdldCA9IGZvcmNlU2VydmVyID8gbnVsbCA6IHRhcmdldDtcbiAgICB0aGlzLnRhZ01hcCA9IHt9O1xuICAgIHRoaXMuZGVmZXJyZWQgPSB7fTtcbiAgICB0aGlzLnJlaHlkcmF0ZWROYW1lcyA9IHt9O1xuICAgIHRoaXMuaWdub3JlUmVoeWRyYXRlZE5hbWVzID0ge307XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jYXBhY2l0eSA9IDE7XG4gICAgdGhpcy5jbG9uZXMgPSBbXTtcbiAgfVxuXG4gIC8qIHJlaHlkcmF0ZSBhbGwgU1NSJ2Qgc3R5bGUgdGFncyAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUucmVoeWRyYXRlID0gZnVuY3Rpb24gcmVoeWRyYXRlJCQxKCkge1xuICAgIGlmICghSVNfQlJPV1NFUiB8fCB0aGlzLmZvcmNlU2VydmVyKSByZXR1cm4gdGhpcztcblxuICAgIHZhciBlbHMgPSBbXTtcbiAgICB2YXIgZXh0cmFjdGVkID0gW107XG4gICAgdmFyIGlzU3RyZWFtZWQgPSBmYWxzZTtcblxuICAgIC8qIHJldHJpZXZlIGFsbCBvZiBvdXIgU1NSIHN0eWxlIGVsZW1lbnRzIGZyb20gdGhlIERPTSAqL1xuICAgIHZhciBub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3N0eWxlWycgKyBTQ19BVFRSICsgJ11bJyArIFNDX1ZFUlNJT05fQVRUUiArICc9XCInICsgXCI0LjMuMlwiICsgJ1wiXScpO1xuXG4gICAgdmFyIG5vZGVzU2l6ZSA9IG5vZGVzLmxlbmd0aDtcblxuICAgIC8qIGFib3J0IHJlaHlkcmF0aW9uIGlmIG5vIHByZXZpb3VzIHN0eWxlIHRhZ3Mgd2VyZSBmb3VuZCAqL1xuICAgIGlmICghbm9kZXNTaXplKSByZXR1cm4gdGhpcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZXNTaXplOyBpICs9IDEpIHtcbiAgICAgIHZhciBlbCA9IG5vZGVzW2ldO1xuXG4gICAgICAvKiBjaGVjayBpZiBzdHlsZSB0YWcgaXMgYSBzdHJlYW1lZCB0YWcgKi9cbiAgICAgIGlmICghaXNTdHJlYW1lZCkgaXNTdHJlYW1lZCA9ICEhZWwuZ2V0QXR0cmlidXRlKFNDX1NUUkVBTV9BVFRSKTtcblxuICAgICAgLyogcmV0cmlldmUgYWxsIGNvbXBvbmVudCBuYW1lcyAqL1xuICAgICAgdmFyIGVsTmFtZXMgPSAoZWwuZ2V0QXR0cmlidXRlKFNDX0FUVFIpIHx8ICcnKS50cmltKCkuc3BsaXQoU1BMSVRfUkVHRVgpO1xuICAgICAgdmFyIGVsTmFtZXNTaXplID0gZWxOYW1lcy5sZW5ndGg7XG4gICAgICBmb3IgKHZhciBqID0gMCwgbmFtZTsgaiA8IGVsTmFtZXNTaXplOyBqICs9IDEpIHtcbiAgICAgICAgbmFtZSA9IGVsTmFtZXNbal07XG4gICAgICAgIC8qIGFkZCByZWh5ZHJhdGVkIG5hbWUgdG8gc2hlZXQgdG8gYXZvaWQgcmUtYWRkaW5nIHN0eWxlcyAqL1xuICAgICAgICB0aGlzLnJlaHlkcmF0ZWROYW1lc1tuYW1lXSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8qIGV4dHJhY3QgYWxsIGNvbXBvbmVudHMgYW5kIHRoZWlyIENTUyAqL1xuICAgICAgZXh0cmFjdGVkLnB1c2guYXBwbHkoZXh0cmFjdGVkLCBleHRyYWN0Q29tcHMoZWwudGV4dENvbnRlbnQpKTtcblxuICAgICAgLyogc3RvcmUgb3JpZ2luYWwgSFRNTFN0eWxlRWxlbWVudCAqL1xuICAgICAgZWxzLnB1c2goZWwpO1xuICAgIH1cblxuICAgIC8qIGFib3J0IHJlaHlkcmF0aW9uIGlmIG5vdGhpbmcgd2FzIGV4dHJhY3RlZCAqL1xuICAgIHZhciBleHRyYWN0ZWRTaXplID0gZXh0cmFjdGVkLmxlbmd0aDtcbiAgICBpZiAoIWV4dHJhY3RlZFNpemUpIHJldHVybiB0aGlzO1xuXG4gICAgLyogY3JlYXRlIGEgdGFnIHRvIGJlIHVzZWQgZm9yIHJlaHlkcmF0aW9uICovXG4gICAgdmFyIHRhZyA9IHRoaXMubWFrZVRhZyhudWxsKTtcblxuICAgIHJlaHlkcmF0ZSh0YWcsIGVscywgZXh0cmFjdGVkKTtcblxuICAgIC8qIHJlc2V0IGNhcGFjaXR5IGFuZCBhZGp1c3QgTUFYX1NJWkUgYnkgdGhlIGluaXRpYWwgc2l6ZSBvZiB0aGUgcmVoeWRyYXRpb24gKi9cbiAgICB0aGlzLmNhcGFjaXR5ID0gTWF0aC5tYXgoMSwgTUFYX1NJWkUgLSBleHRyYWN0ZWRTaXplKTtcbiAgICB0aGlzLnRhZ3MucHVzaCh0YWcpO1xuXG4gICAgLyogcmV0cmlldmUgYWxsIGNvbXBvbmVudCBpZHMgKi9cbiAgICBmb3IgKHZhciBfaiA9IDA7IF9qIDwgZXh0cmFjdGVkU2l6ZTsgX2ogKz0gMSkge1xuICAgICAgdGhpcy50YWdNYXBbZXh0cmFjdGVkW19qXS5jb21wb25lbnRJZF0gPSB0YWc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgLyogcmV0cmlldmUgYSBcIm1hc3RlclwiIGluc3RhbmNlIG9mIFN0eWxlU2hlZXQgd2hpY2ggaXMgdHlwaWNhbGx5IHVzZWQgd2hlbiBubyBvdGhlciBpcyBhdmFpbGFibGVcbiAgICogVGhlIG1hc3RlciBTdHlsZVNoZWV0IGlzIHRhcmdldGVkIGJ5IGNyZWF0ZUdsb2JhbFN0eWxlLCBrZXlmcmFtZXMsIGFuZCBjb21wb25lbnRzIG91dHNpZGUgb2YgYW55XG4gICAgKiBTdHlsZVNoZWV0TWFuYWdlcidzIGNvbnRleHQgKi9cblxuXG4gIC8qIHJlc2V0IHRoZSBpbnRlcm5hbCBcIm1hc3RlclwiIGluc3RhbmNlICovXG4gIFN0eWxlU2hlZXQucmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgICB2YXIgZm9yY2VTZXJ2ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgbWFzdGVyID0gbmV3IFN0eWxlU2hlZXQodW5kZWZpbmVkLCBmb3JjZVNlcnZlcikucmVoeWRyYXRlKCk7XG4gIH07XG5cbiAgLyogYWRkcyBcImNoaWxkcmVuXCIgdG8gdGhlIFN0eWxlU2hlZXQgdGhhdCBpbmhlcml0IGFsbCBvZiB0aGUgcGFyZW50cycgcnVsZXNcbiAgICogd2hpbGUgdGhlaXIgb3duIHJ1bGVzIGRvIG5vdCBhZmZlY3QgdGhlIHBhcmVudCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSgpIHtcbiAgICB2YXIgc2hlZXQgPSBuZXcgU3R5bGVTaGVldCh0aGlzLnRhcmdldCwgdGhpcy5mb3JjZVNlcnZlcik7XG5cbiAgICAvKiBhZGQgdG8gY2xvbmUgYXJyYXkgKi9cbiAgICB0aGlzLmNsb25lcy5wdXNoKHNoZWV0KTtcblxuICAgIC8qIGNsb25lIGFsbCB0YWdzICovXG4gICAgc2hlZXQudGFncyA9IHRoaXMudGFncy5tYXAoZnVuY3Rpb24gKHRhZykge1xuICAgICAgdmFyIGlkcyA9IHRhZy5nZXRJZHMoKTtcbiAgICAgIHZhciBuZXdUYWcgPSB0YWcuY2xvbmUoKTtcblxuICAgICAgLyogcmVjb25zdHJ1Y3QgdGFnTWFwICovXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlkcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBzaGVldC50YWdNYXBbaWRzW2ldXSA9IG5ld1RhZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ld1RhZztcbiAgICB9KTtcblxuICAgIC8qIGNsb25lIG90aGVyIG1hcHMgKi9cbiAgICBzaGVldC5yZWh5ZHJhdGVkTmFtZXMgPSBfZXh0ZW5kcyh7fSwgdGhpcy5yZWh5ZHJhdGVkTmFtZXMpO1xuICAgIHNoZWV0LmRlZmVycmVkID0gX2V4dGVuZHMoe30sIHRoaXMuZGVmZXJyZWQpO1xuXG4gICAgcmV0dXJuIHNoZWV0O1xuICB9O1xuXG4gIC8qIGZvcmNlIFN0eWxlU2hlZXQgdG8gY3JlYXRlIGEgbmV3IHRhZyBvbiB0aGUgbmV4dCBpbmplY3Rpb24gKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnNlYWxBbGxUYWdzID0gZnVuY3Rpb24gc2VhbEFsbFRhZ3MoKSB7XG4gICAgdGhpcy5jYXBhY2l0eSA9IDE7XG5cbiAgICB0aGlzLnRhZ3MuZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIHRhZy5zZWFsZWQgPSB0cnVlO1xuICAgIH0pO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLm1ha2VUYWcgPSBmdW5jdGlvbiBtYWtlVGFnJCQxKHRhZykge1xuICAgIHZhciBsYXN0RWwgPSB0YWcgPyB0YWcuc3R5bGVUYWcgOiBudWxsO1xuICAgIHZhciBpbnNlcnRCZWZvcmUgPSBmYWxzZTtcblxuICAgIHJldHVybiBtYWtlVGFnKHRoaXMudGFyZ2V0LCBsYXN0RWwsIHRoaXMuZm9yY2VTZXJ2ZXIsIGluc2VydEJlZm9yZSwgdGhpcy5nZXRJbXBvcnRSdWxlVGFnKTtcbiAgfTtcblxuICAvKiBnZXQgYSB0YWcgZm9yIGEgZ2l2ZW4gY29tcG9uZW50SWQsIGFzc2lnbiB0aGUgY29tcG9uZW50SWQgdG8gb25lLCBvciBzaGFyZCAqL1xuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRUYWdGb3JJZCA9IGZ1bmN0aW9uIGdldFRhZ0ZvcklkKGlkKSB7XG4gICAgLyogc2ltcGx5IHJldHVybiBhIHRhZywgd2hlbiB0aGUgY29tcG9uZW50SWQgd2FzIGFscmVhZHkgYXNzaWduZWQgb25lICovXG4gICAgdmFyIHByZXYgPSB0aGlzLnRhZ01hcFtpZF07XG4gICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCAmJiAhcHJldi5zZWFsZWQpIHtcbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH1cblxuICAgIHZhciB0YWcgPSB0aGlzLnRhZ3NbdGhpcy50YWdzLmxlbmd0aCAtIDFdO1xuXG4gICAgLyogc2hhcmQgKGNyZWF0ZSBhIG5ldyB0YWcpIGlmIHRoZSB0YWcgaXMgZXhoYXVzdGVkIChTZWUgTUFYX1NJWkUpICovXG4gICAgdGhpcy5jYXBhY2l0eSAtPSAxO1xuXG4gICAgaWYgKHRoaXMuY2FwYWNpdHkgPT09IDApIHtcbiAgICAgIHRoaXMuY2FwYWNpdHkgPSBNQVhfU0laRTtcbiAgICAgIHRhZyA9IHRoaXMubWFrZVRhZyh0YWcpO1xuICAgICAgdGhpcy50YWdzLnB1c2godGFnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy50YWdNYXBbaWRdID0gdGFnO1xuICB9O1xuXG4gIC8qIG1haW5seSBmb3IgY3JlYXRlR2xvYmFsU3R5bGUgdG8gY2hlY2sgZm9yIGl0cyBpZCAqL1xuXG5cbiAgU3R5bGVTaGVldC5wcm90b3R5cGUuaGFzSWQgPSBmdW5jdGlvbiBoYXNJZChpZCkge1xuICAgIHJldHVybiB0aGlzLnRhZ01hcFtpZF0gIT09IHVuZGVmaW5lZDtcbiAgfTtcblxuICAvKiBjYWNoaW5nIGxheWVyIGNoZWNraW5nIGlkK25hbWUgdG8gYWxyZWFkeSBoYXZlIGEgY29ycmVzcG9uZGluZyB0YWcgYW5kIGluamVjdGVkIHJ1bGVzICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5oYXNOYW1lRm9ySWQgPSBmdW5jdGlvbiBoYXNOYW1lRm9ySWQoaWQsIG5hbWUpIHtcbiAgICAvKiBleGNlcHRpb24gZm9yIHJlaHlkcmF0ZWQgbmFtZXMgd2hpY2ggYXJlIGNoZWNrZWQgc2VwYXJhdGVseSAqL1xuICAgIGlmICh0aGlzLmlnbm9yZVJlaHlkcmF0ZWROYW1lc1tpZF0gPT09IHVuZGVmaW5lZCAmJiB0aGlzLnJlaHlkcmF0ZWROYW1lc1tuYW1lXSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnTWFwW2lkXTtcbiAgICByZXR1cm4gdGFnICE9PSB1bmRlZmluZWQgJiYgdGFnLmhhc05hbWVGb3JJZChpZCwgbmFtZSk7XG4gIH07XG5cbiAgLyogcmVnaXN0ZXJzIGEgY29tcG9uZW50SWQgYW5kIHJlZ2lzdGVycyBpdCBvbiBpdHMgdGFnICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5kZWZlcnJlZEluamVjdCA9IGZ1bmN0aW9uIGRlZmVycmVkSW5qZWN0KGlkLCBjc3NSdWxlcykge1xuICAgIC8qIGRvbid0IGluamVjdCB3aGVuIHRoZSBpZCBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQgKi9cbiAgICBpZiAodGhpcy50YWdNYXBbaWRdICE9PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIHZhciBjbG9uZXMgPSB0aGlzLmNsb25lcztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0uZGVmZXJyZWRJbmplY3QoaWQsIGNzc1J1bGVzKTtcbiAgICB9XG5cbiAgICB0aGlzLmdldFRhZ0ZvcklkKGlkKS5pbnNlcnRNYXJrZXIoaWQpO1xuICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gY3NzUnVsZXM7XG4gIH07XG5cbiAgLyogaW5qZWN0cyBydWxlcyBmb3IgYSBnaXZlbiBpZCB3aXRoIGEgbmFtZSB0aGF0IHdpbGwgbmVlZCB0byBiZSBjYWNoZWQgKi9cblxuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLmluamVjdCA9IGZ1bmN0aW9uIGluamVjdChpZCwgY3NzUnVsZXMsIG5hbWUpIHtcbiAgICB2YXIgY2xvbmVzID0gdGhpcy5jbG9uZXM7XG5cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xvbmVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjbG9uZXNbaV0uaW5qZWN0KGlkLCBjc3NSdWxlcywgbmFtZSk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMuZ2V0VGFnRm9ySWQoaWQpO1xuXG4gICAgLyogYWRkIGRlZmVycmVkIHJ1bGVzIGZvciBjb21wb25lbnQgKi9cbiAgICBpZiAodGhpcy5kZWZlcnJlZFtpZF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQ29tYmluZSBwYXNzZWQgY3NzUnVsZXMgd2l0aCBwcmV2aW91c2x5IGRlZmVycmVkIENTUyBydWxlc1xuICAgICAgLy8gTk9URTogV2UgY2Fubm90IG11dGF0ZSB0aGUgZGVmZXJyZWQgYXJyYXkgaXRzZWxmIGFzIGFsbCBjbG9uZXNcbiAgICAgIC8vIGRvIHRoZSBzYW1lIChzZWUgY2xvbmVzW2ldLmluamVjdClcbiAgICAgIHZhciBydWxlcyA9IHRoaXMuZGVmZXJyZWRbaWRdLmNvbmNhdChjc3NSdWxlcyk7XG4gICAgICB0YWcuaW5zZXJ0UnVsZXMoaWQsIHJ1bGVzLCBuYW1lKTtcblxuICAgICAgdGhpcy5kZWZlcnJlZFtpZF0gPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5pbnNlcnRSdWxlcyhpZCwgY3NzUnVsZXMsIG5hbWUpO1xuICAgIH1cbiAgfTtcblxuICAvKiByZW1vdmVzIGFsbCBydWxlcyBmb3IgYSBnaXZlbiBpZCwgd2hpY2ggZG9lc24ndCByZW1vdmUgaXRzIG1hcmtlciBidXQgcmVzZXRzIGl0ICovXG5cblxuICBTdHlsZVNoZWV0LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoaWQpIHtcbiAgICB2YXIgdGFnID0gdGhpcy50YWdNYXBbaWRdO1xuICAgIGlmICh0YWcgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgdmFyIGNsb25lcyA9IHRoaXMuY2xvbmVzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbG9uZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNsb25lc1tpXS5yZW1vdmUoaWQpO1xuICAgIH1cblxuICAgIC8qIHJlbW92ZSBhbGwgcnVsZXMgZnJvbSB0aGUgdGFnICovXG4gICAgdGFnLnJlbW92ZVJ1bGVzKGlkKTtcblxuICAgIC8qIGlnbm9yZSBwb3NzaWJsZSByZWh5ZHJhdGVkIG5hbWVzICovXG4gICAgdGhpcy5pZ25vcmVSZWh5ZHJhdGVkTmFtZXNbaWRdID0gdHJ1ZTtcblxuICAgIC8qIGRlbGV0ZSBwb3NzaWJsZSBkZWZlcnJlZCBydWxlcyAqL1xuICAgIHRoaXMuZGVmZXJyZWRbaWRdID0gdW5kZWZpbmVkO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnRvSFRNTCA9IGZ1bmN0aW9uIHRvSFRNTCgpIHtcbiAgICByZXR1cm4gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnKSB7XG4gICAgICByZXR1cm4gdGFnLnRvSFRNTCgpO1xuICAgIH0pLmpvaW4oJycpO1xuICB9O1xuXG4gIFN0eWxlU2hlZXQucHJvdG90eXBlLnRvUmVhY3RFbGVtZW50cyA9IGZ1bmN0aW9uIHRvUmVhY3RFbGVtZW50cygpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkO1xuXG5cbiAgICByZXR1cm4gdGhpcy50YWdzLm1hcChmdW5jdGlvbiAodGFnLCBpKSB7XG4gICAgICB2YXIga2V5ID0gJ3NjLScgKyBpZCArICctJyArIGk7XG4gICAgICByZXR1cm4gY2xvbmVFbGVtZW50KHRhZy50b0VsZW1lbnQoKSwgeyBrZXk6IGtleSB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjcmVhdGVDbGFzcyhTdHlsZVNoZWV0LCBudWxsLCBbe1xuICAgIGtleTogJ21hc3RlcicsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQkJDEoKSB7XG4gICAgICByZXR1cm4gbWFzdGVyIHx8IChtYXN0ZXIgPSBuZXcgU3R5bGVTaGVldCgpLnJlaHlkcmF0ZSgpKTtcbiAgICB9XG5cbiAgICAvKiBOT1RFOiBUaGlzIGlzIGp1c3QgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5IHdpdGggamVzdC1zdHlsZWQtY29tcG9uZW50cyAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdpbnN0YW5jZScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQkJDEoKSB7XG4gICAgICByZXR1cm4gU3R5bGVTaGVldC5tYXN0ZXI7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG4vLyBcblxudmFyIEtleWZyYW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gS2V5ZnJhbWVzKG5hbWUsIHJ1bGVzKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIEtleWZyYW1lcyk7XG5cbiAgICB0aGlzLmluamVjdCA9IGZ1bmN0aW9uIChzdHlsZVNoZWV0KSB7XG4gICAgICBpZiAoIXN0eWxlU2hlZXQuaGFzTmFtZUZvcklkKF90aGlzLmlkLCBfdGhpcy5uYW1lKSkge1xuICAgICAgICBzdHlsZVNoZWV0LmluamVjdChfdGhpcy5pZCwgX3RoaXMucnVsZXMsIF90aGlzLm5hbWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcigxMiwgU3RyaW5nKF90aGlzLm5hbWUpKTtcbiAgICB9O1xuXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG5cbiAgICB0aGlzLmlkID0gJ3NjLWtleWZyYW1lcy0nICsgbmFtZTtcbiAgfVxuXG4gIEtleWZyYW1lcy5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uIGdldE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgfTtcblxuICByZXR1cm4gS2V5ZnJhbWVzO1xufSgpO1xuXG4vLyBcblxuLyoqXG4gKiBpbmxpbmVkIHZlcnNpb24gb2ZcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mYmpzL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2ZianMvc3JjL2NvcmUvaHlwaGVuYXRlU3R5bGVOYW1lLmpzXG4gKi9cblxudmFyIHVwcGVyY2FzZVBhdHRlcm4gPSAvKFtBLVpdKS9nO1xudmFyIG1zUGF0dGVybiA9IC9ebXMtLztcblxuLyoqXG4gKiBIeXBoZW5hdGVzIGEgY2FtZWxjYXNlZCBDU1MgcHJvcGVydHkgbmFtZSwgZm9yIGV4YW1wbGU6XG4gKlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnYmFja2dyb3VuZENvbG9yJylcbiAqICAgPCBcImJhY2tncm91bmQtY29sb3JcIlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnTW96VHJhbnNpdGlvbicpXG4gKiAgIDwgXCItbW96LXRyYW5zaXRpb25cIlxuICogICA+IGh5cGhlbmF0ZVN0eWxlTmFtZSgnbXNUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tcy10cmFuc2l0aW9uXCJcbiAqXG4gKiBBcyBNb2Rlcm5penIgc3VnZ2VzdHMgKGh0dHA6Ly9tb2Rlcm5penIuY29tL2RvY3MvI3ByZWZpeGVkKSwgYW4gYG1zYCBwcmVmaXhcbiAqIGlzIGNvbnZlcnRlZCB0byBgLW1zLWAuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBoeXBoZW5hdGVTdHlsZU5hbWUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSh1cHBlcmNhc2VQYXR0ZXJuLCAnLSQxJykudG9Mb3dlckNhc2UoKS5yZXBsYWNlKG1zUGF0dGVybiwgJy1tcy0nKTtcbn1cblxuLy8gXG5cbi8vIFRha2VuIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvYjg3YWFiZGZlMWI3NDYxZTczMzFhYmIzNjAxZDllNmJiMjc1NDRiYy9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL3NoYXJlZC9kYW5nZXJvdXNTdHlsZVZhbHVlLmpzXG5mdW5jdGlvbiBhZGRVbml0SWZOZWVkZWQobmFtZSwgdmFsdWUpIHtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FtaWxhamFjay9lc2xpbnQtcGx1Z2luLWZsb3d0eXBlLWVycm9ycy9pc3N1ZXMvMTMzXG4gIC8vICRGbG93Rml4TWVcbiAgaWYgKHZhbHVlID09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgfHwgdmFsdWUgPT09ICcnKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDAgJiYgIShuYW1lIGluIHVuaXRsZXNzKSkge1xuICAgIHJldHVybiB2YWx1ZSArICdweCc7IC8vIFByZXN1bWVzIGltcGxpY2l0ICdweCcgc3VmZml4IGZvciB1bml0bGVzcyBudW1iZXJzXG4gIH1cblxuICByZXR1cm4gU3RyaW5nKHZhbHVlKS50cmltKCk7XG59XG5cbi8vIFxuXG4vKipcbiAqIEl0J3MgZmFsc2lzaCBub3QgZmFsc3kgYmVjYXVzZSAwIGlzIGFsbG93ZWQuXG4gKi9cbnZhciBpc0ZhbHNpc2ggPSBmdW5jdGlvbiBpc0ZhbHNpc2goY2h1bmspIHtcbiAgcmV0dXJuIGNodW5rID09PSB1bmRlZmluZWQgfHwgY2h1bmsgPT09IG51bGwgfHwgY2h1bmsgPT09IGZhbHNlIHx8IGNodW5rID09PSAnJztcbn07XG5cbnZhciBvYmpUb0Nzc0FycmF5ID0gZnVuY3Rpb24gb2JqVG9Dc3NBcnJheShvYmosIHByZXZLZXkpIHtcbiAgdmFyIHJ1bGVzID0gW107XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmICghaXNGYWxzaXNoKG9ialtrZXldKSkge1xuICAgICAgaWYgKGlzUGxhaW5PYmplY3Qob2JqW2tleV0pKSB7XG4gICAgICAgIHJ1bGVzLnB1c2guYXBwbHkocnVsZXMsIG9ialRvQ3NzQXJyYXkob2JqW2tleV0sIGtleSkpO1xuXG4gICAgICAgIHJldHVybiBydWxlcztcbiAgICAgIH0gZWxzZSBpZiAoaXNGdW5jdGlvbihvYmpba2V5XSkpIHtcbiAgICAgICAgcnVsZXMucHVzaChoeXBoZW5hdGVTdHlsZU5hbWUoa2V5KSArICc6Jywgb2JqW2tleV0sICc7Jyk7XG5cbiAgICAgICAgcmV0dXJuIHJ1bGVzO1xuICAgICAgfVxuICAgICAgcnVsZXMucHVzaChoeXBoZW5hdGVTdHlsZU5hbWUoa2V5KSArICc6ICcgKyBhZGRVbml0SWZOZWVkZWQoa2V5LCBvYmpba2V5XSkgKyAnOycpO1xuICAgIH1cbiAgICByZXR1cm4gcnVsZXM7XG4gIH0pO1xuXG4gIHJldHVybiBwcmV2S2V5ID8gW3ByZXZLZXkgKyAnIHsnXS5jb25jYXQocnVsZXMsIFsnfSddKSA6IHJ1bGVzO1xufTtcblxuZnVuY3Rpb24gZmxhdHRlbihjaHVuaywgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShjaHVuaykpIHtcbiAgICB2YXIgcnVsZVNldCA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNodW5rLmxlbmd0aCwgcmVzdWx0OyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICAgIHJlc3VsdCA9IGZsYXR0ZW4oY2h1bmtbaV0sIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuXG4gICAgICBpZiAocmVzdWx0ID09PSBudWxsKSBjb250aW51ZTtlbHNlIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdCkpIHJ1bGVTZXQucHVzaC5hcHBseShydWxlU2V0LCByZXN1bHQpO2Vsc2UgcnVsZVNldC5wdXNoKHJlc3VsdCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJ1bGVTZXQ7XG4gIH1cblxuICBpZiAoaXNGYWxzaXNoKGNodW5rKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLyogSGFuZGxlIG90aGVyIGNvbXBvbmVudHMgKi9cbiAgaWYgKGlzU3R5bGVkQ29tcG9uZW50KGNodW5rKSkge1xuICAgIHJldHVybiAnLicgKyBjaHVuay5zdHlsZWRDb21wb25lbnRJZDtcbiAgfVxuXG4gIC8qIEVpdGhlciBleGVjdXRlIG9yIGRlZmVyIHRoZSBmdW5jdGlvbiAqL1xuICBpZiAoaXNGdW5jdGlvbihjaHVuaykpIHtcbiAgICBpZiAoaXNTdGF0ZWxlc3NGdW5jdGlvbihjaHVuaykgJiYgZXhlY3V0aW9uQ29udGV4dCkge1xuICAgICAgdmFyIF9yZXN1bHQgPSBjaHVuayhleGVjdXRpb25Db250ZXh0KTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaXNFbGVtZW50KF9yZXN1bHQpKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybihnZXRDb21wb25lbnROYW1lKGNodW5rKSArICcgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmxhdHRlbihfcmVzdWx0LCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgaWYgKGNodW5rIGluc3RhbmNlb2YgS2V5ZnJhbWVzKSB7XG4gICAgaWYgKHN0eWxlU2hlZXQpIHtcbiAgICAgIGNodW5rLmluamVjdChzdHlsZVNoZWV0KTtcbiAgICAgIHJldHVybiBjaHVuay5nZXROYW1lKCk7XG4gICAgfSBlbHNlIHJldHVybiBjaHVuaztcbiAgfVxuXG4gIC8qIEhhbmRsZSBvYmplY3RzICovXG4gIHJldHVybiBpc1BsYWluT2JqZWN0KGNodW5rKSA/IG9ialRvQ3NzQXJyYXkoY2h1bmspIDogY2h1bmsudG9TdHJpbmcoKTtcbn1cblxuLy8gXG5cbmZ1bmN0aW9uIGNzcyhzdHlsZXMpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChpc0Z1bmN0aW9uKHN0eWxlcykgfHwgaXNQbGFpbk9iamVjdChzdHlsZXMpKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiBmbGF0dGVuKGludGVybGVhdmUoRU1QVFlfQVJSQVksIFtzdHlsZXNdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpKTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWVcbiAgcmV0dXJuIGZsYXR0ZW4oaW50ZXJsZWF2ZShzdHlsZXMsIGludGVycG9sYXRpb25zKSk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBFTVBUWV9PQkpFQ1Q7XG5cbiAgaWYgKCFpc1ZhbGlkRWxlbWVudFR5cGUodGFnKSkge1xuICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMSwgU3RyaW5nKHRhZykpO1xuICB9XG5cbiAgLyogVGhpcyBpcyBjYWxsYWJsZSBkaXJlY3RseSBhcyBhIHRlbXBsYXRlIGZ1bmN0aW9uICovXG4gIC8vICRGbG93Rml4TWU6IE5vdCB0eXBlZCB0byBhdm9pZCBkZXN0cnVjdHVyaW5nIGFyZ3VtZW50c1xuICB2YXIgdGVtcGxhdGVGdW5jdGlvbiA9IGZ1bmN0aW9uIHRlbXBsYXRlRnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvbXBvbmVudENvbnN0cnVjdG9yKHRhZywgb3B0aW9ucywgY3NzLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gIH07XG5cbiAgLyogSWYgY29uZmlnIG1ldGhvZHMgYXJlIGNhbGxlZCwgd3JhcCB1cCBhIG5ldyB0ZW1wbGF0ZSBmdW5jdGlvbiBhbmQgbWVyZ2Ugb3B0aW9ucyAqL1xuICB0ZW1wbGF0ZUZ1bmN0aW9uLndpdGhDb25maWcgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCBjb25maWcpKTtcbiAgfTtcblxuICAvKiBNb2RpZnkvaW5qZWN0IG5ldyBwcm9wcyBhdCBydW50aW1lICovXG4gIHRlbXBsYXRlRnVuY3Rpb24uYXR0cnMgPSBmdW5jdGlvbiAoYXR0cnMpIHtcbiAgICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIGF0dHJzOiBBcnJheS5wcm90b3R5cGUuY29uY2F0KG9wdGlvbnMuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbilcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIHRlbXBsYXRlRnVuY3Rpb247XG59XG5cbi8vIFxuLy8gU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanMvYmxvYi9tYXN0ZXIvbXVybXVyaGFzaDJfZ2MuanNcbmZ1bmN0aW9uIG11cm11cmhhc2goYykge1xuICBmb3IgKHZhciBlID0gYy5sZW5ndGggfCAwLCBhID0gZSB8IDAsIGQgPSAwLCBiOyBlID49IDQ7KSB7XG4gICAgYiA9IGMuY2hhckNvZGVBdChkKSAmIDI1NSB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgOCB8IChjLmNoYXJDb2RlQXQoKytkKSAmIDI1NSkgPDwgMTYgfCAoYy5jaGFyQ29kZUF0KCsrZCkgJiAyNTUpIDw8IDI0LCBiID0gMTU0MDQ4MzQ3NyAqIChiICYgNjU1MzUpICsgKCgxNTQwNDgzNDc3ICogKGIgPj4+IDE2KSAmIDY1NTM1KSA8PCAxNiksIGIgXj0gYiA+Pj4gMjQsIGIgPSAxNTQwNDgzNDc3ICogKGIgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYiA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KSwgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpIF4gYiwgZSAtPSA0LCArK2Q7XG4gIH1cbiAgc3dpdGNoIChlKSB7XG4gICAgY2FzZSAzOlxuICAgICAgYSBePSAoYy5jaGFyQ29kZUF0KGQgKyAyKSAmIDI1NSkgPDwgMTY7XG4gICAgY2FzZSAyOlxuICAgICAgYSBePSAoYy5jaGFyQ29kZUF0KGQgKyAxKSAmIDI1NSkgPDwgODtcbiAgICBjYXNlIDE6XG4gICAgICBhIF49IGMuY2hhckNvZGVBdChkKSAmIDI1NSwgYSA9IDE1NDA0ODM0NzcgKiAoYSAmIDY1NTM1KSArICgoMTU0MDQ4MzQ3NyAqIChhID4+PiAxNikgJiA2NTUzNSkgPDwgMTYpO1xuICB9XG4gIGEgXj0gYSA+Pj4gMTM7XG4gIGEgPSAxNTQwNDgzNDc3ICogKGEgJiA2NTUzNSkgKyAoKDE1NDA0ODM0NzcgKiAoYSA+Pj4gMTYpICYgNjU1MzUpIDw8IDE2KTtcbiAgcmV0dXJuIChhIF4gYSA+Pj4gMTUpID4+PiAwO1xufVxuXG4vLyBcbi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyogVGhpcyBpcyB0aGUgXCJjYXBhY2l0eVwiIG9mIG91ciBhbHBoYWJldCBpLmUuIDJ4MjYgZm9yIGFsbCBsZXR0ZXJzIHBsdXMgdGhlaXIgY2FwaXRhbGlzZWRcbiAqIGNvdW50ZXJwYXJ0cyAqL1xudmFyIGNoYXJzTGVuZ3RoID0gNTI7XG5cbi8qIHN0YXJ0IGF0IDc1IGZvciAnYScgdW50aWwgJ3onICgyNSkgYW5kIHRoZW4gc3RhcnQgYXQgNjUgZm9yIGNhcGl0YWxpc2VkIGxldHRlcnMgKi9cbnZhciBnZXRBbHBoYWJldGljQ2hhciA9IGZ1bmN0aW9uIGdldEFscGhhYmV0aWNDaGFyKGNvZGUpIHtcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSArIChjb2RlID4gMjUgPyAzOSA6IDk3KSk7XG59O1xuXG4vKiBpbnB1dCBhIG51bWJlciwgdXN1YWxseSBhIGhhc2ggYW5kIGNvbnZlcnQgaXQgdG8gYmFzZS01MiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShjb2RlKSB7XG4gIHZhciBuYW1lID0gJyc7XG4gIHZhciB4ID0gdm9pZCAwO1xuXG4gIC8qIGdldCBhIGNoYXIgYW5kIGRpdmlkZSBieSBhbHBoYWJldC1sZW5ndGggKi9cbiAgZm9yICh4ID0gY29kZTsgeCA+IGNoYXJzTGVuZ3RoOyB4ID0gTWF0aC5mbG9vcih4IC8gY2hhcnNMZW5ndGgpKSB7XG4gICAgbmFtZSA9IGdldEFscGhhYmV0aWNDaGFyKHggJSBjaGFyc0xlbmd0aCkgKyBuYW1lO1xuICB9XG5cbiAgcmV0dXJuIGdldEFscGhhYmV0aWNDaGFyKHggJSBjaGFyc0xlbmd0aCkgKyBuYW1lO1xufVxuXG4vLyBcblxuZnVuY3Rpb24gaGFzRnVuY3Rpb25PYmplY3RLZXkob2JqKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW4sIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoaXNGdW5jdGlvbihvYmpba2V5XSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNTdGF0aWNSdWxlcyhydWxlcywgYXR0cnMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBydWxlID0gcnVsZXNbaV07XG5cbiAgICAvLyByZWN1cnNpdmUgY2FzZVxuICAgIGlmIChBcnJheS5pc0FycmF5KHJ1bGUpICYmICFpc1N0YXRpY1J1bGVzKHJ1bGUsIGF0dHJzKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoaXNGdW5jdGlvbihydWxlKSAmJiAhaXNTdHlsZWRDb21wb25lbnQocnVsZSkpIHtcbiAgICAgIC8vIGZ1bmN0aW9ucyBhcmUgYWxsb3dlZCB0byBiZSBzdGF0aWMgaWYgdGhleSdyZSBqdXN0IGJlaW5nXG4gICAgICAvLyB1c2VkIHRvIGdldCB0aGUgY2xhc3NuYW1lIG9mIGEgbmVzdGVkIHN0eWxlZCBjb21wb25lbnRcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAoYXR0cnMuc29tZShmdW5jdGlvbiAoeCkge1xuICAgIHJldHVybiBpc0Z1bmN0aW9uKHgpIHx8IGhhc0Z1bmN0aW9uT2JqZWN0S2V5KHgpO1xuICB9KSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vLyBcblxudmFyIGlzSE1SRW5hYmxlZCA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmhvdDtcblxuLyogY29tYmluZXMgaGFzaFN0ciAobXVybXVyaGFzaCkgYW5kIG5hbWVHZW5lcmF0b3IgZm9yIGNvbnZlbmllbmNlICovXG52YXIgaGFzaGVyID0gZnVuY3Rpb24gaGFzaGVyKHN0cikge1xuICByZXR1cm4gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShtdXJtdXJoYXNoKHN0cikpO1xufTtcblxuLypcbiBDb21wb25lbnRTdHlsZSBpcyBhbGwgdGhlIENTUy1zcGVjaWZpYyBzdHVmZiwgbm90XG4gdGhlIFJlYWN0LXNwZWNpZmljIHN0dWZmLlxuICovXG5cbnZhciBDb21wb25lbnRTdHlsZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29tcG9uZW50U3R5bGUocnVsZXMsIGF0dHJzLCBjb21wb25lbnRJZCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIENvbXBvbmVudFN0eWxlKTtcblxuICAgIHRoaXMucnVsZXMgPSBydWxlcztcbiAgICB0aGlzLmlzU3RhdGljID0gIWlzSE1SRW5hYmxlZCAmJiBpc1N0YXRpY1J1bGVzKHJ1bGVzLCBhdHRycyk7XG4gICAgdGhpcy5jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuXG4gICAgaWYgKCFTdHlsZVNoZWV0Lm1hc3Rlci5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIFN0eWxlU2hlZXQubWFzdGVyLmRlZmVycmVkSW5qZWN0KGNvbXBvbmVudElkLCBbXSk7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICAgKiBGbGF0dGVucyBhIHJ1bGUgc2V0IGludG8gdmFsaWQgQ1NTXG4gICAgICogSGFzaGVzIGl0LCB3cmFwcyB0aGUgd2hvbGUgY2h1bmsgaW4gYSAuaGFzaDEyMzQge31cbiAgICAgKiBSZXR1cm5zIHRoZSBoYXNoIHRvIGJlIGluamVjdGVkIG9uIHJlbmRlcigpXG4gICAgICogKi9cblxuXG4gIENvbXBvbmVudFN0eWxlLnByb3RvdHlwZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyA9IGZ1bmN0aW9uIGdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgICB2YXIgaXNTdGF0aWMgPSB0aGlzLmlzU3RhdGljLFxuICAgICAgICBjb21wb25lbnRJZCA9IHRoaXMuY29tcG9uZW50SWQsXG4gICAgICAgIGxhc3RDbGFzc05hbWUgPSB0aGlzLmxhc3RDbGFzc05hbWU7XG5cbiAgICBpZiAoSVNfQlJPV1NFUiAmJiBpc1N0YXRpYyAmJiB0eXBlb2YgbGFzdENsYXNzTmFtZSA9PT0gJ3N0cmluZycgJiYgc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIGxhc3RDbGFzc05hbWUpKSB7XG4gICAgICByZXR1cm4gbGFzdENsYXNzTmFtZTtcbiAgICB9XG5cbiAgICB2YXIgZmxhdENTUyA9IGZsYXR0ZW4odGhpcy5ydWxlcywgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCk7XG4gICAgdmFyIG5hbWUgPSBoYXNoZXIodGhpcy5jb21wb25lbnRJZCArIGZsYXRDU1Muam9pbignJykpO1xuICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIG5hbWUpKSB7XG4gICAgICBzdHlsZVNoZWV0LmluamVjdCh0aGlzLmNvbXBvbmVudElkLCBzdHJpbmdpZnlSdWxlcyhmbGF0Q1NTLCAnLicgKyBuYW1lLCB1bmRlZmluZWQsIGNvbXBvbmVudElkKSwgbmFtZSk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0Q2xhc3NOYW1lID0gbmFtZTtcbiAgICByZXR1cm4gbmFtZTtcbiAgfTtcblxuICBDb21wb25lbnRTdHlsZS5nZW5lcmF0ZU5hbWUgPSBmdW5jdGlvbiBnZW5lcmF0ZU5hbWUoc3RyKSB7XG4gICAgcmV0dXJuIGhhc2hlcihzdHIpO1xuICB9O1xuXG4gIHJldHVybiBDb21wb25lbnRTdHlsZTtcbn0oKTtcblxuLy8gXG5cbnZhciBMSU1JVCA9IDIwMDtcblxudmFyIGNyZWF0ZVdhcm5Ub29NYW55Q2xhc3NlcyA9IChmdW5jdGlvbiAoZGlzcGxheU5hbWUpIHtcbiAgdmFyIGdlbmVyYXRlZENsYXNzZXMgPSB7fTtcbiAgdmFyIHdhcm5pbmdTZWVuID0gZmFsc2U7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBpZiAoIXdhcm5pbmdTZWVuKSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc2VzW2NsYXNzTmFtZV0gPSB0cnVlO1xuICAgICAgaWYgKE9iamVjdC5rZXlzKGdlbmVyYXRlZENsYXNzZXMpLmxlbmd0aCA+PSBMSU1JVCkge1xuICAgICAgICAvLyBVbmFibGUgdG8gZmluZCBsYXRlc3RSdWxlIGluIHRlc3QgZW52aXJvbm1lbnQuXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUsIHByZWZlci10ZW1wbGF0ZSAqL1xuICAgICAgICBjb25zb2xlLndhcm4oJ092ZXIgJyArIExJTUlUICsgJyBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgJyArIGRpc3BsYXlOYW1lICsgJy4gXFxuJyArICdDb25zaWRlciB1c2luZyB0aGUgYXR0cnMgbWV0aG9kLCB0b2dldGhlciB3aXRoIGEgc3R5bGUgb2JqZWN0IGZvciBmcmVxdWVudGx5IGNoYW5nZWQgc3R5bGVzLlxcbicgKyAnRXhhbXBsZTpcXG4nICsgJyAgY29uc3QgQ29tcG9uZW50ID0gc3R5bGVkLmRpdi5hdHRycyh7XFxuJyArICcgICAgc3R5bGU6ICh7IGJhY2tncm91bmQgfSkgPT4gKHtcXG4nICsgJyAgICAgIGJhY2tncm91bmQsXFxuJyArICcgICAgfSksXFxuJyArICcgIH0pYHdpZHRoOiAxMDAlO2BcXG5cXG4nICsgJyAgPENvbXBvbmVudCAvPicpO1xuICAgICAgICB3YXJuaW5nU2VlbiA9IHRydWU7XG4gICAgICAgIGdlbmVyYXRlZENsYXNzZXMgPSB7fTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59KTtcblxuLy8gXG5cbnZhciBkZXRlcm1pbmVUaGVtZSA9IChmdW5jdGlvbiAocHJvcHMsIGZhbGxiYWNrVGhlbWUpIHtcbiAgdmFyIGRlZmF1bHRQcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogRU1QVFlfT0JKRUNUO1xuXG4gIC8vIFByb3BzIHNob3VsZCB0YWtlIHByZWNlZGVuY2Ugb3ZlciBUaGVtZVByb3ZpZGVyLCB3aGljaCBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIG92ZXJcbiAgLy8gZGVmYXVsdFByb3BzLCBidXQgUmVhY3QgYXV0b21hdGljYWxseSBwdXRzIGRlZmF1bHRQcm9wcyBvbiBwcm9wcy5cblxuICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzLCBmbG93dHlwZS1lcnJvcnMvc2hvdy1lcnJvcnMgKi9cbiAgdmFyIGlzRGVmYXVsdFRoZW1lID0gZGVmYXVsdFByb3BzID8gcHJvcHMudGhlbWUgPT09IGRlZmF1bHRQcm9wcy50aGVtZSA6IGZhbHNlO1xuICB2YXIgdGhlbWUgPSBwcm9wcy50aGVtZSAmJiAhaXNEZWZhdWx0VGhlbWUgPyBwcm9wcy50aGVtZSA6IGZhbGxiYWNrVGhlbWUgfHwgZGVmYXVsdFByb3BzLnRoZW1lO1xuICAvKiBlc2xpbnQtZW5hYmxlICovXG5cbiAgcmV0dXJuIHRoZW1lO1xufSk7XG5cbi8vIFxudmFyIGVzY2FwZVJlZ2V4ID0gL1tbXFxdLiMqJD48K349fF46KCksXCInYC1dKy9nO1xudmFyIGRhc2hlc0F0RW5kcyA9IC8oXi18LSQpL2c7XG5cbi8qKlxuICogVE9ETzogRXhwbG9yZSB1c2luZyBDU1MuZXNjYXBlIHdoZW4gaXQgYmVjb21lcyBtb3JlIGF2YWlsYWJsZVxuICogaW4gZXZlcmdyZWVuIGJyb3dzZXJzLlxuICovXG5mdW5jdGlvbiBlc2NhcGUoc3RyKSB7XG4gIHJldHVybiBzdHJcbiAgLy8gUmVwbGFjZSBhbGwgcG9zc2libGUgQ1NTIHNlbGVjdG9yc1xuICAucmVwbGFjZShlc2NhcGVSZWdleCwgJy0nKVxuXG4gIC8vIFJlbW92ZSBleHRyYW5lb3VzIGh5cGhlbnMgYXQgdGhlIHN0YXJ0IGFuZCBlbmRcbiAgLnJlcGxhY2UoZGFzaGVzQXRFbmRzLCAnJyk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBpc1RhZyh0YXJnZXQpIHtcbiAgcmV0dXJuIHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gdGFyZ2V0LmNoYXJBdCgwKSA9PT0gdGFyZ2V0LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpIDogdHJ1ZSk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkge1xuICAvLyAkRmxvd0ZpeE1lXG4gIHJldHVybiBpc1RhZyh0YXJnZXQpID8gJ3N0eWxlZC4nICsgdGFyZ2V0IDogJ1N0eWxlZCgnICsgZ2V0Q29tcG9uZW50TmFtZSh0YXJnZXQpICsgJyknO1xufVxuXG52YXIgX1RZUEVfU1RBVElDUztcblxudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xuXG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgVFlQRV9TVEFUSUNTID0gKF9UWVBFX1NUQVRJQ1MgPSB7fSwgX1RZUEVfU1RBVElDU1tGb3J3YXJkUmVmXSA9IHtcbiAgJCR0eXBlb2Y6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZVxufSwgX1RZUEVfU1RBVElDUyk7XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSQxID0gT2JqZWN0LmRlZmluZVByb3BlcnR5LFxuICAgIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxcbiAgICBfT2JqZWN0JGdldE93blByb3BlcnQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLFxuICAgIGdldE93blByb3BlcnR5U3ltYm9scyA9IF9PYmplY3QkZ2V0T3duUHJvcGVydCA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gW107XG59IDogX09iamVjdCRnZXRPd25Qcm9wZXJ0LFxuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gICAgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YsXG4gICAgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbnZhciBhcnJheVByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZTtcblxuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gYXJyYXlQcm90b3R5cGUuY29uY2F0KGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KSxcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBUWVBFX1NUQVRJQ1NbdGFyZ2V0Q29tcG9uZW50LiQkdHlwZW9mXSB8fCBSRUFDVF9TVEFUSUNTO1xuXG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBUWVBFX1NUQVRJQ1Nbc291cmNlQ29tcG9uZW50LiQkdHlwZW9mXSB8fCBSRUFDVF9TVEFUSUNTO1xuXG4gICAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHZvaWQgMDtcbiAgICB2YXIga2V5ID0gdm9pZCAwO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBsdXNwbHVzXG4gICAgd2hpbGUgKGktLSkge1xuICAgICAga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKFxuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiZcbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIGlmIChkZXNjcmlwdG9yKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5JDEodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIC8qIGZhaWwgc2lsZW50bHkgKi9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxuLy8gXG5mdW5jdGlvbiBpc0Rlcml2ZWRSZWFjdENvbXBvbmVudChmbikge1xuICByZXR1cm4gISEoZm4gJiYgZm4ucHJvdG90eXBlICYmIGZuLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuLy8gXG4vLyBIZWxwZXIgdG8gY2FsbCBhIGdpdmVuIGZ1bmN0aW9uLCBvbmx5IG9uY2VcbnZhciBvbmNlID0gKGZ1bmN0aW9uIChjYikge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgY2FsbGVkID0gdHJ1ZTtcbiAgICAgIGNiLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH07XG59KTtcblxuLy8gXG5cbnZhciBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbnZhciBUaGVtZUNvbnN1bWVyID0gVGhlbWVDb250ZXh0LkNvbnN1bWVyO1xuXG4vKipcbiAqIFByb3ZpZGUgYSB0aGVtZSB0byBhbiBlbnRpcmUgcmVhY3QgY29tcG9uZW50IHRyZWUgdmlhIGNvbnRleHRcbiAqL1xuXG52YXIgVGhlbWVQcm92aWRlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIGluaGVyaXRzKFRoZW1lUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIocHJvcHMpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBUaGVtZVByb3ZpZGVyKTtcblxuICAgIHZhciBfdGhpcyA9IHBvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICBfdGhpcy5nZXRDb250ZXh0ID0gbWVtb2l6ZShfdGhpcy5nZXRDb250ZXh0LmJpbmQoX3RoaXMpKTtcbiAgICBfdGhpcy5yZW5kZXJJbm5lciA9IF90aGlzLnJlbmRlcklubmVyLmJpbmQoX3RoaXMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIFRoZW1lUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMucHJvcHMuY2hpbGRyZW4pIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnRleHQuQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5yZW5kZXJJbm5lclxuICAgICk7XG4gIH07XG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUucmVuZGVySW5uZXIgPSBmdW5jdGlvbiByZW5kZXJJbm5lcihvdXRlclRoZW1lKSB7XG4gICAgdmFyIGNvbnRleHQgPSB0aGlzLmdldENvbnRleHQodGhpcy5wcm9wcy50aGVtZSwgb3V0ZXJUaGVtZSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29udGV4dC5Qcm92aWRlcixcbiAgICAgIHsgdmFsdWU6IGNvbnRleHQgfSxcbiAgICAgIFJlYWN0LkNoaWxkcmVuLm9ubHkodGhpcy5wcm9wcy5jaGlsZHJlbilcbiAgICApO1xuICB9O1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHRoZW1lIGZyb20gdGhlIHByb3BzLCBzdXBwb3J0aW5nIGJvdGggKG91dGVyVGhlbWUpID0+IHt9XG4gICAqIGFzIHdlbGwgYXMgb2JqZWN0IG5vdGF0aW9uXG4gICAqL1xuXG5cbiAgVGhlbWVQcm92aWRlci5wcm90b3R5cGUuZ2V0VGhlbWUgPSBmdW5jdGlvbiBnZXRUaGVtZSh0aGVtZSwgb3V0ZXJUaGVtZSkge1xuICAgIGlmIChpc0Z1bmN0aW9uKHRoZW1lKSkge1xuICAgICAgdmFyIG1lcmdlZFRoZW1lID0gdGhlbWUob3V0ZXJUaGVtZSk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIChtZXJnZWRUaGVtZSA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KG1lcmdlZFRoZW1lKSB8fCAodHlwZW9mIG1lcmdlZFRoZW1lID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihtZXJnZWRUaGVtZSkpICE9PSAnb2JqZWN0JykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig3KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFRoZW1lO1xuICAgIH1cblxuICAgIGlmICh0aGVtZSA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KHRoZW1lKSB8fCAodHlwZW9mIHRoZW1lID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih0aGVtZSkpICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IFN0eWxlZENvbXBvbmVudHNFcnJvcig4KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIG91dGVyVGhlbWUsIHRoZW1lKTtcbiAgfTtcblxuICBUaGVtZVByb3ZpZGVyLnByb3RvdHlwZS5nZXRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q29udGV4dCh0aGVtZSwgb3V0ZXJUaGVtZSkge1xuICAgIHJldHVybiB0aGlzLmdldFRoZW1lKHRoZW1lLCBvdXRlclRoZW1lKTtcbiAgfTtcblxuICByZXR1cm4gVGhlbWVQcm92aWRlcjtcbn0oQ29tcG9uZW50KTtcblxuLy8gXG5cbnZhciBDTE9TSU5HX1RBR19SID0gL15cXHMqPFxcL1thLXpdL2k7XG5cbnZhciBTZXJ2ZXJTdHlsZVNoZWV0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTZXJ2ZXJTdHlsZVNoZWV0KCkge1xuICAgIGNsYXNzQ2FsbENoZWNrKHRoaXMsIFNlcnZlclN0eWxlU2hlZXQpO1xuXG4gICAgLyogVGhlIG1hc3RlciBzaGVldCBtaWdodCBiZSByZXNldCwgc28ga2VlcCBhIHJlZmVyZW5jZSBoZXJlICovXG4gICAgdGhpcy5tYXN0ZXJTaGVldCA9IFN0eWxlU2hlZXQubWFzdGVyO1xuICAgIHRoaXMuaW5zdGFuY2UgPSB0aGlzLm1hc3RlclNoZWV0LmNsb25lKCk7XG4gICAgdGhpcy5zZWFsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYXJrIHRoZSBTZXJ2ZXJTdHlsZVNoZWV0IGFzIGJlaW5nIGZ1bGx5IGVtaXR0ZWQgYW5kIG1hbnVhbGx5IEdDIGl0IGZyb20gdGhlXG4gICAqIFN0eWxlU2hlZXQgc2luZ2xldG9uLlxuICAgKi9cblxuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLnNlYWwgPSBmdW5jdGlvbiBzZWFsKCkge1xuICAgIGlmICghdGhpcy5zZWFsZWQpIHtcbiAgICAgIC8qIFJlbW92ZSBzZWFsZWQgU3R5bGVTaGVldHMgZnJvbSB0aGUgbWFzdGVyIHNoZWV0ICovXG4gICAgICB2YXIgaW5kZXggPSB0aGlzLm1hc3RlclNoZWV0LmNsb25lcy5pbmRleE9mKHRoaXMuaW5zdGFuY2UpO1xuICAgICAgdGhpcy5tYXN0ZXJTaGVldC5jbG9uZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuc2VhbGVkID0gdHJ1ZTtcbiAgICB9XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuY29sbGVjdFN0eWxlcyA9IGZ1bmN0aW9uIGNvbGxlY3RTdHlsZXMoY2hpbGRyZW4pIHtcbiAgICBpZiAodGhpcy5zZWFsZWQpIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoMik7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0TWFuYWdlcixcbiAgICAgIHsgc2hlZXQ6IHRoaXMuaW5zdGFuY2UgfSxcbiAgICAgIGNoaWxkcmVuXG4gICAgKTtcbiAgfTtcblxuICBTZXJ2ZXJTdHlsZVNoZWV0LnByb3RvdHlwZS5nZXRTdHlsZVRhZ3MgPSBmdW5jdGlvbiBnZXRTdHlsZVRhZ3MoKSB7XG4gICAgdGhpcy5zZWFsKCk7XG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2UudG9IVE1MKCk7XG4gIH07XG5cbiAgU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGUuZ2V0U3R5bGVFbGVtZW50ID0gZnVuY3Rpb24gZ2V0U3R5bGVFbGVtZW50KCkge1xuICAgIHRoaXMuc2VhbCgpO1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlLnRvUmVhY3RFbGVtZW50cygpO1xuICB9O1xuXG4gIFNlcnZlclN0eWxlU2hlZXQucHJvdG90eXBlLmludGVybGVhdmVXaXRoTm9kZVN0cmVhbSA9IGZ1bmN0aW9uIGludGVybGVhdmVXaXRoTm9kZVN0cmVhbShyZWFkYWJsZVN0cmVhbSkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB7XG4gICAgICB0aHJvdyBuZXcgU3R5bGVkQ29tcG9uZW50c0Vycm9yKDMpO1xuICAgIH1cblxuICAgIC8qIHRoZSB0YWcgaW5kZXgga2VlcHMgdHJhY2sgb2Ygd2hpY2ggdGFncyBoYXZlIGFscmVhZHkgYmVlbiBlbWl0dGVkICovXG4gICAgdmFyIGluc3RhbmNlID0gdGhpcy5pbnN0YW5jZTtcblxuICAgIHZhciBpbnN0YW5jZVRhZ0luZGV4ID0gMDtcblxuICAgIHZhciBzdHJlYW1BdHRyID0gU0NfU1RSRUFNX0FUVFIgKyAnPVwidHJ1ZVwiJztcblxuICAgIHZhciB0cmFuc2Zvcm1lciA9IG5ldyBzdHJlYW0uVHJhbnNmb3JtKHtcbiAgICAgIHRyYW5zZm9ybTogZnVuY3Rpb24gYXBwZW5kU3R5bGVDaHVua3MoY2h1bmssIC8qIGVuY29kaW5nICovXywgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHRhZ3MgPSBpbnN0YW5jZS50YWdzO1xuXG4gICAgICAgIHZhciBodG1sID0gJyc7XG5cbiAgICAgICAgLyogcmV0cmlldmUgaHRtbCBmb3IgZWFjaCBuZXcgc3R5bGUgdGFnICovXG4gICAgICAgIGZvciAoOyBpbnN0YW5jZVRhZ0luZGV4IDwgdGFncy5sZW5ndGg7IGluc3RhbmNlVGFnSW5kZXggKz0gMSkge1xuICAgICAgICAgIHZhciB0YWcgPSB0YWdzW2luc3RhbmNlVGFnSW5kZXhdO1xuICAgICAgICAgIGh0bWwgKz0gdGFnLnRvSFRNTChzdHJlYW1BdHRyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIGZvcmNlIG91ciBTdHlsZVNoZWV0cyB0byBlbWl0IGVudGlyZWx5IG5ldyB0YWdzICovXG4gICAgICAgIGluc3RhbmNlLnNlYWxBbGxUYWdzKCk7XG5cbiAgICAgICAgdmFyIHJlbmRlcmVkSHRtbCA9IGNodW5rLnRvU3RyaW5nKCk7XG5cbiAgICAgICAgLyogcHJlcGVuZCBzdHlsZSBodG1sIHRvIGNodW5rLCB1bmxlc3MgdGhlIHN0YXJ0IG9mIHRoZSBjaHVuayBpcyBhIGNsb3NpbmcgdGFnIGluIHdoaWNoIGNhc2UgYXBwZW5kIHJpZ2h0IGFmdGVyIHRoYXQgKi9cbiAgICAgICAgaWYgKENMT1NJTkdfVEFHX1IudGVzdChyZW5kZXJlZEh0bWwpKSB7XG4gICAgICAgICAgdmFyIGVuZE9mQ2xvc2luZ1RhZyA9IHJlbmRlcmVkSHRtbC5pbmRleE9mKCc+Jyk7XG5cbiAgICAgICAgICB0aGlzLnB1c2gocmVuZGVyZWRIdG1sLnNsaWNlKDAsIGVuZE9mQ2xvc2luZ1RhZyArIDEpICsgaHRtbCArIHJlbmRlcmVkSHRtbC5zbGljZShlbmRPZkNsb3NpbmdUYWcgKyAxKSk7XG4gICAgICAgIH0gZWxzZSB0aGlzLnB1c2goaHRtbCArIHJlbmRlcmVkSHRtbCk7XG5cbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJlYWRhYmxlU3RyZWFtLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuc2VhbCgpO1xuICAgIH0pO1xuXG4gICAgcmVhZGFibGVTdHJlYW0ub24oJ2Vycm9yJywgZnVuY3Rpb24gKGVycikge1xuICAgICAgX3RoaXMuc2VhbCgpO1xuXG4gICAgICAvLyBmb3J3YXJkIHRoZSBlcnJvciB0byB0aGUgdHJhbnNmb3JtIHN0cmVhbVxuICAgICAgdHJhbnNmb3JtZXIuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlYWRhYmxlU3RyZWFtLnBpcGUodHJhbnNmb3JtZXIpO1xuICB9O1xuXG4gIHJldHVybiBTZXJ2ZXJTdHlsZVNoZWV0O1xufSgpO1xuXG4vLyBcblxudmFyIFN0eWxlU2hlZXRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xudmFyIFN0eWxlU2hlZXRDb25zdW1lciA9IFN0eWxlU2hlZXRDb250ZXh0LkNvbnN1bWVyO1xuXG52YXIgU3R5bGVTaGVldE1hbmFnZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhTdHlsZVNoZWV0TWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3R5bGVTaGVldE1hbmFnZXIocHJvcHMpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZVNoZWV0TWFuYWdlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgX3RoaXMuZ2V0Q29udGV4dCA9IG1lbW9pemUoX3RoaXMuZ2V0Q29udGV4dCk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgU3R5bGVTaGVldE1hbmFnZXIucHJvdG90eXBlLmdldENvbnRleHQgPSBmdW5jdGlvbiBnZXRDb250ZXh0KHNoZWV0LCB0YXJnZXQpIHtcbiAgICBpZiAoc2hlZXQpIHtcbiAgICAgIHJldHVybiBzaGVldDtcbiAgICB9IGVsc2UgaWYgKHRhcmdldCkge1xuICAgICAgcmV0dXJuIG5ldyBTdHlsZVNoZWV0KHRhcmdldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBTdHlsZWRDb21wb25lbnRzRXJyb3IoNCk7XG4gICAgfVxuICB9O1xuXG4gIFN0eWxlU2hlZXRNYW5hZ2VyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBzaGVldCA9IF9wcm9wcy5zaGVldCxcbiAgICAgICAgdGFyZ2V0ID0gX3Byb3BzLnRhcmdldDtcblxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBTdHlsZVNoZWV0Q29udGV4dC5Qcm92aWRlcixcbiAgICAgIHsgdmFsdWU6IHRoaXMuZ2V0Q29udGV4dChzaGVldCwgdGFyZ2V0KSB9LFxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pIDogY2hpbGRyZW5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0TWFuYWdlcjtcbn0oQ29tcG9uZW50KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFN0eWxlU2hlZXRNYW5hZ2VyLnByb3BUeXBlcyA9IHtcbiAgc2hlZXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5pbnN0YW5jZU9mKFN0eWxlU2hlZXQpLCBQcm9wVHlwZXMuaW5zdGFuY2VPZihTZXJ2ZXJTdHlsZVNoZWV0KV0pLFxuXG4gIHRhcmdldDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBhcHBlbmRDaGlsZDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9KVxufSA6IHZvaWQgMDtcblxuLy8gXG5cbnZhciBpZGVudGlmaWVycyA9IHt9O1xuXG4vKiBXZSBkZXBlbmQgb24gY29tcG9uZW50cyBoYXZpbmcgdW5pcXVlIElEcyAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVJZChfQ29tcG9uZW50U3R5bGUsIF9kaXNwbGF5TmFtZSwgcGFyZW50Q29tcG9uZW50SWQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gdHlwZW9mIF9kaXNwbGF5TmFtZSAhPT0gJ3N0cmluZycgPyAnc2MnIDogZXNjYXBlKF9kaXNwbGF5TmFtZSk7XG5cbiAgLyoqXG4gICAqIFRoaXMgZW5zdXJlcyB1bmlxdWVuZXNzIGlmIHR3byBjb21wb25lbnRzIGhhcHBlbiB0byBzaGFyZVxuICAgKiB0aGUgc2FtZSBkaXNwbGF5TmFtZS5cbiAgICovXG4gIHZhciBuciA9IChpZGVudGlmaWVyc1tkaXNwbGF5TmFtZV0gfHwgMCkgKyAxO1xuICBpZGVudGlmaWVyc1tkaXNwbGF5TmFtZV0gPSBucjtcblxuICB2YXIgY29tcG9uZW50SWQgPSBkaXNwbGF5TmFtZSArICctJyArIF9Db21wb25lbnRTdHlsZS5nZW5lcmF0ZU5hbWUoZGlzcGxheU5hbWUgKyBucik7XG5cbiAgcmV0dXJuIHBhcmVudENvbXBvbmVudElkID8gcGFyZW50Q29tcG9uZW50SWQgKyAnLScgKyBjb21wb25lbnRJZCA6IGNvbXBvbmVudElkO1xufVxuXG4vLyAkRmxvd0ZpeE1lXG5cbnZhciBTdHlsZWRDb21wb25lbnQgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBpbmhlcml0cyhTdHlsZWRDb21wb25lbnQsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0eWxlZENvbXBvbmVudCgpIHtcbiAgICBjbGFzc0NhbGxDaGVjayh0aGlzLCBTdHlsZWRDb21wb25lbnQpO1xuXG4gICAgdmFyIF90aGlzID0gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuYXR0cnMgPSB7fTtcblxuICAgIF90aGlzLnJlbmRlck91dGVyID0gX3RoaXMucmVuZGVyT3V0ZXIuYmluZChfdGhpcyk7XG4gICAgX3RoaXMucmVuZGVySW5uZXIgPSBfdGhpcy5yZW5kZXJJbm5lci5iaW5kKF90aGlzKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBfdGhpcy53YXJuSW5uZXJSZWYgPSBvbmNlKGZ1bmN0aW9uIChkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdUaGUgXCJpbm5lclJlZlwiIEFQSSBoYXMgYmVlbiByZW1vdmVkIGluIHN0eWxlZC1jb21wb25lbnRzIHY0IGluIGZhdm9yIG9mIFJlYWN0IDE2IHJlZiBmb3J3YXJkaW5nLCB1c2UgXCJyZWZcIiBpbnN0ZWFkIGxpa2UgYSB0eXBpY2FsIGNvbXBvbmVudC4gXCJpbm5lclJlZlwiIHdhcyBkZXRlY3RlZCBvbiBjb21wb25lbnQgXCInICsgZGlzcGxheU5hbWUgKyAnXCIuJylcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy53YXJuQXR0cnNGbk9iamVjdEtleURlcHJlY2F0ZWQgPSBvbmNlKGZ1bmN0aW9uIChrZXksIGRpc3BsYXlOYW1lKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ0Z1bmN0aW9ucyBhcyBvYmplY3QtZm9ybSBhdHRycyh7fSkga2V5cyBhcmUgbm93IGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSB2ZXJzaW9uIG9mIHN0eWxlZC1jb21wb25lbnRzLiBTd2l0Y2ggdG8gdGhlIG5ldyBhdHRycyhwcm9wcyA9PiAoe30pKSBzeW50YXggaW5zdGVhZCBmb3IgZWFzaWVyIGFuZCBtb3JlIHBvd2VyZnVsIGNvbXBvc2l0aW9uLiBUaGUgYXR0cnMga2V5IGluIHF1ZXN0aW9uIGlzIFwiJyArIGtleSArICdcIiBvbiBjb21wb25lbnQgXCInICsgZGlzcGxheU5hbWUgKyAnXCIuJywgJ1xcbiAnICsgbmV3IEVycm9yKCkuc3RhY2spXG4gICAgICAgICk7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5ID0gb25jZShmdW5jdGlvbiAoa2V5LCBkaXNwbGF5TmFtZSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdJdCBsb29rcyBsaWtlIHlvdVxcJ3ZlIHVzZWQgYSBub24gc3R5bGVkLWNvbXBvbmVudCBhcyB0aGUgdmFsdWUgZm9yIHRoZSBcIicgKyBrZXkgKyAnXCIgcHJvcCBpbiBhbiBvYmplY3QtZm9ybSBhdHRycyBjb25zdHJ1Y3RvciBvZiBcIicgKyBkaXNwbGF5TmFtZSArICdcIi5cXG4nICsgJ1lvdSBzaG91bGQgdXNlIHRoZSBuZXcgZnVuY3Rpb24tZm9ybSBhdHRycyBjb25zdHJ1Y3RvciB3aGljaCBhdm9pZHMgdGhpcyBpc3N1ZTogYXR0cnMocHJvcHMgPT4gKHsgeW91clN0dWZmIH0pKVxcbicgKyBcIlRvIGNvbnRpbnVlIHVzaW5nIHRoZSBkZXByZWNhdGVkIG9iamVjdCBzeW50YXgsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBjb21wb25lbnQgcHJvcCBpbiBhIGZ1bmN0aW9uIHRvIG1ha2UgaXQgYXZhaWxhYmxlIGluc2lkZSB0aGUgc3R5bGVkIGNvbXBvbmVudCAoeW91J2xsIHN0aWxsIGdldCB0aGUgZGVwcmVjYXRpb24gd2FybmluZyB0aG91Z2guKVxcblwiICsgKCdGb3IgZXhhbXBsZSwgeyAnICsga2V5ICsgJzogKCkgPT4gSW5uZXJDb21wb25lbnQgfSBpbnN0ZWFkIG9mIHsgJyArIGtleSArICc6IElubmVyQ29tcG9uZW50IH0nKSlcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFN0eWxlU2hlZXRDb25zdW1lcixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLnJlbmRlck91dGVyXG4gICAgKTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLnJlbmRlck91dGVyID0gZnVuY3Rpb24gcmVuZGVyT3V0ZXIoKSB7XG4gICAgdmFyIHN0eWxlU2hlZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFN0eWxlU2hlZXQubWFzdGVyO1xuXG4gICAgdGhpcy5zdHlsZVNoZWV0ID0gc3R5bGVTaGVldDtcblxuICAgIC8vIE5vIG5lZWQgdG8gc3Vic2NyaWJlIGEgc3RhdGljIGNvbXBvbmVudCB0byB0aGVtZSBjaGFuZ2VzLCBpdCB3b24ndCBjaGFuZ2UgYW55dGhpbmdcbiAgICBpZiAodGhpcy5wcm9wcy5mb3J3YXJkZWRDb21wb25lbnQuY29tcG9uZW50U3R5bGUuaXNTdGF0aWMpIHJldHVybiB0aGlzLnJlbmRlcklubmVyKCk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIFRoZW1lQ29uc3VtZXIsXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5yZW5kZXJJbm5lclxuICAgICk7XG4gIH07XG5cbiAgU3R5bGVkQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXJJbm5lciA9IGZ1bmN0aW9uIHJlbmRlcklubmVyKHRoZW1lKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbyA9IHRoaXMucHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LFxuICAgICAgICBjb21wb25lbnRTdHlsZSA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5jb21wb25lbnRTdHlsZSxcbiAgICAgICAgZGVmYXVsdFByb3BzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLmRlZmF1bHRQcm9wcyxcbiAgICAgICAgZGlzcGxheU5hbWUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8uZGlzcGxheU5hbWUsXG4gICAgICAgIGZvbGRlZENvbXBvbmVudElkcyA9IF9wcm9wcyRmb3J3YXJkZWRDb21wby5mb2xkZWRDb21wb25lbnRJZHMsXG4gICAgICAgIHN0eWxlZENvbXBvbmVudElkID0gX3Byb3BzJGZvcndhcmRlZENvbXBvLnN0eWxlZENvbXBvbmVudElkLFxuICAgICAgICB0YXJnZXQgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8udGFyZ2V0O1xuXG5cbiAgICB2YXIgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdm9pZCAwO1xuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYykge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3NOYW1lID0gdGhpcy5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhFTVBUWV9PQkpFQ1QsIHRoaXMucHJvcHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBnZW5lcmF0ZWRDbGFzc05hbWUgPSB0aGlzLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGRldGVybWluZVRoZW1lKHRoaXMucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpIHx8IEVNUFRZX09CSkVDVCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnRUb0JlQ3JlYXRlZCA9IHRoaXMucHJvcHMuYXMgfHwgdGhpcy5hdHRycy5hcyB8fCB0YXJnZXQ7XG4gICAgdmFyIGlzVGFyZ2V0VGFnID0gaXNUYWcoZWxlbWVudFRvQmVDcmVhdGVkKTtcblxuICAgIHZhciBwcm9wc0ZvckVsZW1lbnQgPSB7fTtcbiAgICB2YXIgY29tcHV0ZWRQcm9wcyA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLCB0aGlzLnByb3BzKTtcblxuICAgIHZhciBrZXkgPSB2b2lkIDA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuICAgIGZvciAoa2V5IGluIGNvbXB1dGVkUHJvcHMpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGtleSA9PT0gJ2lubmVyUmVmJyAmJiBpc1RhcmdldFRhZykge1xuICAgICAgICB0aGlzLndhcm5Jbm5lclJlZihkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChrZXkgPT09ICdmb3J3YXJkZWRDb21wb25lbnQnIHx8IGtleSA9PT0gJ2FzJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZm9yd2FyZGVkUmVmJykgcHJvcHNGb3JFbGVtZW50LnJlZiA9IGNvbXB1dGVkUHJvcHNba2V5XTtlbHNlIGlmIChrZXkgPT09ICdmb3J3YXJkZWRBcycpIHByb3BzRm9yRWxlbWVudC5hcyA9IGNvbXB1dGVkUHJvcHNba2V5XTtlbHNlIGlmICghaXNUYXJnZXRUYWcgfHwgdmFsaWRBdHRyKGtleSkpIHtcbiAgICAgICAgLy8gRG9uJ3QgcGFzcyB0aHJvdWdoIG5vbiBIVE1MIHRhZ3MgdGhyb3VnaCB0byBIVE1MIGVsZW1lbnRzXG4gICAgICAgIHByb3BzRm9yRWxlbWVudFtrZXldID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLnN0eWxlICYmIHRoaXMuYXR0cnMuc3R5bGUpIHtcbiAgICAgIHByb3BzRm9yRWxlbWVudC5zdHlsZSA9IF9leHRlbmRzKHt9LCB0aGlzLmF0dHJzLnN0eWxlLCB0aGlzLnByb3BzLnN0eWxlKTtcbiAgICB9XG5cbiAgICBwcm9wc0ZvckVsZW1lbnQuY2xhc3NOYW1lID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdChmb2xkZWRDb21wb25lbnRJZHMsIHRoaXMucHJvcHMuY2xhc3NOYW1lLCBzdHlsZWRDb21wb25lbnRJZCwgdGhpcy5hdHRycy5jbGFzc05hbWUsIGdlbmVyYXRlZENsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcblxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUb0JlQ3JlYXRlZCwgcHJvcHNGb3JFbGVtZW50KTtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCA9IGZ1bmN0aW9uIGJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWUgfSk7XG5cbiAgICBpZiAoIWF0dHJzLmxlbmd0aCkgcmV0dXJuIGNvbnRleHQ7XG5cbiAgICB0aGlzLmF0dHJzID0ge307XG5cbiAgICBhdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyRGVmKSB7XG4gICAgICB2YXIgcmVzb2x2ZWRBdHRyRGVmID0gYXR0ckRlZjtcbiAgICAgIHZhciBhdHRyRGVmV2FzRm4gPSBmYWxzZTtcbiAgICAgIHZhciBhdHRyID0gdm9pZCAwO1xuICAgICAgdmFyIGtleSA9IHZvaWQgMDtcblxuICAgICAgaWYgKGlzRnVuY3Rpb24ocmVzb2x2ZWRBdHRyRGVmKSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHJlc29sdmVkQXR0ckRlZiA9IHJlc29sdmVkQXR0ckRlZihjb250ZXh0KTtcbiAgICAgICAgYXR0ckRlZldhc0ZuID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICBmb3IgKGtleSBpbiByZXNvbHZlZEF0dHJEZWYpIHtcbiAgICAgICAgYXR0ciA9IHJlc29sdmVkQXR0ckRlZltrZXldO1xuXG4gICAgICAgIGlmICghYXR0ckRlZldhc0ZuKSB7XG4gICAgICAgICAgaWYgKGlzRnVuY3Rpb24oYXR0cikgJiYgIWlzRGVyaXZlZFJlYWN0Q29tcG9uZW50KGF0dHIpICYmICFpc1N0eWxlZENvbXBvbmVudChhdHRyKSkge1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLndhcm5BdHRyc0ZuT2JqZWN0S2V5RGVwcmVjYXRlZChrZXksIHByb3BzLmZvcndhcmRlZENvbXBvbmVudC5kaXNwbGF5TmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF0dHIgPSBhdHRyKGNvbnRleHQpO1xuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChhdHRyKSkge1xuICAgICAgICAgICAgICBfdGhpczIud2Fybk5vblN0eWxlZENvbXBvbmVudEF0dHJzT2JqZWN0S2V5KGtleSwgcHJvcHMuZm9yd2FyZGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpczIuYXR0cnNba2V5XSA9IGF0dHI7XG4gICAgICAgIGNvbnRleHRba2V5XSA9IGF0dHI7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29udGV4dDtcbiAgfTtcblxuICBTdHlsZWRDb21wb25lbnQucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzID0gZnVuY3Rpb24gZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXModGhlbWUsIHByb3BzKSB7XG4gICAgdmFyIF9wcm9wcyRmb3J3YXJkZWRDb21wbzIgPSBwcm9wcy5mb3J3YXJkZWRDb21wb25lbnQsXG4gICAgICAgIGF0dHJzID0gX3Byb3BzJGZvcndhcmRlZENvbXBvMi5hdHRycyxcbiAgICAgICAgY29tcG9uZW50U3R5bGUgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLmNvbXBvbmVudFN0eWxlLFxuICAgICAgICB3YXJuVG9vTWFueUNsYXNzZXMgPSBfcHJvcHMkZm9yd2FyZGVkQ29tcG8yLndhcm5Ub29NYW55Q2xhc3NlcztcblxuICAgIC8vIHN0YXRpY2FsbHkgc3R5bGVkLWNvbXBvbmVudHMgZG9uJ3QgbmVlZCB0byBidWlsZCBhbiBleGVjdXRpb24gY29udGV4dCBvYmplY3QsXG4gICAgLy8gYW5kIHNob3VsZG4ndCBiZSBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgY2xhc3MgbmFtZXNcblxuICAgIGlmIChjb21wb25lbnRTdHlsZS5pc1N0YXRpYyAmJiAhYXR0cnMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gY29tcG9uZW50U3R5bGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRU1QVFlfT0JKRUNULCB0aGlzLnN0eWxlU2hlZXQpO1xuICAgIH1cblxuICAgIHZhciBjbGFzc05hbWUgPSBjb21wb25lbnRTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyh0aGlzLmJ1aWxkRXhlY3V0aW9uQ29udGV4dCh0aGVtZSwgcHJvcHMsIGF0dHJzKSwgdGhpcy5zdHlsZVNoZWV0KTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm5Ub29NYW55Q2xhc3Nlcykgd2FyblRvb01hbnlDbGFzc2VzKGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZWRDb21wb25lbnQ7XG59KENvbXBvbmVudCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YXJnZXQsIG9wdGlvbnMsIHJ1bGVzKSB7XG4gIHZhciBpc1RhcmdldFN0eWxlZENvbXAgPSBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpO1xuICB2YXIgaXNDbGFzcyA9ICFpc1RhZyh0YXJnZXQpO1xuXG4gIHZhciBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgICBkaXNwbGF5TmFtZSA9IF9vcHRpb25zJGRpc3BsYXlOYW1lID09PSB1bmRlZmluZWQgPyBnZW5lcmF0ZURpc3BsYXlOYW1lKHRhcmdldCkgOiBfb3B0aW9ucyRkaXNwbGF5TmFtZSxcbiAgICAgIF9vcHRpb25zJGNvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgIGNvbXBvbmVudElkID0gX29wdGlvbnMkY29tcG9uZW50SWQgPT09IHVuZGVmaW5lZCA/IGdlbmVyYXRlSWQoQ29tcG9uZW50U3R5bGUsIG9wdGlvbnMuZGlzcGxheU5hbWUsIG9wdGlvbnMucGFyZW50Q29tcG9uZW50SWQpIDogX29wdGlvbnMkY29tcG9uZW50SWQsXG4gICAgICBfb3B0aW9ucyRQYXJlbnRDb21wb24gPSBvcHRpb25zLlBhcmVudENvbXBvbmVudCxcbiAgICAgIFBhcmVudENvbXBvbmVudCA9IF9vcHRpb25zJFBhcmVudENvbXBvbiA9PT0gdW5kZWZpbmVkID8gU3R5bGVkQ29tcG9uZW50IDogX29wdGlvbnMkUGFyZW50Q29tcG9uLFxuICAgICAgX29wdGlvbnMkYXR0cnMgPSBvcHRpb25zLmF0dHJzLFxuICAgICAgYXR0cnMgPSBfb3B0aW9ucyRhdHRycyA9PT0gdW5kZWZpbmVkID8gRU1QVFlfQVJSQVkgOiBfb3B0aW9ucyRhdHRycztcblxuXG4gIHZhciBzdHlsZWRDb21wb25lbnRJZCA9IG9wdGlvbnMuZGlzcGxheU5hbWUgJiYgb3B0aW9ucy5jb21wb25lbnRJZCA/IGVzY2FwZShvcHRpb25zLmRpc3BsYXlOYW1lKSArICctJyArIG9wdGlvbnMuY29tcG9uZW50SWQgOiBvcHRpb25zLmNvbXBvbmVudElkIHx8IGNvbXBvbmVudElkO1xuXG4gIC8vIGZvbGQgdGhlIHVuZGVybHlpbmcgU3R5bGVkQ29tcG9uZW50IGF0dHJzIHVwIChpbXBsaWNpdCBleHRlbmQpXG4gIHZhciBmaW5hbEF0dHJzID1cbiAgLy8gJEZsb3dGaXhNZVxuICBpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LmF0dHJzID8gQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbikgOiBhdHRycztcblxuICB2YXIgY29tcG9uZW50U3R5bGUgPSBuZXcgQ29tcG9uZW50U3R5bGUoaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgcnVsZXMgdXAgKGltcGxpY2l0IGV4dGVuZClcbiAgLy8gJEZsb3dGaXhNZVxuICB0YXJnZXQuY29tcG9uZW50U3R5bGUucnVsZXMuY29uY2F0KHJ1bGVzKSA6IHJ1bGVzLCBmaW5hbEF0dHJzLCBzdHlsZWRDb21wb25lbnRJZCk7XG5cbiAgLyoqXG4gICAqIGZvcndhcmRSZWYgY3JlYXRlcyBhIG5ldyBpbnRlcmltIGNvbXBvbmVudCwgd2hpY2ggd2UnbGwgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAgICogaW5zdGVhZCBvZiBleHRlbmRpbmcgUGFyZW50Q29tcG9uZW50IHRvIGNyZWF0ZSBfYW5vdGhlcl8gaW50ZXJpbSBjbGFzc1xuICAgKi9cbiAgdmFyIFdyYXBwZWRTdHlsZWRDb21wb25lbnQgPSB2b2lkIDA7XG4gIHZhciBmb3J3YXJkUmVmID0gZnVuY3Rpb24gZm9yd2FyZFJlZihwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFyZW50Q29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgZm9yd2FyZGVkQ29tcG9uZW50OiBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCBmb3J3YXJkZWRSZWY6IHJlZiB9KSk7XG4gIH07XG4gIGZvcndhcmRSZWYuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudCA9IFJlYWN0LmZvcndhcmRSZWYoZm9yd2FyZFJlZik7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuYXR0cnMgPSBmaW5hbEF0dHJzO1xuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuY29tcG9uZW50U3R5bGUgPSBjb21wb25lbnRTdHlsZTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZm9sZGVkQ29tcG9uZW50SWRzID0gaXNUYXJnZXRTdHlsZWRDb21wID8gLy8gJEZsb3dGaXhNZVxuICBBcnJheS5wcm90b3R5cGUuY29uY2F0KHRhcmdldC5mb2xkZWRDb21wb25lbnRJZHMsIHRhcmdldC5zdHlsZWRDb21wb25lbnRJZCkgOiBFTVBUWV9BUlJBWTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQgPSBzdHlsZWRDb21wb25lbnRJZDtcblxuICAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCB0YXJnZXQgdXAgc2luY2Ugd2UgZm9sZGVkIHRoZSBzdHlsZXNcbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRhcmdldCA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IHRhcmdldC50YXJnZXQgOiB0YXJnZXQ7XG5cbiAgLy8gJEZsb3dGaXhNZVxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LndpdGhDb21wb25lbnQgPSBmdW5jdGlvbiB3aXRoQ29tcG9uZW50KHRhZykge1xuICAgIHZhciBwcmV2aW91c0NvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgICAgb3B0aW9uc1RvQ29weSA9IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9wdGlvbnMsIFsnY29tcG9uZW50SWQnXSk7XG5cblxuICAgIHZhciBuZXdDb21wb25lbnRJZCA9IHByZXZpb3VzQ29tcG9uZW50SWQgJiYgcHJldmlvdXNDb21wb25lbnRJZCArICctJyArIChpc1RhZyh0YWcpID8gdGFnIDogZXNjYXBlKGdldENvbXBvbmVudE5hbWUodGFnKSkpO1xuXG4gICAgdmFyIG5ld09wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgb3B0aW9uc1RvQ29weSwge1xuICAgICAgYXR0cnM6IGZpbmFsQXR0cnMsXG4gICAgICBjb21wb25lbnRJZDogbmV3Q29tcG9uZW50SWQsXG4gICAgICBQYXJlbnRDb21wb25lbnQ6IFBhcmVudENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YWcsIG5ld09wdGlvbnMsIHJ1bGVzKTtcbiAgfTtcblxuICAvLyAkRmxvd0ZpeE1lXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCAnZGVmYXVsdFByb3BzJywge1xuICAgIGdldDogZnVuY3Rpb24gZ2V0JCQxKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ZvbGRlZERlZmF1bHRQcm9wcztcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0JCQxKG9iaikge1xuICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgdGhpcy5fZm9sZGVkRGVmYXVsdFByb3BzID0gaXNUYXJnZXRTdHlsZWRDb21wID8gbWVyZ2UodGFyZ2V0LmRlZmF1bHRQcm9wcywgb2JqKSA6IG9iajtcbiAgICB9XG4gIH0pO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIFdyYXBwZWRTdHlsZWRDb21wb25lbnQud2FyblRvb01hbnlDbGFzc2VzID0gY3JlYXRlV2FyblRvb01hbnlDbGFzc2VzKGRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIC8vICRGbG93Rml4TWVcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJy4nICsgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZDtcbiAgfTtcblxuICBpZiAoaXNDbGFzcykge1xuICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFdyYXBwZWRTdHlsZWRDb21wb25lbnQsIHRhcmdldCwge1xuICAgICAgLy8gYWxsIFNDLXNwZWNpZmljIHRoaW5ncyBzaG91bGQgbm90IGJlIGhvaXN0ZWRcbiAgICAgIGF0dHJzOiB0cnVlLFxuICAgICAgY29tcG9uZW50U3R5bGU6IHRydWUsXG4gICAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICAgIGZvbGRlZENvbXBvbmVudElkczogdHJ1ZSxcbiAgICAgIHN0eWxlZENvbXBvbmVudElkOiB0cnVlLFxuICAgICAgdGFyZ2V0OiB0cnVlLFxuICAgICAgd2l0aENvbXBvbmVudDogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIFdyYXBwZWRTdHlsZWRDb21wb25lbnQ7XG59XG5cbi8vIFxuLy8gVGhhbmtzIHRvIFJlYWN0RE9NRmFjdG9yaWVzIGZvciB0aGlzIGhhbmR5IGxpc3QhXG5cbnZhciBkb21FbGVtZW50cyA9IFsnYScsICdhYmJyJywgJ2FkZHJlc3MnLCAnYXJlYScsICdhcnRpY2xlJywgJ2FzaWRlJywgJ2F1ZGlvJywgJ2InLCAnYmFzZScsICdiZGknLCAnYmRvJywgJ2JpZycsICdibG9ja3F1b3RlJywgJ2JvZHknLCAnYnInLCAnYnV0dG9uJywgJ2NhbnZhcycsICdjYXB0aW9uJywgJ2NpdGUnLCAnY29kZScsICdjb2wnLCAnY29sZ3JvdXAnLCAnZGF0YScsICdkYXRhbGlzdCcsICdkZCcsICdkZWwnLCAnZGV0YWlscycsICdkZm4nLCAnZGlhbG9nJywgJ2RpdicsICdkbCcsICdkdCcsICdlbScsICdlbWJlZCcsICdmaWVsZHNldCcsICdmaWdjYXB0aW9uJywgJ2ZpZ3VyZScsICdmb290ZXInLCAnZm9ybScsICdoMScsICdoMicsICdoMycsICdoNCcsICdoNScsICdoNicsICdoZWFkJywgJ2hlYWRlcicsICdoZ3JvdXAnLCAnaHInLCAnaHRtbCcsICdpJywgJ2lmcmFtZScsICdpbWcnLCAnaW5wdXQnLCAnaW5zJywgJ2tiZCcsICdrZXlnZW4nLCAnbGFiZWwnLCAnbGVnZW5kJywgJ2xpJywgJ2xpbmsnLCAnbWFpbicsICdtYXAnLCAnbWFyaycsICdtYXJxdWVlJywgJ21lbnUnLCAnbWVudWl0ZW0nLCAnbWV0YScsICdtZXRlcicsICduYXYnLCAnbm9zY3JpcHQnLCAnb2JqZWN0JywgJ29sJywgJ29wdGdyb3VwJywgJ29wdGlvbicsICdvdXRwdXQnLCAncCcsICdwYXJhbScsICdwaWN0dXJlJywgJ3ByZScsICdwcm9ncmVzcycsICdxJywgJ3JwJywgJ3J0JywgJ3J1YnknLCAncycsICdzYW1wJywgJ3NjcmlwdCcsICdzZWN0aW9uJywgJ3NlbGVjdCcsICdzbWFsbCcsICdzb3VyY2UnLCAnc3BhbicsICdzdHJvbmcnLCAnc3R5bGUnLCAnc3ViJywgJ3N1bW1hcnknLCAnc3VwJywgJ3RhYmxlJywgJ3Rib2R5JywgJ3RkJywgJ3RleHRhcmVhJywgJ3Rmb290JywgJ3RoJywgJ3RoZWFkJywgJ3RpbWUnLCAndGl0bGUnLCAndHInLCAndHJhY2snLCAndScsICd1bCcsICd2YXInLCAndmlkZW8nLCAnd2JyJyxcblxuLy8gU1ZHXG4nY2lyY2xlJywgJ2NsaXBQYXRoJywgJ2RlZnMnLCAnZWxsaXBzZScsICdmb3JlaWduT2JqZWN0JywgJ2cnLCAnaW1hZ2UnLCAnbGluZScsICdsaW5lYXJHcmFkaWVudCcsICdtYXJrZXInLCAnbWFzaycsICdwYXRoJywgJ3BhdHRlcm4nLCAncG9seWdvbicsICdwb2x5bGluZScsICdyYWRpYWxHcmFkaWVudCcsICdyZWN0JywgJ3N0b3AnLCAnc3ZnJywgJ3RleHQnLCAndHNwYW4nXTtcblxuLy8gXG5cbnZhciBzdHlsZWQgPSBmdW5jdGlvbiBzdHlsZWQodGFnKSB7XG4gIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjcmVhdGVTdHlsZWRDb21wb25lbnQsIHRhZyk7XG59O1xuXG4vLyBTaG9ydGhhbmRzIGZvciBhbGwgdmFsaWQgSFRNTCBFbGVtZW50c1xuZG9tRWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbiAoZG9tRWxlbWVudCkge1xuICBzdHlsZWRbZG9tRWxlbWVudF0gPSBzdHlsZWQoZG9tRWxlbWVudCk7XG59KTtcblxuLy8gXG5cbnZhciBHbG9iYWxTdHlsZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gR2xvYmFsU3R5bGUocnVsZXMsIGNvbXBvbmVudElkKSB7XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgR2xvYmFsU3R5bGUpO1xuXG4gICAgdGhpcy5ydWxlcyA9IHJ1bGVzO1xuICAgIHRoaXMuY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcbiAgICB0aGlzLmlzU3RhdGljID0gaXNTdGF0aWNSdWxlcyhydWxlcywgRU1QVFlfQVJSQVkpO1xuXG4gICAgaWYgKCFTdHlsZVNoZWV0Lm1hc3Rlci5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIFN0eWxlU2hlZXQubWFzdGVyLmRlZmVycmVkSW5qZWN0KGNvbXBvbmVudElkLCBbXSk7XG4gICAgfVxuICB9XG5cbiAgR2xvYmFsU3R5bGUucHJvdG90eXBlLmNyZWF0ZVN0eWxlcyA9IGZ1bmN0aW9uIGNyZWF0ZVN0eWxlcyhleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KSB7XG4gICAgdmFyIGZsYXRDU1MgPSBmbGF0dGVuKHRoaXMucnVsZXMsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIHZhciBjc3MgPSBzdHJpbmdpZnlSdWxlcyhmbGF0Q1NTLCAnJyk7XG5cbiAgICBzdHlsZVNoZWV0LmluamVjdCh0aGlzLmNvbXBvbmVudElkLCBjc3MpO1xuICB9O1xuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5yZW1vdmVTdHlsZXMgPSBmdW5jdGlvbiByZW1vdmVTdHlsZXMoc3R5bGVTaGVldCkge1xuICAgIHZhciBjb21wb25lbnRJZCA9IHRoaXMuY29tcG9uZW50SWQ7XG5cbiAgICBpZiAoc3R5bGVTaGVldC5oYXNJZChjb21wb25lbnRJZCkpIHtcbiAgICAgIHN0eWxlU2hlZXQucmVtb3ZlKGNvbXBvbmVudElkKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gVE9ETzogb3ZlcndyaXRlIGluLXBsYWNlIGluc3RlYWQgb2YgcmVtb3ZlK2NyZWF0ZT9cblxuXG4gIEdsb2JhbFN0eWxlLnByb3RvdHlwZS5yZW5kZXJTdHlsZXMgPSBmdW5jdGlvbiByZW5kZXJTdHlsZXMoZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCkge1xuICAgIHRoaXMucmVtb3ZlU3R5bGVzKHN0eWxlU2hlZXQpO1xuICAgIHRoaXMuY3JlYXRlU3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICB9O1xuXG4gIHJldHVybiBHbG9iYWxTdHlsZTtcbn0oKTtcblxuLy8gXG5cbi8vIHBsYWNlIG91ciBjYWNoZSBpbnRvIHNoYXJlZCBjb250ZXh0IHNvIGl0J2xsIHBlcnNpc3QgYmV0d2VlbiBITVJzXG5pZiAoSVNfQlJPV1NFUikge1xuICB3aW5kb3cuc2NDR1NITVJDYWNoZSA9IHt9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVHbG9iYWxTdHlsZShzdHJpbmdzKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgcnVsZXMgPSBjc3MuYXBwbHkodW5kZWZpbmVkLCBbc3RyaW5nc10uY29uY2F0KGludGVycG9sYXRpb25zKSk7XG4gIHZhciBpZCA9ICdzYy1nbG9iYWwtJyArIG11cm11cmhhc2goSlNPTi5zdHJpbmdpZnkocnVsZXMpKTtcbiAgdmFyIHN0eWxlID0gbmV3IEdsb2JhbFN0eWxlKHJ1bGVzLCBpZCk7XG5cbiAgdmFyIEdsb2JhbFN0eWxlQ29tcG9uZW50ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgICBpbmhlcml0cyhHbG9iYWxTdHlsZUNvbXBvbmVudCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBHbG9iYWxTdHlsZUNvbXBvbmVudChwcm9wcykge1xuICAgICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgR2xvYmFsU3R5bGVDb21wb25lbnQpO1xuXG4gICAgICB2YXIgX3RoaXMgPSBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykpO1xuXG4gICAgICB2YXIgX3RoaXMkY29uc3RydWN0b3IgPSBfdGhpcy5jb25zdHJ1Y3RvcixcbiAgICAgICAgICBnbG9iYWxTdHlsZSA9IF90aGlzJGNvbnN0cnVjdG9yLmdsb2JhbFN0eWxlLFxuICAgICAgICAgIHN0eWxlZENvbXBvbmVudElkID0gX3RoaXMkY29uc3RydWN0b3Iuc3R5bGVkQ29tcG9uZW50SWQ7XG5cblxuICAgICAgaWYgKElTX0JST1dTRVIpIHtcbiAgICAgICAgd2luZG93LnNjQ0dTSE1SQ2FjaGVbc3R5bGVkQ29tcG9uZW50SWRdID0gKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3N0eWxlZENvbXBvbmVudElkXSB8fCAwKSArIDE7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVGhpcyBmaXhlcyBITVIgY29tcGF0aWJpbGl0eS4gRG9uJ3QgYXNrIG1lIHdoeSwgYnV0IHRoaXMgY29tYmluYXRpb24gb2ZcbiAgICAgICAqIGNhY2hpbmcgdGhlIGNsb3N1cmUgdmFyaWFibGVzIHZpYSBzdGF0aWNzIGFuZCB0aGVuIHBlcnNpc3RpbmcgdGhlIHN0YXRpY3MgaW5cbiAgICAgICAqIHN0YXRlIHdvcmtzIGFjcm9zcyBITVIgd2hlcmUgbm8gb3RoZXIgY29tYmluYXRpb24gZGlkLiDCr1xcXyjjg4QpXy/Cr1xuICAgICAgICovXG4gICAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgZ2xvYmFsU3R5bGU6IGdsb2JhbFN0eWxlLFxuICAgICAgICBzdHlsZWRDb21wb25lbnRJZDogc3R5bGVkQ29tcG9uZW50SWRcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgR2xvYmFsU3R5bGVDb21wb25lbnQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAod2luZG93LnNjQ0dTSE1SQ2FjaGVbdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZF0pIHtcbiAgICAgICAgd2luZG93LnNjQ0dTSE1SQ2FjaGVbdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZF0gLT0gMTtcbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogRGVwZW5kaW5nIG9uIHRoZSBvcmRlciBcInJlbmRlclwiIGlzIGNhbGxlZCB0aGlzIGNhbiBjYXVzZSB0aGUgc3R5bGVzIHRvIGJlIGxvc3RcbiAgICAgICAqIHVudGlsIHRoZSBuZXh0IHJlbmRlciBwYXNzIG9mIHRoZSByZW1haW5pbmcgaW5zdGFuY2UsIHdoaWNoIG1heVxuICAgICAgICogbm90IGJlIGltbWVkaWF0ZS5cbiAgICAgICAqL1xuICAgICAgaWYgKHdpbmRvdy5zY0NHU0hNUkNhY2hlW3RoaXMuc3RhdGUuc3R5bGVkQ29tcG9uZW50SWRdID09PSAwKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuZ2xvYmFsU3R5bGUucmVtb3ZlU3R5bGVzKHRoaXMuc3R5bGVTaGVldCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIEdsb2JhbFN0eWxlQ29tcG9uZW50LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgUmVhY3QuQ2hpbGRyZW4uY291bnQodGhpcy5wcm9wcy5jaGlsZHJlbikpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKCdUaGUgZ2xvYmFsIHN0eWxlIGNvbXBvbmVudCAnICsgdGhpcy5zdGF0ZS5zdHlsZWRDb21wb25lbnRJZCArICcgd2FzIGdpdmVuIGNoaWxkIEpTWC4gY3JlYXRlR2xvYmFsU3R5bGUgZG9lcyBub3QgcmVuZGVyIGNoaWxkcmVuLicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgU3R5bGVTaGVldENvbnN1bWVyLFxuICAgICAgICBudWxsLFxuICAgICAgICBmdW5jdGlvbiAoc3R5bGVTaGVldCkge1xuICAgICAgICAgIF90aGlzMi5zdHlsZVNoZWV0ID0gc3R5bGVTaGVldCB8fCBTdHlsZVNoZWV0Lm1hc3RlcjtcblxuICAgICAgICAgIHZhciBnbG9iYWxTdHlsZSA9IF90aGlzMi5zdGF0ZS5nbG9iYWxTdHlsZTtcblxuXG4gICAgICAgICAgaWYgKGdsb2JhbFN0eWxlLmlzU3RhdGljKSB7XG4gICAgICAgICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoU1RBVElDX0VYRUNVVElPTl9DT05URVhULCBfdGhpczIuc3R5bGVTaGVldCk7XG5cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgVGhlbWVDb25zdW1lcixcbiAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgZnVuY3Rpb24gKHRoZW1lKSB7XG4gICAgICAgICAgICAgICAgLy8gJEZsb3dGaXhNZVxuICAgICAgICAgICAgICAgIHZhciBkZWZhdWx0UHJvcHMgPSBfdGhpczIuY29uc3RydWN0b3IuZGVmYXVsdFByb3BzO1xuXG5cbiAgICAgICAgICAgICAgICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBfdGhpczIucHJvcHMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGVtZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnRleHQudGhlbWUgPSBkZXRlcm1pbmVUaGVtZShfdGhpczIucHJvcHMsIHRoZW1lLCBkZWZhdWx0UHJvcHMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGdsb2JhbFN0eWxlLnJlbmRlclN0eWxlcyhjb250ZXh0LCBfdGhpczIuc3R5bGVTaGVldCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfTtcblxuICAgIHJldHVybiBHbG9iYWxTdHlsZUNvbXBvbmVudDtcbiAgfShSZWFjdC5Db21wb25lbnQpO1xuXG4gIEdsb2JhbFN0eWxlQ29tcG9uZW50Lmdsb2JhbFN0eWxlID0gc3R5bGU7XG4gIEdsb2JhbFN0eWxlQ29tcG9uZW50LnN0eWxlZENvbXBvbmVudElkID0gaWQ7XG5cblxuICByZXR1cm4gR2xvYmFsU3R5bGVDb21wb25lbnQ7XG59XG5cbi8vIFxuXG52YXIgcmVwbGFjZVdoaXRlc3BhY2UgPSBmdW5jdGlvbiByZXBsYWNlV2hpdGVzcGFjZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXHN8XFxcXG4vZywgJycpO1xufTtcblxuZnVuY3Rpb24ga2V5ZnJhbWVzKHN0cmluZ3MpIHtcbiAgLyogV2FybmluZyBpZiB5b3UndmUgdXNlZCBrZXlmcmFtZXMgb24gUmVhY3QgTmF0aXZlICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oJ2BrZXlmcmFtZXNgIGNhbm5vdCBiZSB1c2VkIG9uIFJlYWN0TmF0aXZlLCBvbmx5IG9uIHRoZSB3ZWIuIFRvIGRvIGFuaW1hdGlvbiBpbiBSZWFjdE5hdGl2ZSBwbGVhc2UgdXNlIEFuaW1hdGVkLicpO1xuICB9XG5cbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGludGVycG9sYXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBydWxlcyA9IGNzcy5hcHBseSh1bmRlZmluZWQsIFtzdHJpbmdzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKTtcblxuICB2YXIgbmFtZSA9IGdlbmVyYXRlQWxwaGFiZXRpY05hbWUobXVybXVyaGFzaChyZXBsYWNlV2hpdGVzcGFjZShKU09OLnN0cmluZ2lmeShydWxlcykpKSk7XG5cbiAgcmV0dXJuIG5ldyBLZXlmcmFtZXMobmFtZSwgc3RyaW5naWZ5UnVsZXMocnVsZXMsIG5hbWUsICdAa2V5ZnJhbWVzJykpO1xufVxuXG4vLyBcblxudmFyIHdpdGhUaGVtZSA9IChmdW5jdGlvbiAoQ29tcG9uZW50JCQxKSB7XG4gIHZhciBXaXRoVGhlbWUgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBUaGVtZUNvbnN1bWVyLFxuICAgICAgbnVsbCxcbiAgICAgIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIHZhciBkZWZhdWx0UHJvcHMgPSBDb21wb25lbnQkJDEuZGVmYXVsdFByb3BzO1xuXG4gICAgICAgIHZhciB0aGVtZVByb3AgPSBkZXRlcm1pbmVUaGVtZShwcm9wcywgdGhlbWUsIGRlZmF1bHRQcm9wcyk7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdGhlbWVQcm9wID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgIGNvbnNvbGUud2FybignW3dpdGhUaGVtZV0gWW91IGFyZSBub3QgdXNpbmcgYSBUaGVtZVByb3ZpZGVyIG5vciBwYXNzaW5nIGEgdGhlbWUgcHJvcCBvciBhIHRoZW1lIGluIGRlZmF1bHRQcm9wcyBpbiBjb21wb25lbnQgY2xhc3MgXCInICsgZ2V0Q29tcG9uZW50TmFtZShDb21wb25lbnQkJDEpICsgJ1wiJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQkJDEsIF9leHRlbmRzKHt9LCBwcm9wcywgeyB0aGVtZTogdGhlbWVQcm9wLCByZWY6IHJlZiB9KSk7XG4gICAgICB9XG4gICAgKTtcbiAgfSk7XG5cbiAgaG9pc3ROb25SZWFjdFN0YXRpY3MoV2l0aFRoZW1lLCBDb21wb25lbnQkJDEpO1xuXG4gIFdpdGhUaGVtZS5kaXNwbGF5TmFtZSA9ICdXaXRoVGhlbWUoJyArIGdldENvbXBvbmVudE5hbWUoQ29tcG9uZW50JCQxKSArICcpJztcblxuICByZXR1cm4gV2l0aFRoZW1lO1xufSk7XG5cbi8vIFxuXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xudmFyIF9fRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9IQVVOVEVEX0JZX1NQT09LWV9HSE9TVFMgPSB7XG4gIFN0eWxlU2hlZXQ6IFN0eWxlU2hlZXRcbn07XG5cbi8vIFxuXG4vKiBXYXJuaW5nIGlmIHlvdSd2ZSBpbXBvcnRlZCB0aGlzIGZpbGUgb24gUmVhY3QgTmF0aXZlICovXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHlvdSd2ZSBpbXBvcnRlZCAnc3R5bGVkLWNvbXBvbmVudHMnIG9uIFJlYWN0IE5hdGl2ZS5cXG5cIiArIFwiUGVyaGFwcyB5b3UncmUgbG9va2luZyB0byBpbXBvcnQgJ3N0eWxlZC1jb21wb25lbnRzL25hdGl2ZSc/XFxuXCIgKyAnUmVhZCBtb3JlIGFib3V0IHRoaXMgYXQgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYmFzaWNzI3JlYWN0LW5hdGl2ZScpO1xufVxuXG4vKiBXYXJuaW5nIGlmIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiBzdHlsZWQtY29tcG9uZW50cyAqL1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbmF2aWdhdG9yLnVzZXJBZ2VudCA9PT0gJ3N0cmluZycgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdOb2RlLmpzJykgPT09IC0xICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignanNkb20nKSA9PT0gLTEpIHtcbiAgd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddID0gd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddIHx8IDA7XG5cbiAgaWYgKHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSA9PT0gMSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2YgJ3N0eWxlZC1jb21wb25lbnRzJyBpbml0aWFsaXplZCBpbiB0aGlzIGFwcGxpY2F0aW9uLiBcIiArICdUaGlzIG1heSBjYXVzZSBkeW5hbWljIHN0eWxlcyBub3QgcmVuZGVyaW5nIHByb3Blcmx5LCBlcnJvcnMgaGFwcGVuaW5nIGR1cmluZyByZWh5ZHJhdGlvbiBwcm9jZXNzICcgKyAnYW5kIG1ha2VzIHlvdXIgYXBwbGljYXRpb24gYmlnZ2VyIHdpdGhvdXQgYSBnb29kIHJlYXNvbi5cXG5cXG4nICsgJ1NlZSBodHRwczovL3MtYy5zaC8yQkFYemVkIGZvciBtb3JlIGluZm8uJyk7XG4gIH1cblxuICB3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gKz0gMTtcbn1cblxuLy9cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkO1xuZXhwb3J0IHsgY3JlYXRlR2xvYmFsU3R5bGUsIGNzcywgaXNTdHlsZWRDb21wb25lbnQsIGtleWZyYW1lcywgU2VydmVyU3R5bGVTaGVldCwgU3R5bGVTaGVldENvbnN1bWVyLCBTdHlsZVNoZWV0Q29udGV4dCwgU3R5bGVTaGVldE1hbmFnZXIsIFRoZW1lQ29uc3VtZXIsIFRoZW1lQ29udGV4dCwgVGhlbWVQcm92aWRlciwgd2l0aFRoZW1lLCBfX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfSEFVTlRFRF9CWV9TUE9PS1lfR0hPU1RTIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcy5tYXBcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fd2tzJyk7XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuIiwidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoTywgcHJvdG8pIHtcbiAgYW5PYmplY3QoTyk7XG4gIGlmICghaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKSB0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbiAodGVzdCwgYnVnZ3ksIHNldCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gcmVxdWlyZSgnLi9fY3R4JykoRnVuY3Rpb24uY2FsbCwgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mKE9iamVjdC5wcm90b3R5cGUsICdfX3Byb3RvX18nKS5zZXQsIDIpO1xuICAgICAgICBzZXQodGVzdCwgW10pO1xuICAgICAgICBidWdneSA9ICEodGVzdCBpbnN0YW5jZW9mIEFycmF5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pIHtcbiAgICAgICAgY2hlY2soTywgcHJvdG8pO1xuICAgICAgICBpZiAoYnVnZ3kpIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gJ1xceDA5XFx4MEFcXHgwQlxceDBDXFx4MERcXHgyMFxceEEwXFx1MTY4MFxcdTE4MEVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzJyArXG4gICdcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBBXFx1MjAyRlxcdTIwNUZcXHUzMDAwXFx1MjAyOFxcdTIwMjlcXHVGRUZGJztcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgdGFyZ2V0LCBDKSB7XG4gIHZhciBTID0gdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICB2YXIgUDtcbiAgaWYgKFMgIT09IEMgJiYgdHlwZW9mIFMgPT0gJ2Z1bmN0aW9uJyAmJiAoUCA9IFMucHJvdG90eXBlKSAhPT0gQy5wcm90b3R5cGUgJiYgaXNPYmplY3QoUCkgJiYgc2V0UHJvdG90eXBlT2YpIHtcbiAgICBzZXRQcm90b3R5cGVPZih0aGF0LCBQKTtcbiAgfSByZXR1cm4gdGhhdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVwZWF0KGNvdW50KSB7XG4gIHZhciBzdHIgPSBTdHJpbmcoZGVmaW5lZCh0aGlzKSk7XG4gIHZhciByZXMgPSAnJztcbiAgdmFyIG4gPSB0b0ludGVnZXIoY291bnQpO1xuICBpZiAobiA8IDAgfHwgbiA9PSBJbmZpbml0eSkgdGhyb3cgUmFuZ2VFcnJvcihcIkNvdW50IGNhbid0IGJlIG5lZ2F0aXZlXCIpO1xuICBmb3IgKDtuID4gMDsgKG4gPj4+PSAxKSAmJiAoc3RyICs9IHN0cikpIGlmIChuICYgMSkgcmVzICs9IHN0cjtcbiAgcmV0dXJuIHJlcztcbn07XG4iLCIvLyAyMC4yLjIuMjggTWF0aC5zaWduKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbiBzaWduKHgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICByZXR1cm4gKHggPSAreCkgPT0gMCB8fCB4ICE9IHggPyB4IDogeCA8IDAgPyAtMSA6IDE7XG59O1xuIiwiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwbTEgPSBNYXRoLmV4cG0xO1xubW9kdWxlLmV4cG9ydHMgPSAoISRleHBtMVxuICAvLyBPbGQgRkYgYnVnXG4gIHx8ICRleHBtMSgxMCkgPiAyMjAyNS40NjU3OTQ4MDY3MTkgfHwgJGV4cG0xKDEwKSA8IDIyMDI1LjQ2NTc5NDgwNjcxNjUxNjhcbiAgLy8gVG9yIEJyb3dzZXIgYnVnXG4gIHx8ICRleHBtMSgtMmUtMTcpICE9IC0yZS0xN1xuKSA/IGZ1bmN0aW9uIGV4cG0xKHgpIHtcbiAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogeCA+IC0xZS02ICYmIHggPCAxZS02ID8geCArIHggKiB4IC8gMiA6IE1hdGguZXhwKHgpIC0gMTtcbn0gOiAkZXhwbTE7XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsIi8vIGhlbHBlciBmb3IgU3RyaW5nI3tzdGFydHNXaXRoLCBlbmRzV2l0aCwgaW5jbHVkZXN9XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBzZWFyY2hTdHJpbmcsIE5BTUUpIHtcbiAgaWYgKGlzUmVnRXhwKHNlYXJjaFN0cmluZykpIHRocm93IFR5cGVFcnJvcignU3RyaW5nIycgKyBOQU1FICsgXCIgZG9lc24ndCBhY2NlcHQgcmVnZXghXCIpO1xuICByZXR1cm4gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xufTtcbiIsIi8vIDcuMi44IElzUmVnRXhwKGFyZ3VtZW50KVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgTUFUQ0ggPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBpc1JlZ0V4cDtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNvZihpdCkgPT0gJ1JlZ0V4cCcpO1xufTtcbiIsInZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciByZSA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tLRVldKHJlKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRyeSB7XG4gICAgICByZVtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAhJy8uLydbS0VZXShyZSk7XG4gICAgfSBjYXRjaCAoZikgeyAvKiBlbXB0eSAqLyB9XG4gIH0gcmV0dXJuIHRydWU7XG59O1xuIiwiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcbiIsIi8vIDIyLjEuMy42IEFycmF5LnByb3RvdHlwZS5maWxsKHZhbHVlLCBzdGFydCA9IDAsIGVuZCA9IHRoaXMubGVuZ3RoKVxuJ3VzZSBzdHJpY3QnO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaWxsKHZhbHVlIC8qICwgc3RhcnQgPSAwLCBlbmQgPSBAbGVuZ3RoICovKSB7XG4gIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCBsZW5ndGgpO1xuICB2YXIgZW5kID0gYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gIHZhciBlbmRQb3MgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbmd0aCk7XG4gIHdoaWxlIChlbmRQb3MgPiBpbmRleCkgT1tpbmRleCsrXSA9IHZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbi8vIFRoaXMgYWx3YXlzIHJlZmVycyB0byB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLCBiZWNhdXNlIHRoZVxuLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsXG4vLyB3aGljaCBsb2FkcyB0aGlzIGZpbGUgYmVmb3JlIHBhdGNoaW5nIHRoZSBtZXRob2QuXG52YXIgbmF0aXZlUmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcblxudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcblxudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcblxudmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciByZTEgPSAvYS8sXG4gICAgICByZTIgPSAvYiovZztcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMSwgJ2EnKTtcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMVtMQVNUX0lOREVYXSAhPT0gMCB8fCByZTJbTEFTVF9JTkRFWF0gIT09IDA7XG59KSgpO1xuXG4vLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cCwgY29waWVkIGZyb20gZXM1LXNoaW0ncyBTdHJpbmcjc3BsaXQgcGF0Y2guXG52YXIgTlBDR19JTkNMVURFRCA9IC8oKT8/Ly5leGVjKCcnKVsxXSAhPT0gdW5kZWZpbmVkO1xuXG52YXIgUEFUQ0ggPSBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgfHwgTlBDR19JTkNMVURFRDtcblxuaWYgKFBBVENIKSB7XG4gIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHtcbiAgICB2YXIgcmUgPSB0aGlzO1xuICAgIHZhciBsYXN0SW5kZXgsIHJlQ29weSwgbWF0Y2gsIGk7XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyByZS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIHJlZ2V4cEZsYWdzLmNhbGwocmUpKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmVbTEFTVF9JTkRFWF07XG5cbiAgICBtYXRjaCA9IG5hdGl2ZUV4ZWMuY2FsbChyZSwgc3RyKTtcblxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlW0xBU1RfSU5ERVhdID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgXG4gICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy9cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbiAvLyBgQWR2YW5jZVN0cmluZ0luZGV4YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLWFkdmFuY2VzdHJpbmdpbmRleFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoUywgaW5kZXgsIHVuaWNvZGUpIHtcbiAgcmV0dXJuIGluZGV4ICsgKHVuaWNvZGUgPyBhdChTLCBpbmRleCkubGVuZ3RoIDogMSk7XG59O1xuIiwidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGludm9rZSA9IHJlcXVpcmUoJy4vX2ludm9rZScpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY2VsID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBzZXRUYXNrID0gZ2xvYmFsLnNldEltbWVkaWF0ZTtcbnZhciBjbGVhclRhc2sgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGU7XG52YXIgTWVzc2FnZUNoYW5uZWwgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWw7XG52YXIgRGlzcGF0Y2ggPSBnbG9iYWwuRGlzcGF0Y2g7XG52YXIgY291bnRlciA9IDA7XG52YXIgcXVldWUgPSB7fTtcbnZhciBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbnZhciBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpZCA9ICt0aGlzO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gIGlmIChxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmICghc2V0VGFzayB8fCAhY2xlYXJUYXNrKSB7XG4gIHNldFRhc2sgPSBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZm4pIHtcbiAgICB2YXIgYXJncyA9IFtdO1xuICAgIHZhciBpID0gMTtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcXVldWVbKytjb3VudGVyXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChyZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2VzcycpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIFNwaGVyZSAoSlMgZ2FtZSBlbmdpbmUpIERpc3BhdGNoIEFQSVxuICB9IGVsc2UgaWYgKERpc3BhdGNoICYmIERpc3BhdGNoLm5vdykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBEaXNwYXRjaC5ub3coY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwpIHtcbiAgICBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgcG9ydCA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgJiYgdHlwZW9mIHBvc3RNZXNzYWdlID09ICdmdW5jdGlvbicgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShpZCArICcnLCAnKicpO1xuICAgIH07XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0JykpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0luZGV4ID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBhcnJheUZpbGwgPSByZXF1aXJlKCcuL19hcnJheS1maWxsJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG52YXIgREFUQV9WSUVXID0gJ0RhdGFWaWV3JztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG52YXIgV1JPTkdfSU5ERVggPSAnV3JvbmcgaW5kZXghJztcbnZhciAkQXJyYXlCdWZmZXIgPSBnbG9iYWxbQVJSQVlfQlVGRkVSXTtcbnZhciAkRGF0YVZpZXcgPSBnbG9iYWxbREFUQV9WSUVXXTtcbnZhciBNYXRoID0gZ2xvYmFsLk1hdGg7XG52YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNoYWRvdy1yZXN0cmljdGVkLW5hbWVzXG52YXIgSW5maW5pdHkgPSBnbG9iYWwuSW5maW5pdHk7XG52YXIgQmFzZUJ1ZmZlciA9ICRBcnJheUJ1ZmZlcjtcbnZhciBhYnMgPSBNYXRoLmFicztcbnZhciBwb3cgPSBNYXRoLnBvdztcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgbG9nID0gTWF0aC5sb2c7XG52YXIgTE4yID0gTWF0aC5MTjI7XG52YXIgQlVGRkVSID0gJ2J1ZmZlcic7XG52YXIgQllURV9MRU5HVEggPSAnYnl0ZUxlbmd0aCc7XG52YXIgQllURV9PRkZTRVQgPSAnYnl0ZU9mZnNldCc7XG52YXIgJEJVRkZFUiA9IERFU0NSSVBUT1JTID8gJ19iJyA6IEJVRkZFUjtcbnZhciAkTEVOR1RIID0gREVTQ1JJUFRPUlMgPyAnX2wnIDogQllURV9MRU5HVEg7XG52YXIgJE9GRlNFVCA9IERFU0NSSVBUT1JTID8gJ19vJyA6IEJZVEVfT0ZGU0VUO1xuXG4vLyBJRUVFNzU0IGNvbnZlcnNpb25zIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvaWVlZTc1NFxuZnVuY3Rpb24gcGFja0lFRUU3NTQodmFsdWUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KG5CeXRlcyk7XG4gIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxO1xuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMTtcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxO1xuICB2YXIgcnQgPSBtTGVuID09PSAyMyA/IHBvdygyLCAtMjQpIC0gcG93KDIsIC03NykgOiAwO1xuICB2YXIgaSA9IDA7XG4gIHZhciBzID0gdmFsdWUgPCAwIHx8IHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDAgPyAxIDogMDtcbiAgdmFyIGUsIG0sIGM7XG4gIHZhbHVlID0gYWJzKHZhbHVlKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICBpZiAodmFsdWUgIT0gdmFsdWUgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIG0gPSB2YWx1ZSAhPSB2YWx1ZSA/IDEgOiAwO1xuICAgIGUgPSBlTWF4O1xuICB9IGVsc2Uge1xuICAgIGUgPSBmbG9vcihsb2codmFsdWUpIC8gTE4yKTtcbiAgICBpZiAodmFsdWUgKiAoYyA9IHBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tO1xuICAgICAgYyAqPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gYztcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBwb3coMiwgMSAtIGVCaWFzKTtcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKys7XG4gICAgICBjIC89IDI7XG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDA7XG4gICAgICBlID0gZU1heDtcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKHZhbHVlICogYyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IGUgKyBlQmlhcztcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogcG93KDIsIGVCaWFzIC0gMSkgKiBwb3coMiwgbUxlbik7XG4gICAgICBlID0gMDtcbiAgICB9XG4gIH1cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW2krK10gPSBtICYgMjU1LCBtIC89IDI1NiwgbUxlbiAtPSA4KTtcbiAgZSA9IGUgPDwgbUxlbiB8IG07XG4gIGVMZW4gKz0gbUxlbjtcbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbaSsrXSA9IGUgJiAyNTUsIGUgLz0gMjU2LCBlTGVuIC09IDgpO1xuICBidWZmZXJbLS1pXSB8PSBzICogMTI4O1xuICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gdW5wYWNrSUVFRTc1NChidWZmZXIsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIG5CaXRzID0gZUxlbiAtIDc7XG4gIHZhciBpID0gbkJ5dGVzIC0gMTtcbiAgdmFyIHMgPSBidWZmZXJbaS0tXTtcbiAgdmFyIGUgPSBzICYgMTI3O1xuICB2YXIgbTtcbiAgcyA+Pj0gNztcbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIG0gPSBlICYgKDEgPDwgLW5CaXRzKSAtIDE7XG4gIGUgPj49IC1uQml0cztcbiAgbkJpdHMgKz0gbUxlbjtcbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IG0gKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhcztcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiBzID8gLUluZmluaXR5IDogSW5maW5pdHk7XG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBwb3coMiwgbUxlbik7XG4gICAgZSA9IGUgLSBlQmlhcztcbiAgfSByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIHBvdygyLCBlIC0gbUxlbik7XG59XG5cbmZ1bmN0aW9uIHVucGFja0kzMihieXRlcykge1xuICByZXR1cm4gYnl0ZXNbM10gPDwgMjQgfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbn1cbmZ1bmN0aW9uIHBhY2tJOChpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTE2KGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTMyKGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZiwgaXQgPj4gMTYgJiAweGZmLCBpdCA+PiAyNCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0Y2NChpdCkge1xuICByZXR1cm4gcGFja0lFRUU3NTQoaXQsIDUyLCA4KTtcbn1cbmZ1bmN0aW9uIHBhY2tGMzIoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCAyMywgNCk7XG59XG5cbmZ1bmN0aW9uIGFkZEdldHRlcihDLCBrZXksIGludGVybmFsKSB7XG4gIGRQKENbUFJPVE9UWVBFXSwga2V5LCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc1tpbnRlcm5hbF07IH0gfSk7XG59XG5cbmZ1bmN0aW9uIGdldCh2aWV3LCBieXRlcywgaW5kZXgsIGlzTGl0dGxlRW5kaWFuKSB7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleDtcbiAgdmFyIGludEluZGV4ID0gdG9JbmRleChudW1JbmRleCk7XG4gIGlmIChpbnRJbmRleCArIGJ5dGVzID4gdmlld1skTEVOR1RIXSkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2I7XG4gIHZhciBzdGFydCA9IGludEluZGV4ICsgdmlld1skT0ZGU0VUXTtcbiAgdmFyIHBhY2sgPSBzdG9yZS5zbGljZShzdGFydCwgc3RhcnQgKyBieXRlcyk7XG4gIHJldHVybiBpc0xpdHRsZUVuZGlhbiA/IHBhY2sgOiBwYWNrLnJldmVyc2UoKTtcbn1cbmZ1bmN0aW9uIHNldCh2aWV3LCBieXRlcywgaW5kZXgsIGNvbnZlcnNpb24sIHZhbHVlLCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gY29udmVyc2lvbigrdmFsdWUpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzOyBpKyspIHN0b3JlW3N0YXJ0ICsgaV0gPSBwYWNrW2lzTGl0dGxlRW5kaWFuID8gaSA6IGJ5dGVzIC0gaSAtIDFdO1xufVxuXG5pZiAoISR0eXBlZC5BQlYpIHtcbiAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG4gICAgdmFyIGJ5dGVMZW5ndGggPSB0b0luZGV4KGxlbmd0aCk7XG4gICAgdGhpcy5fYiA9IGFycmF5RmlsbC5jYWxsKG5ldyBBcnJheShieXRlTGVuZ3RoKSwgMCk7XG4gICAgdGhpc1skTEVOR1RIXSA9IGJ5dGVMZW5ndGg7XG4gIH07XG5cbiAgJERhdGFWaWV3ID0gZnVuY3Rpb24gRGF0YVZpZXcoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkRGF0YVZpZXcsIERBVEFfVklFVyk7XG4gICAgYW5JbnN0YW5jZShidWZmZXIsICRBcnJheUJ1ZmZlciwgREFUQV9WSUVXKTtcbiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYnVmZmVyWyRMRU5HVEhdO1xuICAgIHZhciBvZmZzZXQgPSB0b0ludGVnZXIoYnl0ZU9mZnNldCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7XG4gICAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPT09IHVuZGVmaW5lZCA/IGJ1ZmZlckxlbmd0aCAtIG9mZnNldCA6IHRvTGVuZ3RoKGJ5dGVMZW5ndGgpO1xuICAgIGlmIChvZmZzZXQgKyBieXRlTGVuZ3RoID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgdGhpc1skQlVGRkVSXSA9IGJ1ZmZlcjtcbiAgICB0aGlzWyRPRkZTRVRdID0gb2Zmc2V0O1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gIGlmIChERVNDUklQVE9SUykge1xuICAgIGFkZEdldHRlcigkQXJyYXlCdWZmZXIsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCVUZGRVIsICdfYicpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX09GRlNFVCwgJ19vJyk7XG4gIH1cblxuICByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIGdldEludDg6IGZ1bmN0aW9uIGdldEludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXSA8PCAyNCA+PiAyNDtcbiAgICB9LFxuICAgIGdldFVpbnQ4OiBmdW5jdGlvbiBnZXRVaW50OChieXRlT2Zmc2V0KSB7XG4gICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MTY6IGZ1bmN0aW9uIGdldEludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIChieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF0pIDw8IDE2ID4+IDE2O1xuICAgIH0sXG4gICAgZ2V0VWludDE2OiBmdW5jdGlvbiBnZXRVaW50MTYoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgdmFyIGJ5dGVzID0gZ2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSk7XG4gICAgICByZXR1cm4gYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MzI6IGZ1bmN0aW9uIGdldEludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpO1xuICAgIH0sXG4gICAgZ2V0VWludDMyOiBmdW5jdGlvbiBnZXRVaW50MzIoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0kzMihnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSkgPj4+IDA7XG4gICAgfSxcbiAgICBnZXRGbG9hdDMyOiBmdW5jdGlvbiBnZXRGbG9hdDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCAyMywgNCk7XG4gICAgfSxcbiAgICBnZXRGbG9hdDY0OiBmdW5jdGlvbiBnZXRGbG9hdDY0KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCA1MiwgOCk7XG4gICAgfSxcbiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNldEludDE2OiBmdW5jdGlvbiBzZXRJbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIHBhY2tJMTYsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDE2OiBmdW5jdGlvbiBzZXRVaW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEludDMyOiBmdW5jdGlvbiBzZXRJbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDMyOiBmdW5jdGlvbiBzZXRVaW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0MzI6IGZ1bmN0aW9uIHNldEZsb2F0MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrRjMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0NjQ6IGZ1bmN0aW9uIHNldEZsb2F0NjQoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBwYWNrRjY0LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9XG4gIH0pO1xufSBlbHNlIHtcbiAgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgJEFycmF5QnVmZmVyKDEpO1xuICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoLTEpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICB9KSB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3ICRBcnJheUJ1ZmZlcigpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoMS41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKE5hTik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgcmV0dXJuICRBcnJheUJ1ZmZlci5uYW1lICE9IEFSUkFZX0JVRkZFUjtcbiAgfSkpIHtcbiAgICAkQXJyYXlCdWZmZXIgPSBmdW5jdGlvbiBBcnJheUJ1ZmZlcihsZW5ndGgpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyKTtcbiAgICAgIHJldHVybiBuZXcgQmFzZUJ1ZmZlcih0b0luZGV4KGxlbmd0aCkpO1xuICAgIH07XG4gICAgdmFyIEFycmF5QnVmZmVyUHJvdG8gPSAkQXJyYXlCdWZmZXJbUFJPVE9UWVBFXSA9IEJhc2VCdWZmZXJbUFJPVE9UWVBFXTtcbiAgICBmb3IgKHZhciBrZXlzID0gZ09QTihCYXNlQnVmZmVyKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOykge1xuICAgICAgaWYgKCEoKGtleSA9IGtleXNbaisrXSkgaW4gJEFycmF5QnVmZmVyKSkgaGlkZSgkQXJyYXlCdWZmZXIsIGtleSwgQmFzZUJ1ZmZlcltrZXldKTtcbiAgICB9XG4gICAgaWYgKCFMSUJSQVJZKSBBcnJheUJ1ZmZlclByb3RvLmNvbnN0cnVjdG9yID0gJEFycmF5QnVmZmVyO1xuICB9XG4gIC8vIGlPUyBTYWZhcmkgNy54IGJ1Z1xuICB2YXIgdmlldyA9IG5ldyAkRGF0YVZpZXcobmV3ICRBcnJheUJ1ZmZlcigyKSk7XG4gIHZhciAkc2V0SW50OCA9ICREYXRhVmlld1tQUk9UT1RZUEVdLnNldEludDg7XG4gIHZpZXcuc2V0SW50OCgwLCAyMTQ3NDgzNjQ4KTtcbiAgdmlldy5zZXRJbnQ4KDEsIDIxNDc0ODM2NDkpO1xuICBpZiAodmlldy5nZXRJbnQ4KDApIHx8ICF2aWV3LmdldEludDgoMSkpIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgJHNldEludDguY2FsbCh0aGlzLCBieXRlT2Zmc2V0LCB2YWx1ZSA8PCAyNCA+PiAyNCk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH1cbiAgfSwgdHJ1ZSk7XG59XG5zZXRUb1N0cmluZ1RhZygkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG5zZXRUb1N0cmluZ1RhZygkRGF0YVZpZXcsIERBVEFfVklFVyk7XG5oaWRlKCREYXRhVmlld1tQUk9UT1RZUEVdLCAkdHlwZWQuVklFVywgdHJ1ZSk7XG5leHBvcnRzW0FSUkFZX0JVRkZFUl0gPSAkQXJyYXlCdWZmZXI7XG5leHBvcnRzW0RBVEFfVklFV10gPSAkRGF0YVZpZXc7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwiIWZ1bmN0aW9uKGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUobnVsbCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKG51bGwpKTp3aW5kb3cuc3R5bGlzPWUobnVsbCl9KGZ1bmN0aW9uIGUoYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9L15cXDArL2csYz0vW1xcMFxcclxcZl0vZyxzPS86ICovZyx0PS96b298Z3JhLyxpPS8oWyw6IF0pKHRyYW5zZm9ybSkvZyxmPS8sK1xccyooPyFbXihdKlspXSkvZyxuPS8gK1xccyooPyFbXihdKlspXSkvZyxsPS8gKltcXDBdICovZyxvPS8sXFxyKz8vZyxoPS8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLHU9LzpnbG9iYWxcXCgoKD86W15cXChcXClcXFtcXF1dKnxcXFsuKlxcXXxcXChbXlxcKFxcKV0qXFwpKSopXFwpL2csZD0vXFxXKy9nLGI9L0Aoa1xcdyspXFxzKihcXFMqKVxccyovLHA9Lzo6KHBsYWNlKS9nLGs9LzoocmVhZC1vbmx5KS9nLGc9L1xccysoPz1be1xcXTs9Oj5dKS9nLEE9LyhbW309Oj5dKVxccysvZyxDPS8oXFx7W157XSs/KTsoPz1cXH0pL2csdz0vXFxzezIsfS9nLHY9LyhbXlxcKF0pKDorKSAqL2csbT0vW3N2aF1cXHcrLVt0YmxyXXsyfS8seD0vXFwoXFxzKiguKilcXHMqXFwpL2csJD0vKFtcXHNcXFNdKj8pOy9nLHk9Ly1zZWxmfGZsZXgtL2csTz0vW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8saj0vc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLHo9LyhbXi1dKShpbWFnZS1zZXRcXCgpLyxOPVwiLXdlYmtpdC1cIixTPVwiLW1vei1cIixGPVwiLW1zLVwiLFc9NTkscT0xMjUsQj0xMjMsRD00MCxFPTQxLEc9OTEsSD05MyxJPTEwLEo9MTMsSz05LEw9NjQsTT0zMixQPTM4LFE9NDUsUj05NSxUPTQyLFU9NDQsVj01OCxYPTM5LFk9MzQsWj00NyxfPTYyLGVlPTQzLGFlPTEyNixyZT0wLGNlPTEyLHNlPTExLHRlPTEwNyxpZT0xMDksZmU9MTE1LG5lPTExMixsZT0xMTEsb2U9MTA1LGhlPTk5LHVlPTEwMCxkZT0xMTIsYmU9MSxwZT0xLGtlPTAsZ2U9MSxBZT0xLENlPTEsd2U9MCx2ZT0wLG1lPTAseGU9W10sJGU9W10seWU9MCxPZT1udWxsLGplPS0yLHplPS0xLE5lPTAsU2U9MSxGZT0yLFdlPTMscWU9MCxCZT0xLERlPVwiXCIsRWU9XCJcIixHZT1cIlwiO2Z1bmN0aW9uIEhlKGUsYSxzLHQsaSl7Zm9yKHZhciBmLG4sbz0wLGg9MCx1PTAsZD0wLGc9MCxBPTAsQz0wLHc9MCxtPTAsJD0wLHk9MCxPPTAsaj0wLHo9MCxSPTAsd2U9MCwkZT0wLE9lPTAsamU9MCx6ZT1zLmxlbmd0aCxKZT16ZS0xLFJlPVwiXCIsVGU9XCJcIixVZT1cIlwiLFZlPVwiXCIsWGU9XCJcIixZZT1cIlwiO1I8emU7KXtpZihDPXMuY2hhckNvZGVBdChSKSxSPT09SmUpaWYoaCtkK3UrbyE9PTApe2lmKDAhPT1oKUM9aD09PVo/STpaO2Q9dT1vPTAsemUrKyxKZSsrfWlmKGgrZCt1K289PT0wKXtpZihSPT09SmUpe2lmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO2lmKFRlLnRyaW0oKS5sZW5ndGg+MCl7c3dpdGNoKEMpe2Nhc2UgTTpjYXNlIEs6Y2FzZSBXOmNhc2UgSjpjYXNlIEk6YnJlYWs7ZGVmYXVsdDpUZSs9cy5jaGFyQXQoUil9Qz1XfX1pZigxPT09JGUpc3dpdGNoKEMpe2Nhc2UgQjpjYXNlIHE6Y2FzZSBXOmNhc2UgWTpjYXNlIFg6Y2FzZSBEOmNhc2UgRTpjYXNlIFU6JGU9MDtjYXNlIEs6Y2FzZSBKOmNhc2UgSTpjYXNlIE06YnJlYWs7ZGVmYXVsdDpmb3IoJGU9MCxqZT1SLGc9QyxSLS0sQz1XO2plPHplOylzd2l0Y2gocy5jaGFyQ29kZUF0KGplKyspKXtjYXNlIEk6Y2FzZSBKOmNhc2UgVzorK1IsQz1nLGplPXplO2JyZWFrO2Nhc2UgVjppZih3ZT4wKSsrUixDPWc7Y2FzZSBCOmplPXplfX1zd2l0Y2goQyl7Y2FzZSBCOmZvcihnPShUZT1UZS50cmltKCkpLmNoYXJDb2RlQXQoMCkseT0xLGplPSsrUjtSPHplOyl7c3dpdGNoKEM9cy5jaGFyQ29kZUF0KFIpKXtjYXNlIEI6eSsrO2JyZWFrO2Nhc2UgcTp5LS07YnJlYWs7Y2FzZSBaOnN3aXRjaChBPXMuY2hhckNvZGVBdChSKzEpKXtjYXNlIFQ6Y2FzZSBaOlI9UWUoQSxSLEplLHMpfWJyZWFrO2Nhc2UgRzpDKys7Y2FzZSBEOkMrKztjYXNlIFk6Y2FzZSBYOmZvcig7UisrPEplJiZzLmNoYXJDb2RlQXQoUikhPT1DOyk7fWlmKDA9PT15KWJyZWFrO1IrK31pZihVZT1zLnN1YnN0cmluZyhqZSxSKSxnPT09cmUpZz0oVGU9VGUucmVwbGFjZShyLFwiXCIpLnRyaW0oKSkuY2hhckNvZGVBdCgwKTtzd2l0Y2goZyl7Y2FzZSBMOmlmKHdlPjApVGU9VGUucmVwbGFjZShjLFwiXCIpO3N3aXRjaChBPVRlLmNoYXJDb2RlQXQoMSkpe2Nhc2UgdWU6Y2FzZSBpZTpjYXNlIGZlOmNhc2UgUTpmPWE7YnJlYWs7ZGVmYXVsdDpmPXhlfWlmKGplPShVZT1IZShhLGYsVWUsQSxpKzEpKS5sZW5ndGgsbWU+MCYmMD09PWplKWplPVRlLmxlbmd0aDtpZih5ZT4wKWlmKGY9SWUoeGUsVGUsT2UpLG49UGUoV2UsVWUsZixhLHBlLGJlLGplLEEsaSx0KSxUZT1mLmpvaW4oXCJcIiksdm9pZCAwIT09bilpZigwPT09KGplPShVZT1uLnRyaW0oKSkubGVuZ3RoKSlBPTAsVWU9XCJcIjtpZihqZT4wKXN3aXRjaChBKXtjYXNlIGZlOlRlPVRlLnJlcGxhY2UoeCxNZSk7Y2FzZSB1ZTpjYXNlIGllOmNhc2UgUTpVZT1UZStcIntcIitVZStcIn1cIjticmVhaztjYXNlIHRlOmlmKFVlPShUZT1UZS5yZXBsYWNlKGIsXCIkMSAkMlwiKyhCZT4wP0RlOlwiXCIpKSkrXCJ7XCIrVWUrXCJ9XCIsMT09PUFlfHwyPT09QWUmJkxlKFwiQFwiK1VlLDMpKVVlPVwiQFwiK04rVWUrXCJAXCIrVWU7ZWxzZSBVZT1cIkBcIitVZTticmVhaztkZWZhdWx0OmlmKFVlPVRlK1VlLHQ9PT1kZSlWZSs9VWUsVWU9XCJcIn1lbHNlIFVlPVwiXCI7YnJlYWs7ZGVmYXVsdDpVZT1IZShhLEllKGEsVGUsT2UpLFVlLHQsaSsxKX1YZSs9VWUsTz0wLCRlPTAsej0wLHdlPTAsT2U9MCxqPTAsVGU9XCJcIixVZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUik7YnJlYWs7Y2FzZSBxOmNhc2UgVzppZigoamU9KFRlPSh3ZT4wP1RlLnJlcGxhY2UoYyxcIlwiKTpUZSkudHJpbSgpKS5sZW5ndGgpPjEpe2lmKDA9PT16KWlmKChnPVRlLmNoYXJDb2RlQXQoMCkpPT09UXx8Zz45NiYmZzwxMjMpamU9KFRlPVRlLnJlcGxhY2UoXCIgXCIsXCI6XCIpKS5sZW5ndGg7aWYoeWU+MClpZih2b2lkIDAhPT0obj1QZShTZSxUZSxhLGUscGUsYmUsVmUubGVuZ3RoLHQsaSx0KSkpaWYoMD09PShqZT0oVGU9bi50cmltKCkpLmxlbmd0aCkpVGU9XCJcXDBcXDBcIjtzd2l0Y2goZz1UZS5jaGFyQ29kZUF0KDApLEE9VGUuY2hhckNvZGVBdCgxKSxnKXtjYXNlIHJlOmJyZWFrO2Nhc2UgTDppZihBPT09b2V8fEE9PT1oZSl7WWUrPVRlK3MuY2hhckF0KFIpO2JyZWFrfWRlZmF1bHQ6aWYoVGUuY2hhckNvZGVBdChqZS0xKT09PVYpYnJlYWs7VmUrPUtlKFRlLGcsQSxUZS5jaGFyQ29kZUF0KDIpKX19Tz0wLCRlPTAsej0wLHdlPTAsT2U9MCxUZT1cIlwiLEM9cy5jaGFyQ29kZUF0KCsrUil9fXN3aXRjaChDKXtjYXNlIEo6Y2FzZSBJOmlmKGgrZCt1K28rdmU9PT0wKXN3aXRjaCgkKXtjYXNlIEU6Y2FzZSBYOmNhc2UgWTpjYXNlIEw6Y2FzZSBhZTpjYXNlIF86Y2FzZSBUOmNhc2UgZWU6Y2FzZSBaOmNhc2UgUTpjYXNlIFY6Y2FzZSBVOmNhc2UgVzpjYXNlIEI6Y2FzZSBxOmJyZWFrO2RlZmF1bHQ6aWYoej4wKSRlPTF9aWYoaD09PVopaD0wO2Vsc2UgaWYoZ2UrTz09PTAmJnQhPT10ZSYmVGUubGVuZ3RoPjApd2U9MSxUZSs9XCJcXDBcIjtpZih5ZSpxZT4wKVBlKE5lLFRlLGEsZSxwZSxiZSxWZS5sZW5ndGgsdCxpLHQpO2JlPTEscGUrKzticmVhaztjYXNlIFc6Y2FzZSBxOmlmKGgrZCt1K289PT0wKXtiZSsrO2JyZWFrfWRlZmF1bHQ6c3dpdGNoKGJlKyssUmU9cy5jaGFyQXQoUiksQyl7Y2FzZSBLOmNhc2UgTTppZihkK28raD09PTApc3dpdGNoKHcpe2Nhc2UgVTpjYXNlIFY6Y2FzZSBLOmNhc2UgTTpSZT1cIlwiO2JyZWFrO2RlZmF1bHQ6aWYoQyE9PU0pUmU9XCIgXCJ9YnJlYWs7Y2FzZSByZTpSZT1cIlxcXFwwXCI7YnJlYWs7Y2FzZSBjZTpSZT1cIlxcXFxmXCI7YnJlYWs7Y2FzZSBzZTpSZT1cIlxcXFx2XCI7YnJlYWs7Y2FzZSBQOmlmKGQraCtvPT09MCYmZ2U+MClPZT0xLHdlPTEsUmU9XCJcXGZcIitSZTticmVhaztjYXNlIDEwODppZihkK2grbytrZT09PTAmJno+MClzd2l0Y2goUi16KXtjYXNlIDI6aWYodz09PW5lJiZzLmNoYXJDb2RlQXQoUi0zKT09PVYpa2U9dztjYXNlIDg6aWYobT09PWxlKWtlPW19YnJlYWs7Y2FzZSBWOmlmKGQraCtvPT09MCl6PVI7YnJlYWs7Y2FzZSBVOmlmKGgrdStkK289PT0wKXdlPTEsUmUrPVwiXFxyXCI7YnJlYWs7Y2FzZSBZOmNhc2UgWDppZigwPT09aClkPWQ9PT1DPzA6MD09PWQ/QzpkO2JyZWFrO2Nhc2UgRzppZihkK2grdT09PTApbysrO2JyZWFrO2Nhc2UgSDppZihkK2grdT09PTApby0tO2JyZWFrO2Nhc2UgRTppZihkK2grbz09PTApdS0tO2JyZWFrO2Nhc2UgRDppZihkK2grbz09PTApe2lmKDA9PT1PKXN3aXRjaCgyKncrMyptKXtjYXNlIDUzMzpicmVhaztkZWZhdWx0Onk9MCxPPTF9dSsrfWJyZWFrO2Nhc2UgTDppZihoK3UrZCtvK3oraj09PTApaj0xO2JyZWFrO2Nhc2UgVDpjYXNlIFo6aWYoZCtvK3U+MClicmVhaztzd2l0Y2goaCl7Y2FzZSAwOnN3aXRjaCgyKkMrMypzLmNoYXJDb2RlQXQoUisxKSl7Y2FzZSAyMzU6aD1aO2JyZWFrO2Nhc2UgMjIwOmplPVIsaD1UfWJyZWFrO2Nhc2UgVDppZihDPT09WiYmdz09PVQmJmplKzIhPT1SKXtpZigzMz09PXMuY2hhckNvZGVBdChqZSsyKSlWZSs9cy5zdWJzdHJpbmcoamUsUisxKTtSZT1cIlwiLGg9MH19fWlmKDA9PT1oKXtpZihnZStkK28raj09PTAmJnQhPT10ZSYmQyE9PVcpc3dpdGNoKEMpe2Nhc2UgVTpjYXNlIGFlOmNhc2UgXzpjYXNlIGVlOmNhc2UgRTpjYXNlIEQ6aWYoMD09PU8pe3N3aXRjaCh3KXtjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6UmUrPVwiXFwwXCI7YnJlYWs7ZGVmYXVsdDpSZT1cIlxcMFwiK1JlKyhDPT09VT9cIlwiOlwiXFwwXCIpfXdlPTF9ZWxzZSBzd2l0Y2goQyl7Y2FzZSBEOmlmKHorNz09PVImJjEwOD09PXcpej0wO089Kyt5O2JyZWFrO2Nhc2UgRTppZigwPT0oTz0tLXkpKXdlPTEsUmUrPVwiXFwwXCJ9YnJlYWs7Y2FzZSBLOmNhc2UgTTpzd2l0Y2godyl7Y2FzZSByZTpjYXNlIEI6Y2FzZSBxOmNhc2UgVzpjYXNlIFU6Y2FzZSBjZTpjYXNlIEs6Y2FzZSBNOmNhc2UgSTpjYXNlIEo6YnJlYWs7ZGVmYXVsdDppZigwPT09Tyl3ZT0xLFJlKz1cIlxcMFwifX1pZihUZSs9UmUsQyE9PU0mJkMhPT1LKSQ9Q319bT13LHc9QyxSKyt9aWYoamU9VmUubGVuZ3RoLG1lPjApaWYoMD09PWplJiYwPT09WGUubGVuZ3RoJiYwPT09YVswXS5sZW5ndGg9PWZhbHNlKWlmKHQhPT1pZXx8MT09PWEubGVuZ3RoJiYoZ2U+MD9FZTpHZSk9PT1hWzBdKWplPWEuam9pbihcIixcIikubGVuZ3RoKzI7aWYoamU+MCl7aWYoZj0wPT09Z2UmJnQhPT10ZT9mdW5jdGlvbihlKXtmb3IodmFyIGEscixzPTAsdD1lLmxlbmd0aCxpPUFycmF5KHQpO3M8dDsrK3Mpe2Zvcih2YXIgZj1lW3NdLnNwbGl0KGwpLG49XCJcIixvPTAsaD0wLHU9MCxkPTAsYj1mLmxlbmd0aDtvPGI7KytvKXtpZigwPT09KGg9KHI9ZltvXSkubGVuZ3RoKSYmYj4xKWNvbnRpbnVlO2lmKHU9bi5jaGFyQ29kZUF0KG4ubGVuZ3RoLTEpLGQ9ci5jaGFyQ29kZUF0KDApLGE9XCJcIiwwIT09bylzd2l0Y2godSl7Y2FzZSBUOmNhc2UgYWU6Y2FzZSBfOmNhc2UgZWU6Y2FzZSBNOmNhc2UgRDpicmVhaztkZWZhdWx0OmE9XCIgXCJ9c3dpdGNoKGQpe2Nhc2UgUDpyPWErRWU7Y2FzZSBhZTpjYXNlIF86Y2FzZSBlZTpjYXNlIE06Y2FzZSBFOmNhc2UgRDpicmVhaztjYXNlIEc6cj1hK3IrRWU7YnJlYWs7Y2FzZSBWOnN3aXRjaCgyKnIuY2hhckNvZGVBdCgxKSszKnIuY2hhckNvZGVBdCgyKSl7Y2FzZSA1MzA6aWYoQ2U+MCl7cj1hK3Iuc3Vic3RyaW5nKDgsaC0xKTticmVha31kZWZhdWx0OmlmKG88MXx8ZltvLTFdLmxlbmd0aDwxKXI9YStFZStyfWJyZWFrO2Nhc2UgVTphPVwiXCI7ZGVmYXVsdDppZihoPjEmJnIuaW5kZXhPZihcIjpcIik+MClyPWErci5yZXBsYWNlKHYsXCIkMVwiK0VlK1wiJDJcIik7ZWxzZSByPWErcitFZX1uKz1yfWlbc109bi5yZXBsYWNlKGMsXCJcIikudHJpbSgpfXJldHVybiBpfShhKTphLHllPjApaWYodm9pZCAwIT09KG49UGUoRmUsVmUsZixlLHBlLGJlLGplLHQsaSx0KSkmJjA9PT0oVmU9bikubGVuZ3RoKXJldHVybiBZZStWZStYZTtpZihWZT1mLmpvaW4oXCIsXCIpK1wie1wiK1ZlK1wifVwiLEFlKmtlIT0wKXtpZigyPT09QWUmJiFMZShWZSwyKSlrZT0wO3N3aXRjaChrZSl7Y2FzZSBsZTpWZT1WZS5yZXBsYWNlKGssXCI6XCIrUytcIiQxXCIpK1ZlO2JyZWFrO2Nhc2UgbmU6VmU9VmUucmVwbGFjZShwLFwiOjpcIitOK1wiaW5wdXQtJDFcIikrVmUucmVwbGFjZShwLFwiOjpcIitTK1wiJDFcIikrVmUucmVwbGFjZShwLFwiOlwiK0YrXCJpbnB1dC0kMVwiKStWZX1rZT0wfX1yZXR1cm4gWWUrVmUrWGV9ZnVuY3Rpb24gSWUoZSxhLHIpe3ZhciBjPWEudHJpbSgpLnNwbGl0KG8pLHM9Yyx0PWMubGVuZ3RoLGk9ZS5sZW5ndGg7c3dpdGNoKGkpe2Nhc2UgMDpjYXNlIDE6Zm9yKHZhciBmPTAsbj0wPT09aT9cIlwiOmVbMF0rXCIgXCI7Zjx0OysrZilzW2ZdPUplKG4sc1tmXSxyLGkpLnRyaW0oKTticmVhaztkZWZhdWx0OmY9MDt2YXIgbD0wO2ZvcihzPVtdO2Y8dDsrK2YpZm9yKHZhciBoPTA7aDxpOysraClzW2wrK109SmUoZVtoXStcIiBcIixjW2ZdLHIsaSkudHJpbSgpfXJldHVybiBzfWZ1bmN0aW9uIEplKGUsYSxyLGMpe3ZhciBzPWEsdD1zLmNoYXJDb2RlQXQoMCk7aWYodDwzMyl0PShzPXMudHJpbSgpKS5jaGFyQ29kZUF0KDApO3N3aXRjaCh0KXtjYXNlIFA6c3dpdGNoKGdlK2Mpe2Nhc2UgMDpjYXNlIDE6aWYoMD09PWUudHJpbSgpLmxlbmd0aClicmVhaztkZWZhdWx0OnJldHVybiBzLnJlcGxhY2UoaCxcIiQxXCIrZS50cmltKCkpfWJyZWFrO2Nhc2UgVjpzd2l0Y2gocy5jaGFyQ29kZUF0KDEpKXtjYXNlIDEwMzppZihDZT4wJiZnZT4wKXJldHVybiBzLnJlcGxhY2UodSxcIiQxXCIpLnJlcGxhY2UoaCxcIiQxXCIrR2UpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGUudHJpbSgpK3MucmVwbGFjZShoLFwiJDFcIitlLnRyaW0oKSl9ZGVmYXVsdDppZihyKmdlPjAmJnMuaW5kZXhPZihcIlxcZlwiKT4wKXJldHVybiBzLnJlcGxhY2UoaCwoZS5jaGFyQ29kZUF0KDApPT09Vj9cIlwiOlwiJDFcIikrZS50cmltKCkpfXJldHVybiBlK3N9ZnVuY3Rpb24gS2UoZSxhLHIsYyl7dmFyIGwsbz0wLGg9ZStcIjtcIix1PTIqYSszKnIrNCpjO2lmKDk0ND09PXUpcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBhPWUubGVuZ3RoLHI9ZS5pbmRleE9mKFwiOlwiLDkpKzEsYz1lLnN1YnN0cmluZygwLHIpLnRyaW0oKSxzPWUuc3Vic3RyaW5nKHIsYS0xKS50cmltKCk7c3dpdGNoKGUuY2hhckNvZGVBdCg5KSpCZSl7Y2FzZSAwOmJyZWFrO2Nhc2UgUTppZigxMTAhPT1lLmNoYXJDb2RlQXQoMTApKWJyZWFrO2RlZmF1bHQ6Zm9yKHZhciB0PXMuc3BsaXQoKHM9XCJcIixmKSksaT0wLHI9MCxhPXQubGVuZ3RoO2k8YTtyPTAsKytpKXtmb3IodmFyIGw9dFtpXSxvPWwuc3BsaXQobik7bD1vW3JdOyl7dmFyIGg9bC5jaGFyQ29kZUF0KDApO2lmKDE9PT1CZSYmKGg+TCYmaDw5MHx8aD45NiYmaDwxMjN8fGg9PT1SfHxoPT09USYmbC5jaGFyQ29kZUF0KDEpIT09USkpc3dpdGNoKGlzTmFOKHBhcnNlRmxvYXQobCkpKygtMSE9PWwuaW5kZXhPZihcIihcIikpKXtjYXNlIDE6c3dpdGNoKGwpe2Nhc2VcImluZmluaXRlXCI6Y2FzZVwiYWx0ZXJuYXRlXCI6Y2FzZVwiYmFja3dhcmRzXCI6Y2FzZVwicnVubmluZ1wiOmNhc2VcIm5vcm1hbFwiOmNhc2VcImZvcndhcmRzXCI6Y2FzZVwiYm90aFwiOmNhc2VcIm5vbmVcIjpjYXNlXCJsaW5lYXJcIjpjYXNlXCJlYXNlXCI6Y2FzZVwiZWFzZS1pblwiOmNhc2VcImVhc2Utb3V0XCI6Y2FzZVwiZWFzZS1pbi1vdXRcIjpjYXNlXCJwYXVzZWRcIjpjYXNlXCJyZXZlcnNlXCI6Y2FzZVwiYWx0ZXJuYXRlLXJldmVyc2VcIjpjYXNlXCJpbmhlcml0XCI6Y2FzZVwiaW5pdGlhbFwiOmNhc2VcInVuc2V0XCI6Y2FzZVwic3RlcC1zdGFydFwiOmNhc2VcInN0ZXAtZW5kXCI6YnJlYWs7ZGVmYXVsdDpsKz1EZX19b1tyKytdPWx9cys9KDA9PT1pP1wiXCI6XCIsXCIpK28uam9pbihcIiBcIil9fWlmKHM9YytzK1wiO1wiLDE9PT1BZXx8Mj09PUFlJiZMZShzLDEpKXJldHVybiBOK3MrcztyZXR1cm4gc30oaCk7ZWxzZSBpZigwPT09QWV8fDI9PT1BZSYmIUxlKGgsMSkpcmV0dXJuIGg7c3dpdGNoKHUpe2Nhc2UgMTAxNTpyZXR1cm4gOTc9PT1oLmNoYXJDb2RlQXQoMTApP04raCtoOmg7Y2FzZSA5NTE6cmV0dXJuIDExNj09PWguY2hhckNvZGVBdCgzKT9OK2graDpoO2Nhc2UgOTYzOnJldHVybiAxMTA9PT1oLmNoYXJDb2RlQXQoNSk/TitoK2g6aDtjYXNlIDEwMDk6aWYoMTAwIT09aC5jaGFyQ29kZUF0KDQpKWJyZWFrO2Nhc2UgOTY5OmNhc2UgOTQyOnJldHVybiBOK2graDtjYXNlIDk3ODpyZXR1cm4gTitoK1MraCtoO2Nhc2UgMTAxOTpjYXNlIDk4MzpyZXR1cm4gTitoK1MraCtGK2graDtjYXNlIDg4MzppZihoLmNoYXJDb2RlQXQoOCk9PT1RKXJldHVybiBOK2graDtpZihoLmluZGV4T2YoXCJpbWFnZS1zZXQoXCIsMTEpPjApcmV0dXJuIGgucmVwbGFjZSh6LFwiJDFcIitOK1wiJDJcIikraDtyZXR1cm4gaDtjYXNlIDkzMjppZihoLmNoYXJDb2RlQXQoNCk9PT1RKXN3aXRjaChoLmNoYXJDb2RlQXQoNSkpe2Nhc2UgMTAzOnJldHVybiBOK1wiYm94LVwiK2gucmVwbGFjZShcIi1ncm93XCIsXCJcIikrTitoK0YraC5yZXBsYWNlKFwiZ3Jvd1wiLFwicG9zaXRpdmVcIikraDtjYXNlIDExNTpyZXR1cm4gTitoK0YraC5yZXBsYWNlKFwic2hyaW5rXCIsXCJuZWdhdGl2ZVwiKStoO2Nhc2UgOTg6cmV0dXJuIE4raCtGK2gucmVwbGFjZShcImJhc2lzXCIsXCJwcmVmZXJyZWQtc2l6ZVwiKStofXJldHVybiBOK2grRitoK2g7Y2FzZSA5NjQ6cmV0dXJuIE4raCtGK1wiZmxleC1cIitoK2g7Y2FzZSAxMDIzOmlmKDk5IT09aC5jaGFyQ29kZUF0KDgpKWJyZWFrO3JldHVybiBsPWguc3Vic3RyaW5nKGguaW5kZXhPZihcIjpcIiwxNSkpLnJlcGxhY2UoXCJmbGV4LVwiLFwiXCIpLnJlcGxhY2UoXCJzcGFjZS1iZXR3ZWVuXCIsXCJqdXN0aWZ5XCIpLE4rXCJib3gtcGFja1wiK2wrTitoK0YrXCJmbGV4LXBhY2tcIitsK2g7Y2FzZSAxMDA1OnJldHVybiB0LnRlc3QoaCk/aC5yZXBsYWNlKHMsXCI6XCIrTikraC5yZXBsYWNlKHMsXCI6XCIrUykraDpoO2Nhc2UgMWUzOnN3aXRjaChvPShsPWguc3Vic3RyaW5nKDEzKS50cmltKCkpLmluZGV4T2YoXCItXCIpKzEsbC5jaGFyQ29kZUF0KDApK2wuY2hhckNvZGVBdChvKSl7Y2FzZSAyMjY6bD1oLnJlcGxhY2UobSxcInRiXCIpO2JyZWFrO2Nhc2UgMjMyOmw9aC5yZXBsYWNlKG0sXCJ0Yi1ybFwiKTticmVhaztjYXNlIDIyMDpsPWgucmVwbGFjZShtLFwibHJcIik7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gaH1yZXR1cm4gTitoK0YrbCtoO2Nhc2UgMTAxNzppZigtMT09PWguaW5kZXhPZihcInN0aWNreVwiLDkpKXJldHVybiBoO2Nhc2UgOTc1OnN3aXRjaChvPShoPWUpLmxlbmd0aC0xMCx1PShsPSgzMz09PWguY2hhckNvZGVBdChvKT9oLnN1YnN0cmluZygwLG8pOmgpLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIsNykrMSkudHJpbSgpKS5jaGFyQ29kZUF0KDApKygwfGwuY2hhckNvZGVBdCg3KSkpe2Nhc2UgMjAzOmlmKGwuY2hhckNvZGVBdCg4KTwxMTEpYnJlYWs7Y2FzZSAxMTU6aD1oLnJlcGxhY2UobCxOK2wpK1wiO1wiK2g7YnJlYWs7Y2FzZSAyMDc6Y2FzZSAxMDI6aD1oLnJlcGxhY2UobCxOKyh1PjEwMj9cImlubGluZS1cIjpcIlwiKStcImJveFwiKStcIjtcIitoLnJlcGxhY2UobCxOK2wpK1wiO1wiK2gucmVwbGFjZShsLEYrbCtcImJveFwiKStcIjtcIitofXJldHVybiBoK1wiO1wiO2Nhc2UgOTM4OmlmKGguY2hhckNvZGVBdCg1KT09PVEpc3dpdGNoKGguY2hhckNvZGVBdCg2KSl7Y2FzZSAxMDU6cmV0dXJuIGw9aC5yZXBsYWNlKFwiLWl0ZW1zXCIsXCJcIiksTitoK04rXCJib3gtXCIrbCtGK1wiZmxleC1cIitsK2g7Y2FzZSAxMTU6cmV0dXJuIE4raCtGK1wiZmxleC1pdGVtLVwiK2gucmVwbGFjZSh5LFwiXCIpK2g7ZGVmYXVsdDpyZXR1cm4gTitoK0YrXCJmbGV4LWxpbmUtcGFja1wiK2gucmVwbGFjZShcImFsaWduLWNvbnRlbnRcIixcIlwiKS5yZXBsYWNlKHksXCJcIikraH1icmVhaztjYXNlIDk3MzpjYXNlIDk4OTppZihoLmNoYXJDb2RlQXQoMykhPT1RfHwxMjI9PT1oLmNoYXJDb2RlQXQoNCkpYnJlYWs7Y2FzZSA5MzE6Y2FzZSA5NTM6aWYodHJ1ZT09PWoudGVzdChlKSlpZigxMTU9PT0obD1lLnN1YnN0cmluZyhlLmluZGV4T2YoXCI6XCIpKzEpKS5jaGFyQ29kZUF0KDApKXJldHVybiBLZShlLnJlcGxhY2UoXCJzdHJldGNoXCIsXCJmaWxsLWF2YWlsYWJsZVwiKSxhLHIsYykucmVwbGFjZShcIjpmaWxsLWF2YWlsYWJsZVwiLFwiOnN0cmV0Y2hcIik7ZWxzZSByZXR1cm4gaC5yZXBsYWNlKGwsTitsKStoLnJlcGxhY2UobCxTK2wucmVwbGFjZShcImZpbGwtXCIsXCJcIikpK2g7YnJlYWs7Y2FzZSA5NjI6aWYoaD1OK2grKDEwMj09PWguY2hhckNvZGVBdCg1KT9GK2g6XCJcIikraCxyK2M9PT0yMTEmJjEwNT09PWguY2hhckNvZGVBdCgxMykmJmguaW5kZXhPZihcInRyYW5zZm9ybVwiLDEwKT4wKXJldHVybiBoLnN1YnN0cmluZygwLGguaW5kZXhPZihcIjtcIiwyNykrMSkucmVwbGFjZShpLFwiJDFcIitOK1wiJDJcIikraH1yZXR1cm4gaH1mdW5jdGlvbiBMZShlLGEpe3ZhciByPWUuaW5kZXhPZigxPT09YT9cIjpcIjpcIntcIiksYz1lLnN1YnN0cmluZygwLDMhPT1hP3I6MTApLHM9ZS5zdWJzdHJpbmcocisxLGUubGVuZ3RoLTEpO3JldHVybiBPZSgyIT09YT9jOmMucmVwbGFjZShPLFwiJDFcIikscyxhKX1mdW5jdGlvbiBNZShlLGEpe3ZhciByPUtlKGEsYS5jaGFyQ29kZUF0KDApLGEuY2hhckNvZGVBdCgxKSxhLmNoYXJDb2RlQXQoMikpO3JldHVybiByIT09YStcIjtcIj9yLnJlcGxhY2UoJCxcIiBvciAoJDEpXCIpLnN1YnN0cmluZyg0KTpcIihcIithK1wiKVwifWZ1bmN0aW9uIFBlKGUsYSxyLGMscyx0LGksZixuLGwpe2Zvcih2YXIgbyxoPTAsdT1hO2g8eWU7KytoKXN3aXRjaChvPSRlW2hdLmNhbGwoVGUsZSx1LHIsYyxzLHQsaSxmLG4sbCkpe2Nhc2Ugdm9pZCAwOmNhc2UgZmFsc2U6Y2FzZSB0cnVlOmNhc2UgbnVsbDpicmVhaztkZWZhdWx0OnU9b31pZih1IT09YSlyZXR1cm4gdX1mdW5jdGlvbiBRZShlLGEscixjKXtmb3IodmFyIHM9YSsxO3M8cjsrK3Mpc3dpdGNoKGMuY2hhckNvZGVBdChzKSl7Y2FzZSBaOmlmKGU9PT1UKWlmKGMuY2hhckNvZGVBdChzLTEpPT09VCYmYSsyIT09cylyZXR1cm4gcysxO2JyZWFrO2Nhc2UgSTppZihlPT09WilyZXR1cm4gcysxfXJldHVybiBzfWZ1bmN0aW9uIFJlKGUpe2Zvcih2YXIgYSBpbiBlKXt2YXIgcj1lW2FdO3N3aXRjaChhKXtjYXNlXCJrZXlmcmFtZVwiOkJlPTB8cjticmVhaztjYXNlXCJnbG9iYWxcIjpDZT0wfHI7YnJlYWs7Y2FzZVwiY2FzY2FkZVwiOmdlPTB8cjticmVhaztjYXNlXCJjb21wcmVzc1wiOndlPTB8cjticmVhaztjYXNlXCJzZW1pY29sb25cIjp2ZT0wfHI7YnJlYWs7Y2FzZVwicHJlc2VydmVcIjptZT0wfHI7YnJlYWs7Y2FzZVwicHJlZml4XCI6aWYoT2U9bnVsbCwhcilBZT0wO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgcilBZT0xO2Vsc2UgQWU9MixPZT1yfX1yZXR1cm4gUmV9ZnVuY3Rpb24gVGUoYSxyKXtpZih2b2lkIDAhPT10aGlzJiZ0aGlzLmNvbnN0cnVjdG9yPT09VGUpcmV0dXJuIGUoYSk7dmFyIHM9YSx0PXMuY2hhckNvZGVBdCgwKTtpZih0PDMzKXQ9KHM9cy50cmltKCkpLmNoYXJDb2RlQXQoMCk7aWYoQmU+MClEZT1zLnJlcGxhY2UoZCx0PT09Rz9cIlwiOlwiLVwiKTtpZih0PTEsMT09PWdlKUdlPXM7ZWxzZSBFZT1zO3ZhciBpLGY9W0dlXTtpZih5ZT4wKWlmKHZvaWQgMCE9PShpPVBlKHplLHIsZixmLHBlLGJlLDAsMCwwLDApKSYmXCJzdHJpbmdcIj09dHlwZW9mIGkpcj1pO3ZhciBuPUhlKHhlLGYsciwwLDApO2lmKHllPjApaWYodm9pZCAwIT09KGk9UGUoamUsbixmLGYscGUsYmUsbi5sZW5ndGgsMCwwLDApKSYmXCJzdHJpbmdcIiE9dHlwZW9mKG49aSkpdD0wO3JldHVybiBEZT1cIlwiLEdlPVwiXCIsRWU9XCJcIixrZT0wLHBlPTEsYmU9MSx3ZSp0PT0wP246bi5yZXBsYWNlKGMsXCJcIikucmVwbGFjZShnLFwiXCIpLnJlcGxhY2UoQSxcIiQxXCIpLnJlcGxhY2UoQyxcIiQxXCIpLnJlcGxhY2UodyxcIiBcIil9aWYoVGUudXNlPWZ1bmN0aW9uIGUoYSl7c3dpdGNoKGEpe2Nhc2Ugdm9pZCAwOmNhc2UgbnVsbDp5ZT0kZS5sZW5ndGg9MDticmVhaztkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJGVbeWUrK109YTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBhKWZvcih2YXIgcj0wLGM9YS5sZW5ndGg7cjxjOysrcillKGFbcl0pO2Vsc2UgcWU9MHwhIWF9cmV0dXJuIGV9LFRlLnNldD1SZSx2b2lkIDAhPT1hKVJlKGEpO3JldHVybiBUZX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGlzLm1pbi5qcy5tYXAiLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImZ1bmN0aW9uIGFyZUlucHV0c0VxdWFsKG5ld0lucHV0cywgbGFzdElucHV0cykge1xuICBpZiAobmV3SW5wdXRzLmxlbmd0aCAhPT0gbGFzdElucHV0cy5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IG5ld0lucHV0cy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChuZXdJbnB1dHNbaV0gIT09IGxhc3RJbnB1dHNbaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gbWVtb2l6ZU9uZShyZXN1bHRGbiwgaXNFcXVhbCkge1xuICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7XG4gICAgaXNFcXVhbCA9IGFyZUlucHV0c0VxdWFsO1xuICB9XG5cbiAgdmFyIGxhc3RUaGlzO1xuICB2YXIgbGFzdEFyZ3MgPSBbXTtcbiAgdmFyIGxhc3RSZXN1bHQ7XG4gIHZhciBjYWxsZWRPbmNlID0gZmFsc2U7XG5cbiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uIG1lbW9pemVkKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBuZXdBcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgbmV3QXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBpZiAoY2FsbGVkT25jZSAmJiBsYXN0VGhpcyA9PT0gdGhpcyAmJiBpc0VxdWFsKG5ld0FyZ3MsIGxhc3RBcmdzKSkge1xuICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgfVxuXG4gICAgbGFzdFJlc3VsdCA9IHJlc3VsdEZuLmFwcGx5KHRoaXMsIG5ld0FyZ3MpO1xuICAgIGNhbGxlZE9uY2UgPSB0cnVlO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0QXJncyA9IG5ld0FyZ3M7XG4gICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZU9uZTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyICRhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuXG4vLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1Zylcbm1vZHVsZS5leHBvcnRzID0gISRhc3NpZ24gfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHZhciBBID0ge307XG4gIHZhciBCID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgUyA9IFN5bWJvbCgpO1xuICB2YXIgSyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7XG4gIEFbU10gPSA3O1xuICBLLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7IEJba10gPSBrOyB9KTtcbiAgcmV0dXJuICRhc3NpZ24oe30sIEEpW1NdICE9IDcgfHwgT2JqZWN0LmtleXMoJGFzc2lnbih7fSwgQikpLmpvaW4oJycpICE9IEs7XG59KSA/IGZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAxO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICB3aGlsZSAoYUxlbiA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRTeW1ib2xzID8gZ2V0S2V5cyhTKS5jb25jYXQoZ2V0U3ltYm9scyhTKSkgOiBnZXRLZXlzKFMpO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaiA9IDA7XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaikge1xuICAgICAga2V5ID0ga2V5c1tqKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBpc0VudW0uY2FsbChTLCBrZXkpKSBUW2tleV0gPSBTW2tleV07XG4gICAgfVxuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG4iLCIvLyA3LjIuOSBTYW1lVmFsdWUoeCwgeSlcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmlzIHx8IGZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICByZXR1cm4geCA9PT0geSA/IHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5IDogeCAhPSB4ICYmIHkgIT0geTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgYXJyYXlTbGljZSA9IFtdLnNsaWNlO1xudmFyIGZhY3RvcmllcyA9IHt9O1xuXG52YXIgY29uc3RydWN0ID0gZnVuY3Rpb24gKEYsIGxlbiwgYXJncykge1xuICBpZiAoIShsZW4gaW4gZmFjdG9yaWVzKSkge1xuICAgIGZvciAodmFyIG4gPSBbXSwgaSA9IDA7IGkgPCBsZW47IGkrKykgbltpXSA9ICdhWycgKyBpICsgJ10nO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgIGZhY3Rvcmllc1tsZW5dID0gRnVuY3Rpb24oJ0YsYScsICdyZXR1cm4gbmV3IEYoJyArIG4uam9pbignLCcpICsgJyknKTtcbiAgfSByZXR1cm4gZmFjdG9yaWVzW2xlbl0oRiwgYXJncyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmJpbmQgfHwgZnVuY3Rpb24gYmluZCh0aGF0IC8qICwgLi4uYXJncyAqLykge1xuICB2YXIgZm4gPSBhRnVuY3Rpb24odGhpcyk7XG4gIHZhciBwYXJ0QXJncyA9IGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICB2YXIgYm91bmQgPSBmdW5jdGlvbiAoLyogYXJncy4uLiAqLykge1xuICAgIHZhciBhcmdzID0gcGFydEFyZ3MuY29uY2F0KGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kID8gY29uc3RydWN0KGZuLCBhcmdzLmxlbmd0aCwgYXJncykgOiBpbnZva2UoZm4sIGFyZ3MsIHRoYXQpO1xuICB9O1xuICBpZiAoaXNPYmplY3QoZm4ucHJvdG90eXBlKSkgYm91bmQucHJvdG90eXBlID0gZm4ucHJvdG90eXBlO1xuICByZXR1cm4gYm91bmQ7XG59O1xuIiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgYXJncywgdGhhdCkge1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiB1biA/IGZuKClcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCk7XG4gICAgY2FzZSAxOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgY2FzZSA0OiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgfSByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuIiwidmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIHdzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgaGV4ID0gL15bLStdPzBbeFhdLztcblxubW9kdWxlLmV4cG9ydHMgPSAkcGFyc2VJbnQod3MgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod3MgKyAnMHgxNicpICE9PSAyMiA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0ciwgcmFkaXgpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgcmV0dXJuICRwYXJzZUludChzdHJpbmcsIChyYWRpeCA+Pj4gMCkgfHwgKGhleC50ZXN0KHN0cmluZykgPyAxNiA6IDEwKSk7XG59IDogJHBhcnNlSW50O1xuIiwidmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VGbG9hdDtcbnZhciAkdHJpbSA9IHJlcXVpcmUoJy4vX3N0cmluZy10cmltJykudHJpbTtcblxubW9kdWxlLmV4cG9ydHMgPSAxIC8gJHBhcnNlRmxvYXQocmVxdWlyZSgnLi9fc3RyaW5nLXdzJykgKyAnLTAnKSAhPT0gLUluZmluaXR5ID8gZnVuY3Rpb24gcGFyc2VGbG9hdChzdHIpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgdmFyIHJlc3VsdCA9ICRwYXJzZUZsb2F0KHN0cmluZyk7XG4gIHJldHVybiByZXN1bHQgPT09IDAgJiYgc3RyaW5nLmNoYXJBdCgwKSA9PSAnLScgPyAtMCA6IHJlc3VsdDtcbn0gOiAkcGFyc2VGbG9hdDtcbiIsInZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBtc2cpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnbnVtYmVyJyAmJiBjb2YoaXQpICE9ICdOdW1iZXInKSB0aHJvdyBUeXBlRXJyb3IobXNnKTtcbiAgcmV0dXJuICtpdDtcbn07XG4iLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNJbnRlZ2VyKGl0KSB7XG4gIHJldHVybiAhaXNPYmplY3QoaXQpICYmIGlzRmluaXRlKGl0KSAmJiBmbG9vcihpdCkgPT09IGl0O1xufTtcbiIsIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGgubG9nMXAgfHwgZnVuY3Rpb24gbG9nMXAoeCkge1xuICByZXR1cm4gKHggPSAreCkgPiAtMWUtOCAmJiB4IDwgMWUtOCA/IHggLSB4ICogeCAvIDIgOiBNYXRoLmxvZygxICsgeCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG4iLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZW50cmllcyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICAvLyA3LjQuNiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIGFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCJ2YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBjYWxsYmFja2ZuLCBhTGVuLCBtZW1vLCBpc1JpZ2h0KSB7XG4gIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGF0KTtcbiAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgaW5kZXggPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDA7XG4gIHZhciBpID0gaXNSaWdodCA/IC0xIDogMTtcbiAgaWYgKGFMZW4gPCAyKSBmb3IgKDs7KSB7XG4gICAgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICAgIG1lbW8gPSBzZWxmW2luZGV4XTtcbiAgICAgIGluZGV4ICs9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggKz0gaTtcbiAgICBpZiAoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlJyk7XG4gICAgfVxuICB9XG4gIGZvciAoO2lzUmlnaHQgPyBpbmRleCA+PSAwIDogbGVuZ3RoID4gaW5kZXg7IGluZGV4ICs9IGkpIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgbWVtbyA9IGNhbGxiYWNrZm4obWVtbywgc2VsZltpbmRleF0sIGluZGV4LCBPKTtcbiAgfVxuICByZXR1cm4gbWVtbztcbn07XG4iLCIvLyAyMi4xLjMuMyBBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0LCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXS5jb3B5V2l0aGluIHx8IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0IC8qID0gMCAqLywgc3RhcnQgLyogPSAwLCBlbmQgPSBAbGVuZ3RoICovKSB7XG4gIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gIHZhciBsZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gIHZhciB0byA9IHRvQWJzb2x1dGVJbmRleCh0YXJnZXQsIGxlbik7XG4gIHZhciBmcm9tID0gdG9BYnNvbHV0ZUluZGV4KHN0YXJ0LCBsZW4pO1xuICB2YXIgZW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gIHZhciBjb3VudCA9IE1hdGgubWluKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbikpIC0gZnJvbSwgbGVuIC0gdG8pO1xuICB2YXIgaW5jID0gMTtcbiAgaWYgKGZyb20gPCB0byAmJiB0byA8IGZyb20gKyBjb3VudCkge1xuICAgIGluYyA9IC0xO1xuICAgIGZyb20gKz0gY291bnQgLSAxO1xuICAgIHRvICs9IGNvdW50IC0gMTtcbiAgfVxuICB3aGlsZSAoY291bnQtLSA+IDApIHtcbiAgICBpZiAoZnJvbSBpbiBPKSBPW3RvXSA9IE9bZnJvbV07XG4gICAgZWxzZSBkZWxldGUgT1t0b107XG4gICAgdG8gKz0gaW5jO1xuICAgIGZyb20gKz0gaW5jO1xuICB9IHJldHVybiBPO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xucmVxdWlyZSgnLi9fZXhwb3J0Jykoe1xuICB0YXJnZXQ6ICdSZWdFeHAnLFxuICBwcm90bzogdHJ1ZSxcbiAgZm9yY2VkOiByZWdleHBFeGVjICE9PSAvLi8uZXhlY1xufSwge1xuICBleGVjOiByZWdleHBFeGVjXG59KTtcbiIsIi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKClcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIC8uL2cuZmxhZ3MgIT0gJ2cnKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNS40LjEuNSBOZXdQcm9taXNlQ2FwYWJpbGl0eShDKVxudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcblxuZnVuY3Rpb24gUHJvbWlzZUNhcGFiaWxpdHkoQykge1xuICB2YXIgcmVzb2x2ZSwgcmVqZWN0O1xuICB0aGlzLnByb21pc2UgPSBuZXcgQyhmdW5jdGlvbiAoJCRyZXNvbHZlLCAkJHJlamVjdCkge1xuICAgIGlmIChyZXNvbHZlICE9PSB1bmRlZmluZWQgfHwgcmVqZWN0ICE9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUZ1bmN0aW9uKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCA9IGFGdW5jdGlvbihyZWplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gKEMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDLCB4KSB7XG4gIGFuT2JqZWN0KEMpO1xuICBpZiAoaXNPYmplY3QoeCkgJiYgeC5jb25zdHJ1Y3RvciA9PT0gQykgcmV0dXJuIHg7XG4gIHZhciBwcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5LmYoQyk7XG4gIHZhciByZXNvbHZlID0gcHJvbWlzZUNhcGFiaWxpdHkucmVzb2x2ZTtcbiAgcmVzb2x2ZSh4KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyICRpdGVyRGVmaW5lID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGZhc3RLZXkgPSByZXF1aXJlKCcuL19tZXRhJykuZmFzdEtleTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTSVpFID0gREVTQ1JJUFRPUlMgPyAnX3MnIDogJ3NpemUnO1xuXG52YXIgZ2V0RW50cnkgPSBmdW5jdGlvbiAodGhhdCwga2V5KSB7XG4gIC8vIGZhc3QgY2FzZVxuICB2YXIgaW5kZXggPSBmYXN0S2V5KGtleSk7XG4gIHZhciBlbnRyeTtcbiAgaWYgKGluZGV4ICE9PSAnRicpIHJldHVybiB0aGF0Ll9pW2luZGV4XTtcbiAgLy8gZnJvemVuIG9iamVjdCBjYXNlXG4gIGZvciAoZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgaWYgKGVudHJ5LmsgPT0ga2V5KSByZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24gKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpIHtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGl0ZXJhYmxlKSB7XG4gICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpO1xuICAgICAgdGhhdC5fdCA9IE5BTUU7ICAgICAgICAgLy8gY29sbGVjdGlvbiB0eXBlXG4gICAgICB0aGF0Ll9pID0gY3JlYXRlKG51bGwpOyAvLyBpbmRleFxuICAgICAgdGhhdC5fZiA9IHVuZGVmaW5lZDsgICAgLy8gZmlyc3QgZW50cnlcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7ICAgIC8vIGxhc3QgZW50cnlcbiAgICAgIHRoYXRbU0laRV0gPSAwOyAgICAgICAgIC8vIHNpemVcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMS4zLjEgTWFwLnByb3RvdHlwZS5jbGVhcigpXG4gICAgICAvLyAyMy4yLjMuMiBTZXQucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgZm9yICh2YXIgdGhhdCA9IHZhbGlkYXRlKHRoaXMsIE5BTUUpLCBkYXRhID0gdGhhdC5faSwgZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKGVudHJ5LnApIGVudHJ5LnAgPSBlbnRyeS5wLm4gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgZGVsZXRlIGRhdGFbZW50cnkuaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5fZiA9IHRoYXQuX2wgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoYXRbU0laRV0gPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy4zIE1hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjIuMy40IFNldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBlbnRyeS5uO1xuICAgICAgICAgIHZhciBwcmV2ID0gZW50cnkucDtcbiAgICAgICAgICBkZWxldGUgdGhhdC5faVtlbnRyeS5pXTtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZiAocHJldikgcHJldi5uID0gbmV4dDtcbiAgICAgICAgICBpZiAobmV4dCkgbmV4dC5wID0gcHJldjtcbiAgICAgICAgICBpZiAodGhhdC5fZiA9PSBlbnRyeSkgdGhhdC5fZiA9IG5leHQ7XG4gICAgICAgICAgaWYgKHRoYXQuX2wgPT0gZW50cnkpIHRoYXQuX2wgPSBwcmV2O1xuICAgICAgICAgIHRoYXRbU0laRV0tLTtcbiAgICAgICAgfSByZXR1cm4gISFlbnRyeTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4yLjMuNiBTZXQucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIC8vIDIzLjEuMy41IE1hcC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgICAgICB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpO1xuICAgICAgICB2YXIgZW50cnk7XG4gICAgICAgIHdoaWxlIChlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoaXMuX2YpIHtcbiAgICAgICAgICBmKGVudHJ5LnYsIGVudHJ5LmssIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yKSBlbnRyeSA9IGVudHJ5LnA7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuNyBNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy4yLjMuNyBTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gISFnZXRFbnRyeSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSwga2V5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRQKEMucHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcywgTkFNRSlbU0laRV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpO1xuICAgIHZhciBwcmV2LCBpbmRleDtcbiAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICBpZiAoZW50cnkpIHtcbiAgICAgIGVudHJ5LnYgPSB2YWx1ZTtcbiAgICAvLyBjcmVhdGUgbmV3IGVudHJ5XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQuX2wgPSBlbnRyeSA9IHtcbiAgICAgICAgaTogaW5kZXggPSBmYXN0S2V5KGtleSwgdHJ1ZSksIC8vIDwtIGluZGV4XG4gICAgICAgIGs6IGtleSwgICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSBrZXlcbiAgICAgICAgdjogdmFsdWUsICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHZhbHVlXG4gICAgICAgIHA6IHByZXYgPSB0aGF0Ll9sLCAgICAgICAgICAgICAvLyA8LSBwcmV2aW91cyBlbnRyeVxuICAgICAgICBuOiB1bmRlZmluZWQsICAgICAgICAgICAgICAgICAgLy8gPC0gbmV4dCBlbnRyeVxuICAgICAgICByOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gcmVtb3ZlZFxuICAgICAgfTtcbiAgICAgIGlmICghdGhhdC5fZikgdGhhdC5fZiA9IGVudHJ5O1xuICAgICAgaWYgKHByZXYpIHByZXYubiA9IGVudHJ5O1xuICAgICAgdGhhdFtTSVpFXSsrO1xuICAgICAgLy8gYWRkIHRvIGluZGV4XG4gICAgICBpZiAoaW5kZXggIT09ICdGJykgdGhhdC5faVtpbmRleF0gPSBlbnRyeTtcbiAgICB9IHJldHVybiB0aGF0O1xuICB9LFxuICBnZXRFbnRyeTogZ2V0RW50cnksXG4gIHNldFN0cm9uZzogZnVuY3Rpb24gKEMsIE5BTUUsIElTX01BUCkge1xuICAgIC8vIGFkZCAua2V5cywgLnZhbHVlcywgLmVudHJpZXMsIFtAQGl0ZXJhdG9yXVxuICAgIC8vIDIzLjEuMy40LCAyMy4xLjMuOCwgMjMuMS4zLjExLCAyMy4xLjMuMTIsIDIzLjIuMy41LCAyMy4yLjMuOCwgMjMuMi4zLjEwLCAyMy4yLjMuMTFcbiAgICAkaXRlckRlZmluZShDLCBOQU1FLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgICAgIHRoaXMuX3QgPSB2YWxpZGF0ZShpdGVyYXRlZCwgTkFNRSk7IC8vIHRhcmdldFxuICAgICAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgICAgICAgLy8ga2luZFxuICAgICAgdGhpcy5fbCA9IHVuZGVmaW5lZDsgICAgICAgICAgICAgICAgLy8gcHJldmlvdXNcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIga2luZCA9IHRoYXQuX2s7XG4gICAgICB2YXIgZW50cnkgPSB0aGF0Ll9sO1xuICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgLy8gZ2V0IG5leHQgZW50cnlcbiAgICAgIGlmICghdGhhdC5fdCB8fCAhKHRoYXQuX2wgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoYXQuX3QuX2YpKSB7XG4gICAgICAgIC8vIG9yIGZpbmlzaCB0aGUgaXRlcmF0aW9uXG4gICAgICAgIHRoYXQuX3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBzdGVwKDEpO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHN0ZXAgYnkga2luZFxuICAgICAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS5rKTtcbiAgICAgIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS52KTtcbiAgICAgIHJldHVybiBzdGVwKDAsIFtlbnRyeS5rLCBlbnRyeS52XSk7XG4gICAgfSwgSVNfTUFQID8gJ2VudHJpZXMnIDogJ3ZhbHVlcycsICFJU19NQVAsIHRydWUpO1xuXG4gICAgLy8gYWRkIFtAQHNwZWNpZXNdLCAyMy4xLjIuMiwgMjMuMi4yLjJcbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZ2V0V2VhayA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xudmFyICRoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbnZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xudmFyIGlkID0gMDtcblxuLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzXG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICh0aGF0KSB7XG4gIHJldHVybiB0aGF0Ll9sIHx8ICh0aGF0Ll9sID0gbmV3IFVuY2F1Z2h0RnJvemVuU3RvcmUoKSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuYSA9IFtdO1xufTtcbnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbiAoc3RvcmUsIGtleSkge1xuICByZXR1cm4gYXJyYXlGaW5kKHN0b3JlLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSByZXR1cm4gZW50cnlbMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSBlbnRyeVsxXSA9IHZhbHVlO1xuICAgIGVsc2UgdGhpcy5hLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSxcbiAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gICAgfSk7XG4gICAgaWYgKH5pbmRleCkgdGhpcy5hLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuICEhfmluZGV4O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGlkKys7ICAgICAgLy8gY29sbGVjdGlvbiBpZFxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgLy8gbGVhayBzdG9yZSBmb3IgdW5jYXVnaHQgZnJvemVuIG9iamVjdHNcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKVsnZGVsZXRlJ10oa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKSAmJiBkZWxldGUgZGF0YVt0aGlzLl9pXTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4zLjMuNCBXZWFrTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuNC4zLjQgV2Vha1NldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKS5oYXMoa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmVcbn07XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy10b2luZGV4XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIDA7XG4gIHZhciBudW1iZXIgPSB0b0ludGVnZXIoaXQpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgobnVtYmVyKTtcbiAgaWYgKG51bWJlciAhPT0gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBsZW5ndGghJyk7XG4gIHJldHVybiBsZW5ndGg7XG59O1xuIiwiLy8gYWxsIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBub24tZW51bWVyYWJsZSBhbmQgc3ltYm9sc1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgUmVmbGVjdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IFJlZmxlY3QgJiYgUmVmbGVjdC5vd25LZXlzIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnT1BOLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHJldHVybiBnZXRTeW1ib2xzID8ga2V5cy5jb25jYXQoZ2V0U3ltYm9scyhpdCkpIDoga2V5cztcbn07XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgcmVwZWF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIG1heExlbmd0aCwgZmlsbFN0cmluZywgbGVmdCkge1xuICB2YXIgUyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbiAgdmFyIHN0cmluZ0xlbmd0aCA9IFMubGVuZ3RoO1xuICB2YXIgZmlsbFN0ciA9IGZpbGxTdHJpbmcgPT09IHVuZGVmaW5lZCA/ICcgJyA6IFN0cmluZyhmaWxsU3RyaW5nKTtcbiAgdmFyIGludE1heExlbmd0aCA9IHRvTGVuZ3RoKG1heExlbmd0aCk7XG4gIGlmIChpbnRNYXhMZW5ndGggPD0gc3RyaW5nTGVuZ3RoIHx8IGZpbGxTdHIgPT0gJycpIHJldHVybiBTO1xuICB2YXIgZmlsbExlbiA9IGludE1heExlbmd0aCAtIHN0cmluZ0xlbmd0aDtcbiAgdmFyIHN0cmluZ0ZpbGxlciA9IHJlcGVhdC5jYWxsKGZpbGxTdHIsIE1hdGguY2VpbChmaWxsTGVuIC8gZmlsbFN0ci5sZW5ndGgpKTtcbiAgaWYgKHN0cmluZ0ZpbGxlci5sZW5ndGggPiBmaWxsTGVuKSBzdHJpbmdGaWxsZXIgPSBzdHJpbmdGaWxsZXIuc2xpY2UoMCwgZmlsbExlbik7XG4gIHJldHVybiBsZWZ0ID8gc3RyaW5nRmlsbGVyICsgUyA6IFMgKyBzdHJpbmdGaWxsZXI7XG59O1xuIiwidmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgaXNFbnVtID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpc0VudHJpZXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpdCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KGl0KTtcbiAgICB2YXIga2V5cyA9IGdldEtleXMoTyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaSkge1xuICAgICAga2V5ID0ga2V5c1tpKytdO1xuICAgICAgaWYgKCFERVNDUklQVE9SUyB8fCBpc0VudW0uY2FsbChPLCBrZXkpKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGlzRW50cmllcyA/IFtrZXksIE9ba2V5XV0gOiBPW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuNicgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiKGZ1bmN0aW9uIChmYWN0b3J5KSB7XG5cdHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IChtb2R1bGVbJ2V4cG9ydHMnXSA9IGZhY3RvcnkoKSkgOlxuXHRcdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lWydhbWQnXSA/IGRlZmluZShmYWN0b3J5KCkpIDpcblx0XHRcdCh3aW5kb3dbJ3N0eWxpc1J1bGVTaGVldCddID0gZmFjdG9yeSgpKVxufShmdW5jdGlvbiAoKSB7XG5cblx0J3VzZSBzdHJpY3QnXG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbnNlcnRSdWxlKSB7XG5cdFx0dmFyIGRlbGltaXRlciA9ICcvKnwqLydcblx0XHR2YXIgbmVlZGxlID0gZGVsaW1pdGVyKyd9J1xuXG5cdFx0ZnVuY3Rpb24gdG9TaGVldCAoYmxvY2spIHtcblx0XHRcdGlmIChibG9jaylcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRpbnNlcnRSdWxlKGJsb2NrICsgJ30nKVxuXHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdH1cblxuXHRcdHJldHVybiBmdW5jdGlvbiBydWxlU2hlZXQgKGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycywgcGFyZW50cywgbGluZSwgY29sdW1uLCBsZW5ndGgsIG5zLCBkZXB0aCwgYXQpIHtcblx0XHRcdHN3aXRjaCAoY29udGV4dCkge1xuXHRcdFx0XHQvLyBwcm9wZXJ0eVxuXHRcdFx0XHRjYXNlIDE6XG5cdFx0XHRcdFx0Ly8gQGltcG9ydFxuXHRcdFx0XHRcdGlmIChkZXB0aCA9PT0gMCAmJiBjb250ZW50LmNoYXJDb2RlQXQoMCkgPT09IDY0KVxuXHRcdFx0XHRcdFx0cmV0dXJuIGluc2VydFJ1bGUoY29udGVudCsnOycpLCAnJ1xuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdC8vIHNlbGVjdG9yXG5cdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRpZiAobnMgPT09IDApXG5cdFx0XHRcdFx0XHRyZXR1cm4gY29udGVudCArIGRlbGltaXRlclxuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHRcdC8vIGF0LXJ1bGVcblx0XHRcdFx0Y2FzZSAzOlxuXHRcdFx0XHRcdHN3aXRjaCAobnMpIHtcblx0XHRcdFx0XHRcdC8vIEBmb250LWZhY2UsIEBwYWdlXG5cdFx0XHRcdFx0XHRjYXNlIDEwMjpcblx0XHRcdFx0XHRcdGNhc2UgMTEyOlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShzZWxlY3RvcnNbMF0rY29udGVudCksICcnXG5cdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gY29udGVudCArIChhdCA9PT0gMCA/IGRlbGltaXRlciA6ICcnKVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0Y2FzZSAtMjpcblx0XHRcdFx0XHRjb250ZW50LnNwbGl0KG5lZWRsZSkuZm9yRWFjaCh0b1NoZWV0KVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSkpXG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVjb2Rpbmd8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9hZGluZ3xsb29wfGxvd3xtYXJnaW5IZWlnaHR8bWFyZ2luV2lkdGh8bWF4fG1heExlbmd0aHxtZWRpYXxtZWRpYUdyb3VwfG1ldGhvZHxtaW58bWluTGVuZ3RofG11bHRpcGxlfG11dGVkfG5hbWV8bm9uY2V8bm9WYWxpZGF0ZXxvcGVufG9wdGltdW18cGF0dGVybnxwbGFjZWhvbGRlcnxwbGF5c0lubGluZXxwb3N0ZXJ8cHJlbG9hZHxwcm9maWxlfHJhZGlvR3JvdXB8cmVhZE9ubHl8cmVmZXJyZXJQb2xpY3l8cmVsfHJlcXVpcmVkfHJldmVyc2VkfHJvbGV8cm93c3xyb3dTcGFufHNhbmRib3h8c2NvcGV8c2NvcGVkfHNjcm9sbGluZ3xzZWFtbGVzc3xzZWxlY3RlZHxzaGFwZXxzaXplfHNpemVzfHNsb3R8c3BhbnxzcGVsbENoZWNrfHNyY3xzcmNEb2N8c3JjTGFuZ3xzcmNTZXR8c3RhcnR8c3RlcHxzdHlsZXxzdW1tYXJ5fHRhYkluZGV4fHRhcmdldHx0aXRsZXx0eXBlfHVzZU1hcHx2YWx1ZXx3aWR0aHx3bW9kZXx3cmFwfGFib3V0fGRhdGF0eXBlfGlubGlzdHxwcmVmaXh8cHJvcGVydHl8cmVzb3VyY2V8dHlwZW9mfHZvY2FifGF1dG9DYXBpdGFsaXplfGF1dG9Db3JyZWN0fGF1dG9TYXZlfGNvbG9yfGl0ZW1Qcm9wfGl0ZW1TY29wZXxpdGVtVHlwZXxpdGVtSUR8aXRlbVJlZnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC87IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmZWU2OGE0Y2Q3ZTYwMDllZjYxZDIzXG5cbnZhciBpbmRleCA9IG1lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgcmV0dXJuIHJlYWN0UHJvcHNSZWdleC50ZXN0KHByb3ApIHx8IHByb3AuY2hhckNvZGVBdCgwKSA9PT0gMTExXG4gIC8qIG8gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDEpID09PSAxMTBcbiAgLyogbiAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMikgPCA5MTtcbn1cbi8qIForMSAqL1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCIvKipcclxuICogUmV0dXJucyB0aGUgb2JqZWN0IHR5cGUgb2YgdGhlIGdpdmVuIHBheWxvYWRcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRUeXBlKHBheWxvYWQpIHtcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocGF5bG9hZCkuc2xpY2UoOCwgLTEpO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgdW5kZWZpbmVkXHJcbiAqXHJcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZFxyXG4gKiBAcmV0dXJucyB7cGF5bG9hZCBpcyB1bmRlZmluZWR9XHJcbiAqL1xyXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gZ2V0VHlwZShwYXlsb2FkKSA9PT0gJ1VuZGVmaW5lZCc7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBudWxsXHJcbiAqXHJcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZFxyXG4gKiBAcmV0dXJucyB7cGF5bG9hZCBpcyBudWxsfVxyXG4gKi9cclxuZnVuY3Rpb24gaXNOdWxsKHBheWxvYWQpIHtcclxuICAgIHJldHVybiBnZXRUeXBlKHBheWxvYWQpID09PSAnTnVsbCc7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhIHBsYWluIEphdmFTY3JpcHQgb2JqZWN0IChleGNsdWRpbmcgc3BlY2lhbCBjbGFzc2VzIG9yIG9iamVjdHMgd2l0aCBvdGhlciBwcm90b3R5cGVzKVxyXG4gKlxyXG4gKiBAcGFyYW0geyp9IHBheWxvYWRcclxuICogQHJldHVybnMge3BheWxvYWQgaXMge1trZXk6IHN0cmluZ106IGFueX19XHJcbiAqL1xyXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHBheWxvYWQpIHtcclxuICAgIGlmIChnZXRUeXBlKHBheWxvYWQpICE9PSAnT2JqZWN0JylcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICByZXR1cm4gKHBheWxvYWQuY29uc3RydWN0b3IgPT09IE9iamVjdCAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YocGF5bG9hZCkgPT09IE9iamVjdC5wcm90b3R5cGUpO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgYSBwbGFpbiBKYXZhU2NyaXB0IG9iamVjdCAoZXhjbHVkaW5nIHNwZWNpYWwgY2xhc3NlcyBvciBvYmplY3RzIHdpdGggb3RoZXIgcHJvdG90eXBlcylcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIHtba2V5OiBzdHJpbmddOiBhbnl9fVxyXG4gKi9cclxuZnVuY3Rpb24gaXNPYmplY3QocGF5bG9hZCkge1xyXG4gICAgcmV0dXJuIGlzUGxhaW5PYmplY3QocGF5bG9hZCk7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBhbnkga2luZCBvZiBvYmplY3QgKGluY2x1ZGluZyBzcGVjaWFsIGNsYXNzZXMgb3Igb2JqZWN0cyB3aXRoIGRpZmZlcmVudCBwcm90b3R5cGVzKVxyXG4gKlxyXG4gKiBAcGFyYW0geyp9IHBheWxvYWRcclxuICogQHJldHVybnMge3BheWxvYWQgaXMge1trZXk6IHN0cmluZ106IGFueX19XHJcbiAqL1xyXG5mdW5jdGlvbiBpc0FueU9iamVjdChwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gZ2V0VHlwZShwYXlsb2FkKSA9PT0gJ09iamVjdCc7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBvYmplY3QgbGlrZSBhIHR5cGUgcGFzc2VkIGluIDwgPlxyXG4gKlxyXG4gKiBVc2FnZTogaXNPYmplY3RMaWtlPHtpZDogYW55fT4ocGF5bG9hZCkgLy8gd2lsbCBtYWtlIHN1cmUgaXQncyBhbiBvYmplY3QgYW5kIGhhcyBhbiBgaWRgIHByb3AuXHJcbiAqXHJcbiAqIEB0ZW1wbGF0ZSBUIHRoaXMgbXVzdCBiZSBwYXNzZWQgaW4gPCA+XHJcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZFxyXG4gKiBAcmV0dXJucyB7cGF5bG9hZCBpcyBUfVxyXG4gKi9cclxuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHBheWxvYWQpIHtcclxuICAgIHJldHVybiBpc0FueU9iamVjdChwYXlsb2FkKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgZnVuY3Rpb25cclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIEZ1bmN0aW9ufVxyXG4gKi9cclxuZnVuY3Rpb24gaXNGdW5jdGlvbihwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gZ2V0VHlwZShwYXlsb2FkKSA9PT0gJ0Z1bmN0aW9uJztcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGFycmF5XHJcbiAqXHJcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZFxyXG4gKiBAcmV0dXJucyB7cGF5bG9hZCBpcyB1bmRlZmluZWR9XHJcbiAqL1xyXG5mdW5jdGlvbiBpc0FycmF5KHBheWxvYWQpIHtcclxuICAgIHJldHVybiBnZXRUeXBlKHBheWxvYWQpID09PSAnQXJyYXknO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgYSBzdHJpbmdcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIHN0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGlzU3RyaW5nKHBheWxvYWQpIHtcclxuICAgIHJldHVybiBnZXRUeXBlKHBheWxvYWQpID09PSAnU3RyaW5nJztcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgc3RyaW5nLCBCVVQgcmV0dXJucyBmYWxzZSBmb3IgJydcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIHN0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGlzRnVsbFN0cmluZyhwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gaXNTdHJpbmcocGF5bG9hZCkgJiYgcGF5bG9hZCAhPT0gJyc7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyAnJ1xyXG4gKlxyXG4gKiBAcGFyYW0geyp9IHBheWxvYWRcclxuICogQHJldHVybnMge3BheWxvYWQgaXMgc3RyaW5nfVxyXG4gKi9cclxuZnVuY3Rpb24gaXNFbXB0eVN0cmluZyhwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gcGF5bG9hZCA9PT0gJyc7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhIG51bWJlclxyXG4gKlxyXG4gKiBUaGlzIHdpbGwgcmV0dXJuIGZhbHNlIGZvciBOYU5cclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIG51bWJlcn1cclxuICovXHJcbmZ1bmN0aW9uIGlzTnVtYmVyKHBheWxvYWQpIHtcclxuICAgIHJldHVybiAoZ2V0VHlwZShwYXlsb2FkKSA9PT0gJ051bWJlcicgJiYgIWlzTmFOKHBheWxvYWQpKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgYm9vbGVhblxyXG4gKlxyXG4gKiBAcGFyYW0geyp9IHBheWxvYWRcclxuICogQHJldHVybnMge3BheWxvYWQgaXMgYm9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIGlzQm9vbGVhbihwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gZ2V0VHlwZShwYXlsb2FkKSA9PT0gJ0Jvb2xlYW4nO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgYSByZWd1bGFyIGV4cHJlc3Npb25cclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIFJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIGlzUmVnRXhwKHBheWxvYWQpIHtcclxuICAgIHJldHVybiBnZXRUeXBlKHBheWxvYWQpID09PSAnUmVnRXhwJztcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgZGF0ZSwgYW5kIHRoYXQgdGhlIGRhdGUgaXMgVmFsaWRcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIERhdGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBpc0RhdGUocGF5bG9hZCkge1xyXG4gICAgcmV0dXJuIChnZXRUeXBlKHBheWxvYWQpID09PSAnRGF0ZScgJiYgIWlzTmFOKHBheWxvYWQpKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgU3ltYm9sXHJcbiAqXHJcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZFxyXG4gKiBAcmV0dXJucyB7cGF5bG9hZCBpcyBTeW1ib2x9XHJcbiAqL1xyXG5mdW5jdGlvbiBpc1N5bWJvbChwYXlsb2FkKSB7XHJcbiAgICByZXR1cm4gKGdldFR5cGUocGF5bG9hZCkgPT09ICdTeW1ib2wnKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGEgcHJpbWl0aXZlIHR5cGUgKGVnLiBCb29sZWFuIHwgTnVsbCB8IFVuZGVmaW5lZCB8IE51bWJlciB8IFN0cmluZyB8IFN5bWJvbClcclxuICpcclxuICogQHBhcmFtIHsqfSBwYXlsb2FkXHJcbiAqIEByZXR1cm5zIHsqfVxyXG4gKi9cclxuZnVuY3Rpb24gaXNQcmltaXRpdmUocGF5bG9hZCkge1xyXG4gICAgcmV0dXJuIChpc0Jvb2xlYW4ocGF5bG9hZCkgfHxcclxuICAgICAgICBpc051bGwocGF5bG9hZCkgfHxcclxuICAgICAgICBpc1VuZGVmaW5lZChwYXlsb2FkKSB8fFxyXG4gICAgICAgIGlzTnVtYmVyKHBheWxvYWQpIHx8XHJcbiAgICAgICAgaXNTdHJpbmcocGF5bG9hZCkgfHxcclxuICAgICAgICBpc1N5bWJvbChwYXlsb2FkKSk7XHJcbn1cclxuLyoqXHJcbiAqIERvZXMgYSBnZW5lcmljIGNoZWNrIHRvIGNoZWNrIHRoYXQgdGhlIGdpdmVuIHBheWxvYWQgaXMgb2YgYSBnaXZlbiB0eXBlLlxyXG4gKiBJbiBjYXNlcyBsaWtlIE51bWJlciwgaXQgd2lsbCByZXR1cm4gdHJ1ZSBmb3IgTmFOIGFzIE5hTiBpcyBhIE51bWJlciAodGhhbmtzIGphdmFzY3JpcHQhKTtcclxuICogSXQgd2lsbCwgaG93ZXZlciwgZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIG9iamVjdCBhbmQgbnVsbFxyXG4gKlxyXG4gKiBAdGVtcGxhdGUgVFxyXG4gKiBAcGFyYW0geyp9IHBheWxvYWRcclxuICogQHBhcmFtIHtUfSB0eXBlXHJcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gV2lsbCB0aHJvdyB0eXBlIGVycm9yIGlmIHR5cGUgaXMgYW4gaW52YWxpZCB0eXBlXHJcbiAqIEByZXR1cm5zIHtwYXlsb2FkIGlzIFR9XHJcbiAqL1xyXG5mdW5jdGlvbiBpc1R5cGUocGF5bG9hZCwgdHlwZSkge1xyXG4gICAgaWYgKCEodHlwZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xyXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1R5cGUgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoIXR5cGUuaGFzT3duUHJvcGVydHkoJ3Byb3RvdHlwZScpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVHlwZSBpcyBub3QgYSBjbGFzcycpO1xyXG4gICAgfVxyXG4gICAgLy8gQ2xhc3NlcyB1c3VhbGx5IGhhdmUgbmFtZXMgKGFzIGZ1bmN0aW9ucyB1c3VhbGx5IGhhdmUgbmFtZXMpXHJcbiAgICB2YXIgbmFtZSA9IHR5cGUubmFtZTtcclxuICAgIHJldHVybiAoZ2V0VHlwZShwYXlsb2FkKSA9PT0gbmFtZSkgfHwgQm9vbGVhbihwYXlsb2FkICYmIChwYXlsb2FkLmNvbnN0cnVjdG9yID09PSB0eXBlKSk7XHJcbn1cblxuZXhwb3J0IHsgZ2V0VHlwZSwgaXNVbmRlZmluZWQsIGlzTnVsbCwgaXNQbGFpbk9iamVjdCwgaXNPYmplY3QsIGlzQW55T2JqZWN0LCBpc09iamVjdExpa2UsIGlzRnVuY3Rpb24sIGlzQXJyYXksIGlzU3RyaW5nLCBpc0Z1bGxTdHJpbmcsIGlzRW1wdHlTdHJpbmcsIGlzTnVtYmVyLCBpc0Jvb2xlYW4sIGlzUmVnRXhwLCBpc0RhdGUsIGlzU3ltYm9sLCBpc1ByaW1pdGl2ZSwgaXNUeXBlIH07XG4iLCJpbXBvcnQgeyBpc0FycmF5LCBpc1BsYWluT2JqZWN0LCBpc1N5bWJvbCB9IGZyb20gJ2lzLXdoYXQnO1xuXG5mdW5jdGlvbiBhc3NpZ25Qcm9wKGNhcnJ5LCBrZXksIG5ld1ZhbCwgb3JpZ2luYWxPYmplY3QpIHtcclxuICAgIHZhciBwcm9wVHlwZSA9IG9yaWdpbmFsT2JqZWN0LnByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSlcclxuICAgICAgICA/ICdlbnVtZXJhYmxlJ1xyXG4gICAgICAgIDogJ25vbmVudW1lcmFibGUnO1xyXG4gICAgaWYgKHByb3BUeXBlID09PSAnZW51bWVyYWJsZScpXHJcbiAgICAgICAgY2Fycnlba2V5XSA9IG5ld1ZhbDtcclxuICAgIGlmIChwcm9wVHlwZSA9PT0gJ25vbmVudW1lcmFibGUnKSB7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNhcnJ5LCBrZXksIHtcclxuICAgICAgICAgICAgdmFsdWU6IG5ld1ZhbCxcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBtZXJnZVJlY3Vyc2l2ZWx5KG9yaWdpbiwgbmV3Q29tZXIsIGV4dGVuc2lvbnMpIHtcclxuICAgIC8vIHdvcmsgZGlyZWN0bHkgb24gbmV3Q29tZXIgaWYgaXRzIG5vdCBhbiBvYmplY3RcclxuICAgIGlmICghaXNQbGFpbk9iamVjdChuZXdDb21lcikpIHtcclxuICAgICAgICAvLyBleHRlbmQgbWVyZ2UgcnVsZXNcclxuICAgICAgICBpZiAoZXh0ZW5zaW9ucyAmJiBpc0FycmF5KGV4dGVuc2lvbnMpKSB7XHJcbiAgICAgICAgICAgIGV4dGVuc2lvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXh0ZW5kKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdDb21lciA9IGV4dGVuZChvcmlnaW4sIG5ld0NvbWVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXdDb21lcjtcclxuICAgIH1cclxuICAgIC8vIGRlZmluZSBuZXdPYmplY3QgdG8gbWVyZ2UgYWxsIHZhbHVlcyB1cG9uXHJcbiAgICB2YXIgbmV3T2JqZWN0ID0ge307XHJcbiAgICBpZiAoaXNQbGFpbk9iamVjdChvcmlnaW4pKSB7XHJcbiAgICAgICAgdmFyIHByb3BzXzEgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvcmlnaW4pO1xyXG4gICAgICAgIHZhciBzeW1ib2xzXzEgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9yaWdpbik7XHJcbiAgICAgICAgbmV3T2JqZWN0ID0gcHJvcHNfMS5jb25jYXQoc3ltYm9sc18xKS5yZWR1Y2UoZnVuY3Rpb24gKGNhcnJ5LCBrZXkpIHtcclxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0VmFsID0gb3JpZ2luW2tleV07XHJcbiAgICAgICAgICAgIGlmICgoIWlzU3ltYm9sKGtleSkgJiYgIU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG5ld0NvbWVyKS5pbmNsdWRlcyhrZXkpKSB8fFxyXG4gICAgICAgICAgICAgICAgKGlzU3ltYm9sKGtleSkgJiYgIU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobmV3Q29tZXIpLmluY2x1ZGVzKGtleSkpKSB7XHJcbiAgICAgICAgICAgICAgICBhc3NpZ25Qcm9wKGNhcnJ5LCBrZXksIHRhcmdldFZhbCwgb3JpZ2luKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gY2Fycnk7XHJcbiAgICAgICAgfSwge30pO1xyXG4gICAgfVxyXG4gICAgdmFyIHByb3BzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMobmV3Q29tZXIpO1xyXG4gICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG5ld0NvbWVyKTtcclxuICAgIHZhciByZXN1bHQgPSBwcm9wcy5jb25jYXQoc3ltYm9scykucmVkdWNlKGZ1bmN0aW9uIChjYXJyeSwga2V5KSB7XHJcbiAgICAgICAgLy8gcmUtZGVmaW5lIHRoZSBvcmlnaW4gYW5kIG5ld0NvbWVyIGFzIHRhcmdldFZhbCBhbmQgbmV3VmFsXHJcbiAgICAgICAgdmFyIG5ld1ZhbCA9IG5ld0NvbWVyW2tleV07XHJcbiAgICAgICAgdmFyIHRhcmdldFZhbCA9IChpc1BsYWluT2JqZWN0KG9yaWdpbikpXHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgPyBvcmlnaW5ba2V5XVxyXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgICAgICAvLyBleHRlbmQgbWVyZ2UgcnVsZXNcclxuICAgICAgICBpZiAoZXh0ZW5zaW9ucyAmJiBpc0FycmF5KGV4dGVuc2lvbnMpKSB7XHJcbiAgICAgICAgICAgIGV4dGVuc2lvbnMuZm9yRWFjaChmdW5jdGlvbiAoZXh0ZW5kKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdWYWwgPSBleHRlbmQodGFyZ2V0VmFsLCBuZXdWYWwpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gV2hlbiBuZXdWYWwgaXMgYW4gb2JqZWN0IGRvIHRoZSBtZXJnZSByZWN1cnNpdmVseVxyXG4gICAgICAgIGlmICh0YXJnZXRWYWwgIT09IHVuZGVmaW5lZCAmJiBpc1BsYWluT2JqZWN0KG5ld1ZhbCkpIHtcclxuICAgICAgICAgICAgbmV3VmFsID0gbWVyZ2VSZWN1cnNpdmVseSh0YXJnZXRWYWwsIG5ld1ZhbCwgZXh0ZW5zaW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFzc2lnblByb3AoY2FycnksIGtleSwgbmV3VmFsLCBuZXdDb21lcik7XHJcbiAgICAgICAgcmV0dXJuIGNhcnJ5O1xyXG4gICAgfSwgbmV3T2JqZWN0KTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuLyoqXHJcbiAqIE1lcmdlIGFueXRoaW5nIHJlY3Vyc2l2ZWx5LlxyXG4gKiBPYmplY3RzIGdldCBtZXJnZWQsIHNwZWNpYWwgb2JqZWN0cyAoY2xhc3NlcyBldGMuKSBhcmUgcmUtYXNzaWduZWQgXCJhcyBpc1wiLlxyXG4gKiBCYXNpYyB0eXBlcyBvdmVyd3JpdGUgb2JqZWN0cyBvciBvdGhlciBiYXNpYyB0eXBlcy5cclxuICpcclxuICogQHBhcmFtIHsoSUNvbmZpZyB8IGFueSl9IG9yaWdpblxyXG4gKiBAcGFyYW0gey4uLmFueVtdfSBuZXdDb21lcnNcclxuICogQHJldHVybnMgdGhlIHJlc3VsdFxyXG4gKi9cclxuZnVuY3Rpb24gbWVyZ2Uob3JpZ2luKSB7XHJcbiAgICB2YXIgbmV3Q29tZXJzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIG5ld0NvbWVyc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIHZhciBleHRlbnNpb25zID0gbnVsbDtcclxuICAgIHZhciBiYXNlID0gb3JpZ2luO1xyXG4gICAgaWYgKGlzUGxhaW5PYmplY3Qob3JpZ2luKSAmJiBvcmlnaW4uZXh0ZW5zaW9ucyAmJiBPYmplY3Qua2V5cyhvcmlnaW4pLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgIGJhc2UgPSB7fTtcclxuICAgICAgICBleHRlbnNpb25zID0gb3JpZ2luLmV4dGVuc2lvbnM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3Q29tZXJzLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCBuZXdDb21lcikge1xyXG4gICAgICAgIHJldHVybiBtZXJnZVJlY3Vyc2l2ZWx5KHJlc3VsdCwgbmV3Q29tZXIsIGV4dGVuc2lvbnMpO1xyXG4gICAgfSwgYmFzZSk7XHJcbn1cblxuZnVuY3Rpb24gY29uY2F0QXJyYXlzKG9yaWdpblZhbCwgbmV3VmFsKSB7XHJcbiAgICBpZiAoaXNBcnJheShvcmlnaW5WYWwpICYmIGlzQXJyYXkobmV3VmFsKSkge1xyXG4gICAgICAgIC8vIGNvbmNhdCBsb2dpY1xyXG4gICAgICAgIHJldHVybiBvcmlnaW5WYWwuY29uY2F0KG5ld1ZhbCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3VmFsOyAvLyBhbHdheXMgcmV0dXJuIG5ld1ZhbCBhcyBmYWxsYmFjayEhXHJcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVyZ2U7XG5leHBvcnQgeyBtZXJnZSwgY29uY2F0QXJyYXlzIH07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcIi4vbm9Db25mbGljdFwiKTtcblxudmFyIF9nbG9iYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vZ2xvYmFsXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuaWYgKF9nbG9iYWwuZGVmYXVsdC5fYmFiZWxQb2x5ZmlsbCAmJiB0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb25zb2xlLndhcm4pIHtcbiAgY29uc29sZS53YXJuKFwiQGJhYmVsL3BvbHlmaWxsIGlzIGxvYWRlZCBtb3JlIHRoYW4gb25jZSBvbiB0aGlzIHBhZ2UuIFRoaXMgaXMgcHJvYmFibHkgbm90IGRlc2lyYWJsZS9pbnRlbmRlZCBcIiArIFwiYW5kIG1heSBoYXZlIGNvbnNlcXVlbmNlcyBpZiBkaWZmZXJlbnQgdmVyc2lvbnMgb2YgdGhlIHBvbHlmaWxscyBhcmUgYXBwbGllZCBzZXF1ZW50aWFsbHkuIFwiICsgXCJJZiB5b3UgZG8gbmVlZCB0byBsb2FkIHRoZSBwb2x5ZmlsbCBtb3JlIHRoYW4gb25jZSwgdXNlIEBiYWJlbC9wb2x5ZmlsbC9ub0NvbmZsaWN0IFwiICsgXCJpbnN0ZWFkIHRvIGJ5cGFzcyB0aGUgd2FybmluZy5cIik7XG59XG5cbl9nbG9iYWwuZGVmYXVsdC5fYmFiZWxQb2x5ZmlsbCA9IHRydWU7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2VzNlwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vYXJyYXkvaW5jbHVkZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL2FycmF5L2ZsYXQtbWFwXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0XCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvcGFkLWVuZFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3RyaW0tc3RhcnRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N0cmluZy90cmltLWVuZFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3ltYm9sL2FzeW5jLWl0ZXJhdG9yXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yc1wiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L3ZhbHVlc1wiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L2VudHJpZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3Byb21pc2UvZmluYWxseVwiKTtcblxucmVxdWlyZShcImNvcmUtanMvd2ViXCIpO1xuXG5yZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lXCIpOyIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXNpbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jbHozMicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jb3NoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5oeXBvdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguc2lnbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5zaW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy50cmltJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcubGluaycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS50by1qc29uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXByaW1pdGl2ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5qb2luJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc29ydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zb21lJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5jb3B5LXdpdGhpbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5jb25zdHJ1Y3RvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5mbGFncycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYud2Vhay1tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LndlYWstc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0NjQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5oYXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gRUNNQVNjcmlwdCA2IHN5bWJvbHMgc2hpbVxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIE1FVEEgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZO1xudmFyICRmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciB3a3NEZWZpbmUgPSByZXF1aXJlKCcuL193a3MtZGVmaW5lJyk7XG52YXIgZW51bUtleXMgPSByZXF1aXJlKCcuL19lbnVtLWtleXMnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIF9jcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZ09QTkV4dCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuLWV4dCcpO1xudmFyICRHT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkR09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUEQgPSAkR09QRC5mO1xudmFyIGRQID0gJERQLmY7XG52YXIgZ09QTiA9IGdPUE5FeHQuZjtcbnZhciAkU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciAkSlNPTiA9IGdsb2JhbC5KU09OO1xudmFyIF9zdHJpbmdpZnkgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgSElEREVOID0gd2tzKCdfaGlkZGVuJyk7XG52YXIgVE9fUFJJTUlUSVZFID0gd2tzKCd0b1ByaW1pdGl2ZScpO1xudmFyIGlzRW51bSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKTtcbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT1BTeW1ib2xzID0gc2hhcmVkKCdvcC1zeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3RbUFJPVE9UWVBFXTtcbnZhciBVU0VfTkFUSVZFID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcbnZhciBRT2JqZWN0ID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIF9jcmVhdGUoZFAoe30sICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7IHZhbHVlOiA3IH0pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24gKGl0LCBrZXksIEQpIHtcbiAgdmFyIHByb3RvRGVzYyA9IGdPUEQoT2JqZWN0UHJvdG8sIGtleSk7XG4gIGlmIChwcm90b0Rlc2MpIGRlbGV0ZSBPYmplY3RQcm90b1trZXldO1xuICBkUChpdCwga2V5LCBEKTtcbiAgaWYgKHByb3RvRGVzYyAmJiBpdCAhPT0gT2JqZWN0UHJvdG8pIGRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24gKHRhZykge1xuICB2YXIgc3ltID0gQWxsU3ltYm9sc1t0YWddID0gX2NyZWF0ZSgkU3ltYm9sW1BST1RPVFlQRV0pO1xuICBzeW0uX2sgPSB0YWc7XG4gIHJldHVybiBzeW07XG59O1xuXG52YXIgaXNTeW1ib2wgPSBVU0VfTkFUSVZFICYmIHR5cGVvZiAkU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCkge1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvKSAkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSkpIHtcbiAgICBpZiAoIUQuZW51bWVyYWJsZSkge1xuICAgICAgaWYgKCFoYXMoaXQsIEhJRERFTikpIGRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSBpdFtISURERU5dW2tleV0gPSBmYWxzZTtcbiAgICAgIEQgPSBfY3JlYXRlKEQsIHsgZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSkgfSk7XG4gICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTtcbiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7XG59O1xudmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCkge1xuICBhbk9iamVjdChpdCk7XG4gIHZhciBrZXlzID0gZW51bUtleXMoUCA9IHRvSU9iamVjdChQKSk7XG4gIHZhciBpID0gMDtcbiAgdmFyIGwgPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGwgPiBpKSAkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKSB7XG4gIHJldHVybiBQID09PSB1bmRlZmluZWQgPyBfY3JlYXRlKGl0KSA6ICRkZWZpbmVQcm9wZXJ0aWVzKF9jcmVhdGUoaXQpLCBQKTtcbn07XG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoa2V5KSB7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gRSB8fCAhaGFzKHRoaXMsIGtleSkgfHwgIWhhcyhBbGxTeW1ib2xzLCBrZXkpIHx8IGhhcyh0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtrZXldID8gRSA6IHRydWU7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICBpdCA9IHRvSU9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybjtcbiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpO1xuICBpZiAoRCAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSBELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHZhciBuYW1lcyA9IGdPUE4odG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmICghaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgJGdldE93blByb3BlcnR5U3ltYm9scyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICB2YXIgSVNfT1AgPSBpdCA9PT0gT2JqZWN0UHJvdG87XG4gIHZhciBuYW1lcyA9IGdPUE4oSVNfT1AgPyBPUFN5bWJvbHMgOiB0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSkgcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pXG5pZiAoIVVTRV9OQVRJVkUpIHtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICBpZiAodGhpcyBpbnN0YW5jZW9mICRTeW1ib2wpIHRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8pICRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXModGhpcywgSElEREVOKSAmJiBoYXModGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmIChERVNDUklQVE9SUyAmJiBzZXR0ZXIpIHNldFN5bWJvbERlc2MoT2JqZWN0UHJvdG8sIHRhZywgeyBjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldCB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcpO1xuICB9O1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLl9rO1xuICB9KTtcblxuICAkR09QRC5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgJERQLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZiA9IGdPUE5FeHQuZiA9ICRnZXRPd25Qcm9wZXJ0eU5hbWVzO1xuICByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZiA9ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiAgJEdPUFMuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gQ2hyb21lIDM4IGFuZCAzOSBgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc2AgZmFpbHMgb24gcHJpbWl0aXZlc1xuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzQ0M1xudmFyIEZBSUxTX09OX1BSSU1JVElWRVMgPSAkZmFpbHMoZnVuY3Rpb24gKCkgeyAkR09QUy5mKDEpOyB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBGQUlMU19PTl9QUklNSVRJVkVTLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICAgIHJldHVybiAkR09QUy5mKHRvT2JqZWN0KGl0KSk7XG4gIH1cbn0pO1xuXG4vLyAyNC4zLjIgSlNPTi5zdHJpbmdpZnkodmFsdWUgWywgcmVwbGFjZXIgWywgc3BhY2VdXSlcbiRKU09OICYmICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCFVU0VfTkFUSVZFIHx8ICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBTID0gJFN5bWJvbCgpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGxcbiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHNcbiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHsgYTogUyB9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpIHtcbiAgICB2YXIgYXJncyA9IFtpdF07XG4gICAgdmFyIGkgPSAxO1xuICAgIHZhciByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICAkcmVwbGFjZXIgPSByZXBsYWNlciA9IGFyZ3NbMV07XG4gICAgaWYgKCFpc09iamVjdChyZXBsYWNlcikgJiYgaXQgPT09IHVuZGVmaW5lZCB8fCBpc1N5bWJvbChpdCkpIHJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJlcGxhY2VyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgJHJlcGxhY2VyID09ICdmdW5jdGlvbicpIHZhbHVlID0gJHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XG4gICAgICBpZiAoIWlzU3ltYm9sKHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTtcbiAgfVxufSk7XG5cbi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludClcbiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ25hdGl2ZS1mdW5jdGlvbi10by1zdHJpbmcnLCBGdW5jdGlvbi50b1N0cmluZyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMyAvIDE1LjIuMy43IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0aWVzOiByZXF1aXJlKCcuL19vYmplY3QtZHBzJykgfSk7XG4iLCIvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0b0lPYmplY3QoaXQpLCBrZXkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykuZjtcbn0pO1xuIiwiLy8gMTkuMS4yLjUgT2JqZWN0LmZyZWV6ZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdmcmVlemUnLCBmdW5jdGlvbiAoJGZyZWV6ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZnJlZXplKGl0KSB7XG4gICAgcmV0dXJuICRmcmVlemUgJiYgaXNPYmplY3QoaXQpID8gJGZyZWV6ZShtZXRhKGl0KSkgOiBpdDtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE3IE9iamVjdC5zZWFsKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpLm9uRnJlZXplO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ3NlYWwnLCBmdW5jdGlvbiAoJHNlYWwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNlYWwoaXQpIHtcbiAgICByZXR1cm4gJHNlYWwgJiYgaXNPYmplY3QoaXQpID8gJHNlYWwobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbiAoJHByZXZlbnRFeHRlbnNpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiBwcmV2ZW50RXh0ZW5zaW9ucyhpdCkge1xuICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTIgT2JqZWN0LmlzRnJvemVuKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdpc0Zyb3plbicsIGZ1bmN0aW9uICgkaXNGcm96ZW4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRnJvemVuKGl0KSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0KGl0KSA/ICRpc0Zyb3plbiA/ICRpc0Zyb3plbihpdCkgOiBmYWxzZSA6IHRydWU7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMyBPYmplY3QuaXNTZWFsZWQoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzU2VhbGVkJywgZnVuY3Rpb24gKCRpc1NlYWxlZCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXNTZWFsZWQoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzU2VhbGVkID8gJGlzU2VhbGVkKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjExIE9iamVjdC5pc0V4dGVuc2libGUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRXh0ZW5zaWJsZScsIGZ1bmN0aW9uICgkaXNFeHRlbnNpYmxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc0V4dGVuc2libGUoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUoaXQpIDogdHJ1ZSA6IGZhbHNlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYsICdPYmplY3QnLCB7IGFzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpIH0pO1xuIiwiLy8gMTkuMS4zLjEwIE9iamVjdC5pcyh2YWx1ZTEsIHZhbHVlMilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgaXM6IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKSB9KTtcbiIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IHNldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIHRlc3QgPSB7fTtcbnRlc3RbcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyldID0gJ3onO1xuaWYgKHRlc3QgKyAnJyAhPSAnW29iamVjdCB6XScpIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7XG4gIH0sIHRydWUpO1xufVxuIiwiLy8gMTkuMi4zLjIgLyAxNS4zLjQuNSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCh0aGlzQXJnLCBhcmdzLi4uKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdGdW5jdGlvbicsIHsgYmluZDogcmVxdWlyZSgnLi9fYmluZCcpIH0pO1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBGUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG52YXIgbmFtZVJFID0gL15cXHMqZnVuY3Rpb24gKFteIChdKikvO1xudmFyIE5BTUUgPSAnbmFtZSc7XG5cbi8vIDE5LjIuNC4yIG5hbWVcbk5BTUUgaW4gRlByb3RvIHx8IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgZFAoRlByb3RvLCBOQU1FLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoJycgKyB0aGlzKS5tYXRjaChuYW1lUkUpWzFdO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSEFTX0lOU1RBTkNFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2hhc0luc3RhbmNlJyk7XG52YXIgRnVuY3Rpb25Qcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIDE5LjIuMy42IEZ1bmN0aW9uLnByb3RvdHlwZVtAQGhhc0luc3RhbmNlXShWKVxuaWYgKCEoSEFTX0lOU1RBTkNFIGluIEZ1bmN0aW9uUHJvdG8pKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwgeyB2YWx1ZTogZnVuY3Rpb24gKE8pIHtcbiAgaWYgKHR5cGVvZiB0aGlzICE9ICdmdW5jdGlvbicgfHwgIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIGlmICghaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKSByZXR1cm4gTyBpbnN0YW5jZW9mIHRoaXM7XG4gIC8vIGZvciBlbnZpcm9ubWVudCB3L28gbmF0aXZlIGBAQGhhc0luc3RhbmNlYCBsb2dpYyBlbm91Z2ggYGluc3RhbmNlb2ZgLCBidXQgYWRkIHRoaXM6XG4gIHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpIGlmICh0aGlzLnByb3RvdHlwZSA9PT0gTykgcmV0dXJuIHRydWU7XG4gIHJldHVybiBmYWxzZTtcbn0gfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDE4LjIuNCBwYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlRmxvYXQgIT0gJHBhcnNlRmxvYXQpLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgJE51bWJlciA9IGdsb2JhbFtOVU1CRVJdO1xudmFyIEJhc2UgPSAkTnVtYmVyO1xudmFyIHByb3RvID0gJE51bWJlci5wcm90b3R5cGU7XG4vLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbnZhciBCUk9LRU5fQ09GID0gY29mKHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKShwcm90bykpID09IE5VTUJFUjtcbnZhciBUUklNID0gJ3RyaW0nIGluIFN0cmluZy5wcm90b3R5cGU7XG5cbi8vIDcuMS4zIFRvTnVtYmVyKGFyZ3VtZW50KVxudmFyIHRvTnVtYmVyID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBpdCA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCBmYWxzZSk7XG4gIGlmICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMikge1xuICAgIGl0ID0gVFJJTSA/IGl0LnRyaW0oKSA6ICR0cmltKGl0LCAzKTtcbiAgICB2YXIgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApO1xuICAgIHZhciB0aGlyZCwgcmFkaXgsIG1heENvZGU7XG4gICAgaWYgKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpIHtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmICh0aGlyZCA9PT0gODggfHwgdGhpcmQgPT09IDEyMCkgcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeFxuICAgIH0gZWxzZSBpZiAoZmlyc3QgPT09IDQ4KSB7XG4gICAgICBzd2l0Y2ggKGl0LmNoYXJDb2RlQXQoMSkpIHtcbiAgICAgICAgY2FzZSA2NjogY2FzZSA5ODogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5OiBjYXNlIDExMTogcmFkaXggPSA4OyBtYXhDb2RlID0gNTU7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMG9bMC03XSskL2lcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGRpZ2l0cyA9IGl0LnNsaWNlKDIpLCBpID0gMCwgbCA9IGRpZ2l0cy5sZW5ndGgsIGNvZGU7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2xcbiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHNcbiAgICAgICAgaWYgKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSkgcmV0dXJuIE5hTjtcbiAgICAgIH0gcmV0dXJuIHBhcnNlSW50KGRpZ2l0cywgcmFkaXgpO1xuICAgIH1cbiAgfSByZXR1cm4gK2l0O1xufTtcblxuaWYgKCEkTnVtYmVyKCcgMG8xJykgfHwgISROdW1iZXIoJzBiMScpIHx8ICROdW1iZXIoJysweDEnKSkge1xuICAkTnVtYmVyID0gZnVuY3Rpb24gTnVtYmVyKHZhbHVlKSB7XG4gICAgdmFyIGl0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgPyAwIDogdmFsdWU7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHJldHVybiB0aGF0IGluc3RhbmNlb2YgJE51bWJlclxuICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlXG4gICAgICAmJiAoQlJPS0VOX0NPRiA/IGZhaWxzKGZ1bmN0aW9uICgpIHsgcHJvdG8udmFsdWVPZi5jYWxsKHRoYXQpOyB9KSA6IGNvZih0aGF0KSAhPSBOVU1CRVIpXG4gICAgICAgID8gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UodG9OdW1iZXIoaXQpKSwgdGhhdCwgJE51bWJlcikgOiB0b051bWJlcihpdCk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QTihCYXNlKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTNiAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTNiBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArXG4gICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzKEJhc2UsIGtleSA9IGtleXNbal0pICYmICFoYXMoJE51bWJlciwga2V5KSkge1xuICAgICAgZFAoJE51bWJlciwga2V5LCBnT1BEKEJhc2UsIGtleSkpO1xuICAgIH1cbiAgfVxuICAkTnVtYmVyLnByb3RvdHlwZSA9IHByb3RvO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICROdW1iZXI7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCBOVU1CRVIsICROdW1iZXIpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYU51bWJlclZhbHVlID0gcmVxdWlyZSgnLi9fYS1udW1iZXItdmFsdWUnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgJHRvRml4ZWQgPSAxLjAudG9GaXhlZDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgZGF0YSA9IFswLCAwLCAwLCAwLCAwLCAwXTtcbnZhciBFUlJPUiA9ICdOdW1iZXIudG9GaXhlZDogaW5jb3JyZWN0IGludm9jYXRpb24hJztcbnZhciBaRVJPID0gJzAnO1xuXG52YXIgbXVsdGlwbHkgPSBmdW5jdGlvbiAobiwgYykge1xuICB2YXIgaSA9IC0xO1xuICB2YXIgYzIgPSBjO1xuICB3aGlsZSAoKytpIDwgNikge1xuICAgIGMyICs9IG4gKiBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBjMiAlIDFlNztcbiAgICBjMiA9IGZsb29yKGMyIC8gMWU3KTtcbiAgfVxufTtcbnZhciBkaXZpZGUgPSBmdW5jdGlvbiAobikge1xuICB2YXIgaSA9IDY7XG4gIHZhciBjID0gMDtcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgYyArPSBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBmbG9vcihjIC8gbik7XG4gICAgYyA9IChjICUgbikgKiAxZTc7XG4gIH1cbn07XG52YXIgbnVtVG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIHMgPSAnJztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgaWYgKHMgIT09ICcnIHx8IGkgPT09IDAgfHwgZGF0YVtpXSAhPT0gMCkge1xuICAgICAgdmFyIHQgPSBTdHJpbmcoZGF0YVtpXSk7XG4gICAgICBzID0gcyA9PT0gJycgPyB0IDogcyArIHJlcGVhdC5jYWxsKFpFUk8sIDcgLSB0Lmxlbmd0aCkgKyB0O1xuICAgIH1cbiAgfSByZXR1cm4gcztcbn07XG52YXIgcG93ID0gZnVuY3Rpb24gKHgsIG4sIGFjYykge1xuICByZXR1cm4gbiA9PT0gMCA/IGFjYyA6IG4gJSAyID09PSAxID8gcG93KHgsIG4gLSAxLCBhY2MgKiB4KSA6IHBvdyh4ICogeCwgbiAvIDIsIGFjYyk7XG59O1xudmFyIGxvZyA9IGZ1bmN0aW9uICh4KSB7XG4gIHZhciBuID0gMDtcbiAgdmFyIHgyID0geDtcbiAgd2hpbGUgKHgyID49IDQwOTYpIHtcbiAgICBuICs9IDEyO1xuICAgIHgyIC89IDQwOTY7XG4gIH1cbiAgd2hpbGUgKHgyID49IDIpIHtcbiAgICBuICs9IDE7XG4gICAgeDIgLz0gMjtcbiAgfSByZXR1cm4gbjtcbn07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCEhJHRvRml4ZWQgJiYgKFxuICAwLjAwMDA4LnRvRml4ZWQoMykgIT09ICcwLjAwMCcgfHxcbiAgMC45LnRvRml4ZWQoMCkgIT09ICcxJyB8fFxuICAxLjI1NS50b0ZpeGVkKDIpICE9PSAnMS4yNScgfHxcbiAgMTAwMDAwMDAwMDAwMDAwMDEyOC4wLnRvRml4ZWQoMCkgIT09ICcxMDAwMDAwMDAwMDAwMDAwMTI4J1xuKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b0ZpeGVkLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b0ZpeGVkOiBmdW5jdGlvbiB0b0ZpeGVkKGZyYWN0aW9uRGlnaXRzKSB7XG4gICAgdmFyIHggPSBhTnVtYmVyVmFsdWUodGhpcywgRVJST1IpO1xuICAgIHZhciBmID0gdG9JbnRlZ2VyKGZyYWN0aW9uRGlnaXRzKTtcbiAgICB2YXIgcyA9ICcnO1xuICAgIHZhciBtID0gWkVSTztcbiAgICB2YXIgZSwgeiwgaiwgaztcbiAgICBpZiAoZiA8IDAgfHwgZiA+IDIwKSB0aHJvdyBSYW5nZUVycm9yKEVSUk9SKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKHggIT0geCkgcmV0dXJuICdOYU4nO1xuICAgIGlmICh4IDw9IC0xZTIxIHx8IHggPj0gMWUyMSkgcmV0dXJuIFN0cmluZyh4KTtcbiAgICBpZiAoeCA8IDApIHtcbiAgICAgIHMgPSAnLSc7XG4gICAgICB4ID0gLXg7XG4gICAgfVxuICAgIGlmICh4ID4gMWUtMjEpIHtcbiAgICAgIGUgPSBsb2coeCAqIHBvdygyLCA2OSwgMSkpIC0gNjk7XG4gICAgICB6ID0gZSA8IDAgPyB4ICogcG93KDIsIC1lLCAxKSA6IHggLyBwb3coMiwgZSwgMSk7XG4gICAgICB6ICo9IDB4MTAwMDAwMDAwMDAwMDA7XG4gICAgICBlID0gNTIgLSBlO1xuICAgICAgaWYgKGUgPiAwKSB7XG4gICAgICAgIG11bHRpcGx5KDAsIHopO1xuICAgICAgICBqID0gZjtcbiAgICAgICAgd2hpbGUgKGogPj0gNykge1xuICAgICAgICAgIG11bHRpcGx5KDFlNywgMCk7XG4gICAgICAgICAgaiAtPSA3O1xuICAgICAgICB9XG4gICAgICAgIG11bHRpcGx5KHBvdygxMCwgaiwgMSksIDApO1xuICAgICAgICBqID0gZSAtIDE7XG4gICAgICAgIHdoaWxlIChqID49IDIzKSB7XG4gICAgICAgICAgZGl2aWRlKDEgPDwgMjMpO1xuICAgICAgICAgIGogLT0gMjM7XG4gICAgICAgIH1cbiAgICAgICAgZGl2aWRlKDEgPDwgaik7XG4gICAgICAgIG11bHRpcGx5KDEsIDEpO1xuICAgICAgICBkaXZpZGUoMik7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIG11bHRpcGx5KDEgPDwgLWUsIDApO1xuICAgICAgICBtID0gbnVtVG9TdHJpbmcoKSArIHJlcGVhdC5jYWxsKFpFUk8sIGYpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZiA+IDApIHtcbiAgICAgIGsgPSBtLmxlbmd0aDtcbiAgICAgIG0gPSBzICsgKGsgPD0gZiA/ICcwLicgKyByZXBlYXQuY2FsbChaRVJPLCBmIC0gaykgKyBtIDogbS5zbGljZSgwLCBrIC0gZikgKyAnLicgKyBtLnNsaWNlKGsgLSBmKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSBzICsgbTtcbiAgICB9IHJldHVybiBtO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyICR0b1ByZWNpc2lvbiA9IDEuMC50b1ByZWNpc2lvbjtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU3LVxuICByZXR1cm4gJHRvUHJlY2lzaW9uLmNhbGwoMSwgdW5kZWZpbmVkKSAhPT0gJzEnO1xufSkgfHwgISRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b1ByZWNpc2lvbi5jYWxsKHt9KTtcbn0pKSwgJ051bWJlcicsIHtcbiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbikge1xuICAgIHZhciB0aGF0ID0gYU51bWJlclZhbHVlKHRoaXMsICdOdW1iZXIjdG9QcmVjaXNpb246IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICAgIHJldHVybiBwcmVjaXNpb24gPT09IHVuZGVmaW5lZCA/ICR0b1ByZWNpc2lvbi5jYWxsKHRoYXQpIDogJHRvUHJlY2lzaW9uLmNhbGwodGhhdCwgcHJlY2lzaW9uKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMSBOdW1iZXIuRVBTSUxPTlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IEVQU0lMT046IE1hdGgucG93KDIsIC01MikgfSk7XG4iLCIvLyAyMC4xLjIuMiBOdW1iZXIuaXNGaW5pdGUobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBfaXNGaW5pdGUgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5pc0Zpbml0ZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzRmluaXRlOiBmdW5jdGlvbiBpc0Zpbml0ZShpdCkge1xuICAgIHJldHVybiB0eXBlb2YgaXQgPT0gJ251bWJlcicgJiYgX2lzRmluaXRlKGl0KTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBpc0ludGVnZXI6IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKSB9KTtcbiIsIi8vIDIwLjEuMi40IE51bWJlci5pc05hTihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNOYU46IGZ1bmN0aW9uIGlzTmFOKG51bWJlcikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICByZXR1cm4gbnVtYmVyICE9IG51bWJlcjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNSBOdW1iZXIuaXNTYWZlSW50ZWdlcihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGlzSW50ZWdlciA9IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzU2FmZUludGVnZXI6IGZ1bmN0aW9uIGlzU2FmZUludGVnZXIobnVtYmVyKSB7XG4gICAgcmV0dXJuIGlzSW50ZWdlcihudW1iZXIpICYmIGFicyhudW1iZXIpIDw9IDB4MWZmZmZmZmZmZmZmZmY7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMS4yLjYgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNQVhfU0FGRV9JTlRFR0VSOiAweDFmZmZmZmZmZmZmZmZmIH0pO1xuIiwiLy8gMjAuMS4yLjEwIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgTUlOX1NBRkVfSU5URUdFUjogLTB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDIwLjEuMi4xMiBOdW1iZXIucGFyc2VGbG9hdChzdHJpbmcpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChOdW1iZXIucGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksICdOdW1iZXInLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFyc2VJbnQgPSByZXF1aXJlKCcuL19wYXJzZS1pbnQnKTtcbi8vIDIwLjEuMi4xMyBOdW1iZXIucGFyc2VJbnQoc3RyaW5nLCByYWRpeClcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUludCAhPSAkcGFyc2VJbnQpLCAnTnVtYmVyJywgeyBwYXJzZUludDogJHBhcnNlSW50IH0pO1xuIiwiLy8gMjAuMi4yLjMgTWF0aC5hY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBsb2cxcCA9IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKTtcbnZhciBzcXJ0ID0gTWF0aC5zcXJ0O1xudmFyICRhY29zaCA9IE1hdGguYWNvc2g7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogISgkYWNvc2hcbiAgLy8gVjggYnVnOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzUwOVxuICAmJiBNYXRoLmZsb29yKCRhY29zaChOdW1iZXIuTUFYX1ZBTFVFKSkgPT0gNzEwXG4gIC8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hY29zaChJbmZpbml0eSkgLT4gTmFOXG4gICYmICRhY29zaChJbmZpbml0eSkgPT0gSW5maW5pdHlcbiksICdNYXRoJywge1xuICBhY29zaDogZnVuY3Rpb24gYWNvc2goeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA8IDEgPyBOYU4gOiB4ID4gOTQ5MDYyNjUuNjI0MjUxNTZcbiAgICAgID8gTWF0aC5sb2coeCkgKyBNYXRoLkxOMlxuICAgICAgOiBsb2cxcCh4IC0gMSArIHNxcnQoeCAtIDEpICogc3FydCh4ICsgMSkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi41IE1hdGguYXNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGFzaW5oID0gTWF0aC5hc2luaDtcblxuZnVuY3Rpb24gYXNpbmgoeCkge1xuICByZXR1cm4gIWlzRmluaXRlKHggPSAreCkgfHwgeCA9PSAwID8geCA6IHggPCAwID8gLWFzaW5oKC14KSA6IE1hdGgubG9nKHggKyBNYXRoLnNxcnQoeCAqIHggKyAxKSk7XG59XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hc2luaCgwKSAtPiAtMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhc2luaCAmJiAxIC8gJGFzaW5oKDApID4gMCksICdNYXRoJywgeyBhc2luaDogYXNpbmggfSk7XG4iLCIvLyAyMC4yLjIuNyBNYXRoLmF0YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRhdGFuaCA9IE1hdGguYXRhbmg7XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hdGFuaCgtMCkgLT4gMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhdGFuaCAmJiAxIC8gJGF0YW5oKC0wKSA8IDApLCAnTWF0aCcsIHtcbiAgYXRhbmg6IGZ1bmN0aW9uIGF0YW5oKHgpIHtcbiAgICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiBNYXRoLmxvZygoMSArIHgpIC8gKDEgLSB4KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi45IE1hdGguY2JydCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2JydDogZnVuY3Rpb24gY2JydCh4KSB7XG4gICAgcmV0dXJuIHNpZ24oeCA9ICt4KSAqIE1hdGgucG93KE1hdGguYWJzKHgpLCAxIC8gMyk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjExIE1hdGguY2x6MzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2x6MzI6IGZ1bmN0aW9uIGNsejMyKHgpIHtcbiAgICByZXR1cm4gKHggPj4+PSAwKSA/IDMxIC0gTWF0aC5mbG9vcihNYXRoLmxvZyh4ICsgMC41KSAqIE1hdGguTE9HMkUpIDogMzI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjEyIE1hdGguY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjb3NoOiBmdW5jdGlvbiBjb3NoKHgpIHtcbiAgICByZXR1cm4gKGV4cCh4ID0gK3gpICsgZXhwKC14KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4xNCBNYXRoLmV4cG0xKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoJGV4cG0xICE9IE1hdGguZXhwbTEpLCAnTWF0aCcsIHsgZXhwbTE6ICRleHBtMSB9KTtcbiIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBmcm91bmQ6IHJlcXVpcmUoJy4vX21hdGgtZnJvdW5kJykgfSk7XG4iLCIvLyAyMC4yLjIuMTYgTWF0aC5mcm91bmQoeClcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgRVBTSUxPTiA9IHBvdygyLCAtNTIpO1xudmFyIEVQU0lMT04zMiA9IHBvdygyLCAtMjMpO1xudmFyIE1BWDMyID0gcG93KDIsIDEyNykgKiAoMiAtIEVQU0lMT04zMik7XG52YXIgTUlOMzIgPSBwb3coMiwgLTEyNik7XG5cbnZhciByb3VuZFRpZXNUb0V2ZW4gPSBmdW5jdGlvbiAobikge1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguZnJvdW5kIHx8IGZ1bmN0aW9uIGZyb3VuZCh4KSB7XG4gIHZhciAkYWJzID0gTWF0aC5hYnMoeCk7XG4gIHZhciAkc2lnbiA9IHNpZ24oeCk7XG4gIHZhciBhLCByZXN1bHQ7XG4gIGlmICgkYWJzIDwgTUlOMzIpIHJldHVybiAkc2lnbiAqIHJvdW5kVGllc1RvRXZlbigkYWJzIC8gTUlOMzIgLyBFUFNJTE9OMzIpICogTUlOMzIgKiBFUFNJTE9OMzI7XG4gIGEgPSAoMSArIEVQU0lMT04zMiAvIEVQU0lMT04pICogJGFicztcbiAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHJlc3VsdCA+IE1BWDMyIHx8IHJlc3VsdCAhPSByZXN1bHQpIHJldHVybiAkc2lnbiAqIEluZmluaXR5O1xuICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG59O1xuIiwiLy8gMjAuMi4yLjE3IE1hdGguaHlwb3QoW3ZhbHVlMVssIHZhbHVlMlssIOKApiBdXV0pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFicyA9IE1hdGguYWJzO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGh5cG90OiBmdW5jdGlvbiBoeXBvdCh2YWx1ZTEsIHZhbHVlMikgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgdmFyIHN1bSA9IDA7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbGFyZyA9IDA7XG4gICAgdmFyIGFyZywgZGl2O1xuICAgIHdoaWxlIChpIDwgYUxlbikge1xuICAgICAgYXJnID0gYWJzKGFyZ3VtZW50c1tpKytdKTtcbiAgICAgIGlmIChsYXJnIDwgYXJnKSB7XG4gICAgICAgIGRpdiA9IGxhcmcgLyBhcmc7XG4gICAgICAgIHN1bSA9IHN1bSAqIGRpdiAqIGRpdiArIDE7XG4gICAgICAgIGxhcmcgPSBhcmc7XG4gICAgICB9IGVsc2UgaWYgKGFyZyA+IDApIHtcbiAgICAgICAgZGl2ID0gYXJnIC8gbGFyZztcbiAgICAgICAgc3VtICs9IGRpdiAqIGRpdjtcbiAgICAgIH0gZWxzZSBzdW0gKz0gYXJnO1xuICAgIH1cbiAgICByZXR1cm4gbGFyZyA9PT0gSW5maW5pdHkgPyBJbmZpbml0eSA6IGxhcmcgKiBNYXRoLnNxcnQoc3VtKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTggTWF0aC5pbXVsKHgsIHkpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRpbXVsID0gTWF0aC5pbXVsO1xuXG4vLyBzb21lIFdlYktpdCB2ZXJzaW9ucyBmYWlscyB3aXRoIGJpZyBudW1iZXJzLCBzb21lIGhhcyB3cm9uZyBhcml0eVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICRpbXVsKDB4ZmZmZmZmZmYsIDUpICE9IC01IHx8ICRpbXVsLmxlbmd0aCAhPSAyO1xufSksICdNYXRoJywge1xuICBpbXVsOiBmdW5jdGlvbiBpbXVsKHgsIHkpIHtcbiAgICB2YXIgVUlOVDE2ID0gMHhmZmZmO1xuICAgIHZhciB4biA9ICt4O1xuICAgIHZhciB5biA9ICt5O1xuICAgIHZhciB4bCA9IFVJTlQxNiAmIHhuO1xuICAgIHZhciB5bCA9IFVJTlQxNiAmIHluO1xuICAgIHJldHVybiAwIHwgeGwgKiB5bCArICgoVUlOVDE2ICYgeG4gPj4+IDE2KSAqIHlsICsgeGwgKiAoVUlOVDE2ICYgeW4gPj4+IDE2KSA8PCAxNiA+Pj4gMCk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjIxIE1hdGgubG9nMTAoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgbG9nMTA6IGZ1bmN0aW9uIGxvZzEwKHgpIHtcbiAgICByZXR1cm4gTWF0aC5sb2coeCkgKiBNYXRoLkxPRzEwRTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMjAgTWF0aC5sb2cxcCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBsb2cxcDogcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpIH0pO1xuIiwiLy8gMjAuMi4yLjIyIE1hdGgubG9nMih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBsb2cyOiBmdW5jdGlvbiBsb2cyKHgpIHtcbiAgICByZXR1cm4gTWF0aC5sb2coeCkgLyBNYXRoLkxOMjtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMjggTWF0aC5zaWduKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IHNpZ246IHJlcXVpcmUoJy4vX21hdGgtc2lnbicpIH0pO1xuIiwiLy8gMjAuMi4yLjMwIE1hdGguc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuLy8gVjggbmVhciBDaHJvbWl1bSAzOCBoYXMgYSBwcm9ibGVtIHdpdGggdmVyeSBzbWFsbCBudW1iZXJzXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIU1hdGguc2luaCgtMmUtMTcpICE9IC0yZS0xNztcbn0pLCAnTWF0aCcsIHtcbiAgc2luaDogZnVuY3Rpb24gc2luaCh4KSB7XG4gICAgcmV0dXJuIE1hdGguYWJzKHggPSAreCkgPCAxXG4gICAgICA/IChleHBtMSh4KSAtIGV4cG0xKC14KSkgLyAyXG4gICAgICA6IChleHAoeCAtIDEpIC0gZXhwKC14IC0gMSkpICogKE1hdGguRSAvIDIpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4zMyBNYXRoLnRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZXhwbTEgPSByZXF1aXJlKCcuL19tYXRoLWV4cG0xJyk7XG52YXIgZXhwID0gTWF0aC5leHA7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgdGFuaDogZnVuY3Rpb24gdGFuaCh4KSB7XG4gICAgdmFyIGEgPSBleHBtMSh4ID0gK3gpO1xuICAgIHZhciBiID0gZXhwbTEoLXgpO1xuICAgIHJldHVybiBhID09IEluZmluaXR5ID8gMSA6IGIgPT0gSW5maW5pdHkgPyAtMSA6IChhIC0gYikgLyAoZXhwKHgpICsgZXhwKC14KSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjM0IE1hdGgudHJ1bmMoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgdHJ1bmM6IGZ1bmN0aW9uIHRydW5jKGl0KSB7XG4gICAgcmV0dXJuIChpdCA+IDAgPyBNYXRoLmZsb29yIDogTWF0aC5jZWlsKShpdCk7XG4gIH1cbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGZyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7XG52YXIgJGZyb21Db2RlUG9pbnQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludDtcblxuLy8gbGVuZ3RoIHNob3VsZCBiZSAxLCBvbGQgRkYgcHJvYmxlbVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoISEkZnJvbUNvZGVQb2ludCAmJiAkZnJvbUNvZGVQb2ludC5sZW5ndGggIT0gMSksICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi4yIFN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmNvZGVQb2ludHMpXG4gIGZyb21Db2RlUG9pbnQ6IGZ1bmN0aW9uIGZyb21Db2RlUG9pbnQoeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGNvZGU7XG4gICAgd2hpbGUgKGFMZW4gPiBpKSB7XG4gICAgICBjb2RlID0gK2FyZ3VtZW50c1tpKytdO1xuICAgICAgaWYgKHRvQWJzb2x1dGVJbmRleChjb2RlLCAweDEwZmZmZikgIT09IGNvZGUpIHRocm93IFJhbmdlRXJyb3IoY29kZSArICcgaXMgbm90IGEgdmFsaWQgY29kZSBwb2ludCcpO1xuICAgICAgcmVzLnB1c2goY29kZSA8IDB4MTAwMDBcbiAgICAgICAgPyBmcm9tQ2hhckNvZGUoY29kZSlcbiAgICAgICAgOiBmcm9tQ2hhckNvZGUoKChjb2RlIC09IDB4MTAwMDApID4+IDEwKSArIDB4ZDgwMCwgY29kZSAlIDB4NDAwICsgMHhkYzAwKVxuICAgICAgKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi40IFN0cmluZy5yYXcoY2FsbFNpdGUsIC4uLnN1YnN0aXR1dGlvbnMpXG4gIHJhdzogZnVuY3Rpb24gcmF3KGNhbGxTaXRlKSB7XG4gICAgdmFyIHRwbCA9IHRvSU9iamVjdChjYWxsU2l0ZS5yYXcpO1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0cGwubGVuZ3RoKTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAobGVuID4gaSkge1xuICAgICAgcmVzLnB1c2goU3RyaW5nKHRwbFtpKytdKSk7XG4gICAgICBpZiAoaSA8IGFMZW4pIHJlcy5wdXNoKFN0cmluZyhhcmd1bWVudHNbaV0pKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMS4zLjI1IFN0cmluZy5wcm90b3R5cGUudHJpbSgpXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltJywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltKCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAzKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKFN0cmluZywgJ1N0cmluZycsIGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gU3RyaW5nKGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4vLyAyMS4xLjUuMi4xICVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbiAoKSB7XG4gIHZhciBPID0gdGhpcy5fdDtcbiAgdmFyIGluZGV4ID0gdGhpcy5faTtcbiAgdmFyIHBvaW50O1xuICBpZiAoaW5kZXggPj0gTy5sZW5ndGgpIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgcG9pbnQgPSAkYXQoTywgaW5kZXgpO1xuICB0aGlzLl9pICs9IHBvaW50Lmxlbmd0aDtcbiAgcmV0dXJuIHsgdmFsdWU6IHBvaW50LCBkb25lOiBmYWxzZSB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKGZhbHNlKTtcbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjMuMyBTdHJpbmcucHJvdG90eXBlLmNvZGVQb2ludEF0KHBvcylcbiAgY29kZVBvaW50QXQ6IGZ1bmN0aW9uIGNvZGVQb2ludEF0KHBvcykge1xuICAgIHJldHVybiAkYXQodGhpcywgcG9zKTtcbiAgfVxufSk7XG4iLCIvLyAyMS4xLjMuNiBTdHJpbmcucHJvdG90eXBlLmVuZHNXaXRoKHNlYXJjaFN0cmluZyBbLCBlbmRQb3NpdGlvbl0pXG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgRU5EU19XSVRIID0gJ2VuZHNXaXRoJztcbnZhciAkZW5kc1dpdGggPSAnJ1tFTkRTX1dJVEhdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKEVORFNfV0lUSCksICdTdHJpbmcnLCB7XG4gIGVuZHNXaXRoOiBmdW5jdGlvbiBlbmRzV2l0aChzZWFyY2hTdHJpbmcgLyogLCBlbmRQb3NpdGlvbiA9IEBsZW5ndGggKi8pIHtcbiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBFTkRTX1dJVEgpO1xuICAgIHZhciBlbmRQb3NpdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0aGF0Lmxlbmd0aCk7XG4gICAgdmFyIGVuZCA9IGVuZFBvc2l0aW9uID09PSB1bmRlZmluZWQgPyBsZW4gOiBNYXRoLm1pbih0b0xlbmd0aChlbmRQb3NpdGlvbiksIGxlbik7XG4gICAgdmFyIHNlYXJjaCA9IFN0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiAkZW5kc1dpdGhcbiAgICAgID8gJGVuZHNXaXRoLmNhbGwodGhhdCwgc2VhcmNoLCBlbmQpXG4gICAgICA6IHRoYXQuc2xpY2UoZW5kIC0gc2VhcmNoLmxlbmd0aCwgZW5kKSA9PT0gc2VhcmNoO1xuICB9XG59KTtcbiIsIi8vIDIxLjEuMy43IFN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXMoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbiA9IDApXG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvbnRleHQgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpO1xudmFyIElOQ0xVREVTID0gJ2luY2x1ZGVzJztcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShJTkNMVURFUyksICdTdHJpbmcnLCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICByZXR1cm4gISF+Y29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIElOQ0xVREVTKVxuICAgICAgLmluZGV4T2Yoc2VhcmNoU3RyaW5nLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4xMyBTdHJpbmcucHJvdG90eXBlLnJlcGVhdChjb3VudClcbiAgcmVwZWF0OiByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jylcbn0pO1xuIiwiLy8gMjEuMS4zLjE4IFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgWywgcG9zaXRpb24gXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBTVEFSVFNfV0lUSCA9ICdzdGFydHNXaXRoJztcbnZhciAkc3RhcnRzV2l0aCA9ICcnW1NUQVJUU19XSVRIXTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShTVEFSVFNfV0lUSCksICdTdHJpbmcnLCB7XG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgdmFyIHRoYXQgPSBjb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgU1RBUlRTX1dJVEgpO1xuICAgIHZhciBpbmRleCA9IHRvTGVuZ3RoKE1hdGgubWluKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0aGF0Lmxlbmd0aCkpO1xuICAgIHZhciBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJHN0YXJ0c1dpdGhcbiAgICAgID8gJHN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMiBTdHJpbmcucHJvdG90eXBlLmFuY2hvcihuYW1lKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYW5jaG9yJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGFuY2hvcihuYW1lKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnbmFtZScsIG5hbWUpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4zIFN0cmluZy5wcm90b3R5cGUuYmlnKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JpZycsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBiaWcoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2JpZycsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjQgU3RyaW5nLnByb3RvdHlwZS5ibGluaygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdibGluaycsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBibGluaygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmxpbmsnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy41IFN0cmluZy5wcm90b3R5cGUuYm9sZCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdib2xkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJvbGQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2InLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy42IFN0cmluZy5wcm90b3R5cGUuZml4ZWQoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZml4ZWQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZml4ZWQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3R0JywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNyBTdHJpbmcucHJvdG90eXBlLmZvbnRjb2xvcihjb2xvcilcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRjb2xvcicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmb250Y29sb3IoY29sb3IpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdjb2xvcicsIGNvbG9yKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuOCBTdHJpbmcucHJvdG90eXBlLmZvbnRzaXplKHNpemUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250c2l6ZScsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmb250c2l6ZShzaXplKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnc2l6ZScsIHNpemUpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGl0YWxpY3MoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xMCBTdHJpbmcucHJvdG90eXBlLmxpbmsodXJsKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnbGluaycsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBsaW5rKHVybCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ2hyZWYnLCB1cmwpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xMSBTdHJpbmcucHJvdG90eXBlLnNtYWxsKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3NtYWxsJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNtYWxsKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdzbWFsbCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEyIFN0cmluZy5wcm90b3R5cGUuc3RyaWtlKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N0cmlrZScsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdHJpa2UoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N0cmlrZScsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEzIFN0cmluZy5wcm90b3R5cGUuc3ViKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1YicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdWIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1YicsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjE0IFN0cmluZy5wcm90b3R5cGUuc3VwKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1cCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzdXAoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1cCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIi8vIDIwLjMuMy4xIC8gMTUuOS40LjQgRGF0ZS5ub3coKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdEYXRlJywgeyBub3c6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBuZXcgRGF0ZShOYU4pLnRvSlNPTigpICE9PSBudWxsXG4gICAgfHwgRGF0ZS5wcm90b3R5cGUudG9KU09OLmNhbGwoeyB0b0lTT1N0cmluZzogZnVuY3Rpb24gKCkgeyByZXR1cm4gMTsgfSB9KSAhPT0gMTtcbn0pLCAnRGF0ZScsIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKGtleSkge1xuICAgIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gICAgdmFyIHB2ID0gdG9QcmltaXRpdmUoTyk7XG4gICAgcmV0dXJuIHR5cGVvZiBwdiA9PSAnbnVtYmVyJyAmJiAhaXNGaW5pdGUocHYpID8gbnVsbCA6IE8udG9JU09TdHJpbmcoKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4zLjQuMzYgLyAxNS45LjUuNDMgRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcoKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lTT1N0cmluZyA9IHJlcXVpcmUoJy4vX2RhdGUtdG8taXNvLXN0cmluZycpO1xuXG4vLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnNcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nICE9PSB0b0lTT1N0cmluZyksICdEYXRlJywge1xuICB0b0lTT1N0cmluZzogdG9JU09TdHJpbmdcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZ2V0VGltZSA9IERhdGUucHJvdG90eXBlLmdldFRpbWU7XG52YXIgJHRvSVNPU3RyaW5nID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBseiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgcmV0dXJuIG51bSA+IDkgPyBudW0gOiAnMCcgKyBudW07XG59O1xuXG4vLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnNcbm1vZHVsZS5leHBvcnRzID0gKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICR0b0lTT1N0cmluZy5jYWxsKG5ldyBEYXRlKC01ZTEzIC0gMSkpICE9ICcwMzg1LTA3LTI1VDA3OjA2OjM5Ljk5OVonO1xufSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoTmFOKSk7XG59KSkgPyBmdW5jdGlvbiB0b0lTT1N0cmluZygpIHtcbiAgaWYgKCFpc0Zpbml0ZShnZXRUaW1lLmNhbGwodGhpcykpKSB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcbiAgdmFyIGQgPSB0aGlzO1xuICB2YXIgeSA9IGQuZ2V0VVRDRnVsbFllYXIoKTtcbiAgdmFyIG0gPSBkLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICB2YXIgcyA9IHkgPCAwID8gJy0nIDogeSA+IDk5OTkgPyAnKycgOiAnJztcbiAgcmV0dXJuIHMgKyAoJzAwMDAwJyArIE1hdGguYWJzKHkpKS5zbGljZShzID8gLTYgOiAtNCkgK1xuICAgICctJyArIGx6KGQuZ2V0VVRDTW9udGgoKSArIDEpICsgJy0nICsgbHooZC5nZXRVVENEYXRlKCkpICtcbiAgICAnVCcgKyBseihkLmdldFVUQ0hvdXJzKCkpICsgJzonICsgbHooZC5nZXRVVENNaW51dGVzKCkpICtcbiAgICAnOicgKyBseihkLmdldFVUQ1NlY29uZHMoKSkgKyAnLicgKyAobSA+IDk5ID8gbSA6ICcwJyArIGx6KG0pKSArICdaJztcbn0gOiAkdG9JU09TdHJpbmc7XG4iLCJ2YXIgRGF0ZVByb3RvID0gRGF0ZS5wcm90b3R5cGU7XG52YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXTtcbnZhciBnZXRUaW1lID0gRGF0ZVByb3RvLmdldFRpbWU7XG5pZiAobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSkge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKERhdGVQcm90bywgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59XG4iLCJ2YXIgVE9fUFJJTUlUSVZFID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvUHJpbWl0aXZlJyk7XG52YXIgcHJvdG8gPSBEYXRlLnByb3RvdHlwZTtcblxuaWYgKCEoVE9fUFJJTUlUSVZFIGluIHByb3RvKSkgcmVxdWlyZSgnLi9faGlkZScpKHByb3RvLCBUT19QUklNSVRJVkUsIHJlcXVpcmUoJy4vX2RhdGUtdG8tcHJpbWl0aXZlJykpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBOVU1CRVIgPSAnbnVtYmVyJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGludCkge1xuICBpZiAoaGludCAhPT0gJ3N0cmluZycgJiYgaGludCAhPT0gTlVNQkVSICYmIGhpbnQgIT09ICdkZWZhdWx0JykgdGhyb3cgVHlwZUVycm9yKCdJbmNvcnJlY3QgaGludCcpO1xuICByZXR1cm4gdG9QcmltaXRpdmUoYW5PYmplY3QodGhpcyksIGhpbnQgIT0gTlVNQkVSKTtcbn07XG4iLCIvLyAyMi4xLjIuMiAvIDE1LjQuMy4yIEFycmF5LmlzQXJyYXkoYXJnKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdBcnJheScsIHsgaXNBcnJheTogcmVxdWlyZSgnLi9faXMtYXJyYXknKSB9KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24gKGl0ZXIpIHsgQXJyYXkuZnJvbShpdGVyKTsgfSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjEgQXJyYXkuZnJvbShhcnJheUxpa2UsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICBmcm9tOiBmdW5jdGlvbiBmcm9tKGFycmF5TGlrZSAvKiAsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBDID0gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiBBcnJheTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIG1hcGZuID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgbGVuZ3RoLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmIChtYXBwaW5nKSBtYXBmbiA9IGN0eChtYXBmbiwgYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpO1xuICAgIC8vIGlmIG9iamVjdCBpc24ndCBpdGVyYWJsZSBvciBpdCdzIGFycmF5IHdpdGggZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBzaW1wbGUgY2FzZVxuICAgIGlmIChpdGVyRm4gIT0gdW5kZWZpbmVkICYmICEoQyA9PSBBcnJheSAmJiBpc0FycmF5SXRlcihpdGVyRm4pKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCByZXN1bHQgPSBuZXcgQygpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IGNhbGwoaXRlcmF0b3IsIG1hcGZuLCBbc3RlcC52YWx1ZSwgaW5kZXhdLCB0cnVlKSA6IHN0ZXAudmFsdWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgICBmb3IgKHJlc3VsdCA9IG5ldyBDKGxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbi8vIFdlYktpdCBBcnJheS5vZiBpc24ndCBnZW5lcmljXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZSAoYUxlbiA+IGluZGV4KSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBhTGVuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5qb2luKHNlcGFyYXRvcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5Sm9pbiA9IFtdLmpvaW47XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBzdHJpbmdzXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChyZXF1aXJlKCcuL19pb2JqZWN0JykgIT0gT2JqZWN0IHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoYXJyYXlKb2luKSksICdBcnJheScsIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodG9JT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHNcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGlmIChodG1sKSBhcnJheVNsaWNlLmNhbGwoaHRtbCk7XG59KSwgJ0FycmF5Jywge1xuICBzbGljZTogZnVuY3Rpb24gc2xpY2UoYmVnaW4sIGVuZCkge1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0aGlzLmxlbmd0aCk7XG4gICAgdmFyIGtsYXNzID0gY29mKHRoaXMpO1xuICAgIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kO1xuICAgIGlmIChrbGFzcyA9PSAnQXJyYXknKSByZXR1cm4gYXJyYXlTbGljZS5jYWxsKHRoaXMsIGJlZ2luLCBlbmQpO1xuICAgIHZhciBzdGFydCA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuKTtcbiAgICB2YXIgdXBUbyA9IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbik7XG4gICAgdmFyIHNpemUgPSB0b0xlbmd0aCh1cFRvIC0gc3RhcnQpO1xuICAgIHZhciBjbG9uZWQgPSBuZXcgQXJyYXkoc2l6ZSk7XG4gICAgdmFyIGkgPSAwO1xuICAgIGZvciAoOyBpIDwgc2l6ZTsgaSsrKSBjbG9uZWRbaV0gPSBrbGFzcyA9PSAnU3RyaW5nJ1xuICAgICAgPyB0aGlzLmNoYXJBdChzdGFydCArIGkpXG4gICAgICA6IHRoaXNbc3RhcnQgKyBpXTtcbiAgICByZXR1cm4gY2xvbmVkO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRzb3J0ID0gW10uc29ydDtcbnZhciB0ZXN0ID0gWzEsIDIsIDNdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBWOCBidWdcbiAgdGVzdC5zb3J0KG51bGwpO1xuICAvLyBPbGQgV2ViS2l0XG59KSB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRzb3J0KSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjI1IEFycmF5LnByb3RvdHlwZS5zb3J0KGNvbXBhcmVmbilcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgU1RSSUNUID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZvckVhY2godGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWwpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsKSkge1xuICAgIEMgPSBvcmlnaW5hbC5jb25zdHJ1Y3RvcjtcbiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFja1xuICAgIGlmICh0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpIEMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGlzT2JqZWN0KEMpKSB7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmIChDID09PSBudWxsKSBDID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gQXJyYXkgOiBDO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJG1hcCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgxKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLm1hcCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE1IC8gMTUuNC40LjE5IEFycmF5LnByb3RvdHlwZS5tYXAoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgbWFwOiBmdW5jdGlvbiBtYXAoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJG1hcCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgyKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZpbHRlciwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjcgLyAxNS40LjQuMjAgQXJyYXkucHJvdG90eXBlLmZpbHRlcihjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZmlsdGVyKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkc29tZSA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgzKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnNvbWUsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4yMyAvIDE1LjQuNC4xNyBBcnJheS5wcm90b3R5cGUuc29tZShjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBzb21lOiBmdW5jdGlvbiBzb21lKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRzb21lKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZXZlcnkgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5ldmVyeSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjUgLyAxNS40LjQuMTYgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZXZlcnkodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE4IC8gMTUuNC40LjIxIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2VSaWdodCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE5IC8gMTUuNC40LjIyIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodChjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRpbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgJG5hdGl2ZSA9IFtdLmluZGV4T2Y7XG52YXIgTkVHQVRJVkVfWkVSTyA9ICEhJG5hdGl2ZSAmJiAxIC8gWzFdLmluZGV4T2YoMSwgLTApIDwgMDtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoTkVHQVRJVkVfWkVSTyB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRuYXRpdmUpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTEgLyAxNS40LjQuMTQgQXJyYXkucHJvdG90eXBlLmluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKVxuICBpbmRleE9mOiBmdW5jdGlvbiBpbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuIE5FR0FUSVZFX1pFUk9cbiAgICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICAgID8gJG5hdGl2ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDBcbiAgICAgIDogJGluZGV4T2YodGhpcywgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciAkbmF0aXZlID0gW10ubGFzdEluZGV4T2Y7XG52YXIgTkVHQVRJVkVfWkVSTyA9ICEhJG5hdGl2ZSAmJiAxIC8gWzFdLmxhc3RJbmRleE9mKDEsIC0wKSA8IDA7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE0IC8gMTUuNC40LjE1IEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IFssIGZyb21JbmRleF0pXG4gIGxhc3RJbmRleE9mOiBmdW5jdGlvbiBsYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ID0gQFsqLTFdICovKSB7XG4gICAgLy8gY29udmVydCAtMCB0byArMFxuICAgIGlmIChORUdBVElWRV9aRVJPKSByZXR1cm4gJG5hdGl2ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDA7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QodGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSBsZW5ndGggLSAxO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkgaW5kZXggPSBNYXRoLm1pbihpbmRleCwgdG9JbnRlZ2VyKGFyZ3VtZW50c1sxXSkpO1xuICAgIGlmIChpbmRleCA8IDApIGluZGV4ID0gbGVuZ3RoICsgaW5kZXg7XG4gICAgZm9yICg7aW5kZXggPj0gMDsgaW5kZXgtLSkgaWYgKGluZGV4IGluIE8pIGlmIChPW2luZGV4XSA9PT0gc2VhcmNoRWxlbWVudCkgcmV0dXJuIGluZGV4IHx8IDA7XG4gICAgcmV0dXJuIC0xO1xuICB9XG59KTtcbiIsIi8vIDIyLjEuMy4zIEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluKHRhcmdldCwgc3RhcnQsIGVuZCA9IHRoaXMubGVuZ3RoKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHsgY29weVdpdGhpbjogcmVxdWlyZSgnLi9fYXJyYXktY29weS13aXRoaW4nKSB9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2NvcHlXaXRoaW4nKTtcbiIsIi8vIDIyLjEuMy42IEFycmF5LnByb3RvdHlwZS5maWxsKHZhbHVlLCBzdGFydCA9IDAsIGVuZCA9IHRoaXMubGVuZ3RoKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHsgZmlsbDogcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnZmlsbCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjggQXJyYXkucHJvdG90eXBlLmZpbmQocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg1KTtcbnZhciBLRVkgPSAnZmluZCc7XG52YXIgZm9yY2VkID0gdHJ1ZTtcbi8vIFNob3VsZG4ndCBza2lwIGhvbGVzXG5pZiAoS0VZIGluIFtdKSBBcnJheSgxKVtLRVldKGZ1bmN0aW9uICgpIHsgZm9yY2VkID0gZmFsc2U7IH0pO1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmb3JjZWQsICdBcnJheScsIHtcbiAgZmluZDogZnVuY3Rpb24gZmluZChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDIyLjEuMy45IEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXgocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg2KTtcbnZhciBLRVkgPSAnZmluZEluZGV4JztcbnZhciBmb3JjZWQgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmIChLRVkgaW4gW10pIEFycmF5KDEpW0tFWV0oZnVuY3Rpb24gKCkgeyBmb3JjZWQgPSBmYWxzZTsgfSk7XG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZvcmNlZCwgJ0FycmF5Jywge1xuICBmaW5kSW5kZXg6IGZ1bmN0aW9uIGZpbmRJbmRleChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiIsInJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuL19pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciAkZmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xudmFyICRSZWdFeHAgPSBnbG9iYWwuUmVnRXhwO1xudmFyIEJhc2UgPSAkUmVnRXhwO1xudmFyIHByb3RvID0gJFJlZ0V4cC5wcm90b3R5cGU7XG52YXIgcmUxID0gL2EvZztcbnZhciByZTIgPSAvYS9nO1xuLy8gXCJuZXdcIiBjcmVhdGVzIGEgbmV3IG9iamVjdCwgb2xkIHdlYmtpdCBidWdneSBoZXJlXG52YXIgQ09SUkVDVF9ORVcgPSBuZXcgJFJlZ0V4cChyZTEpICE9PSByZTE7XG5cbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICghQ09SUkVDVF9ORVcgfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJlMltyZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKV0gPSBmYWxzZTtcbiAgLy8gUmVnRXhwIGNvbnN0cnVjdG9yIGNhbiBhbHRlciBmbGFncyBhbmQgSXNSZWdFeHAgd29ya3MgY29ycmVjdCB3aXRoIEBAbWF0Y2hcbiAgcmV0dXJuICRSZWdFeHAocmUxKSAhPSByZTEgfHwgJFJlZ0V4cChyZTIpID09IHJlMiB8fCAkUmVnRXhwKHJlMSwgJ2knKSAhPSAnL2EvaSc7XG59KSkpIHtcbiAgJFJlZ0V4cCA9IGZ1bmN0aW9uIFJlZ0V4cChwLCBmKSB7XG4gICAgdmFyIHRpUkUgPSB0aGlzIGluc3RhbmNlb2YgJFJlZ0V4cDtcbiAgICB2YXIgcGlSRSA9IGlzUmVnRXhwKHApO1xuICAgIHZhciBmaVUgPSBmID09PSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuICF0aVJFICYmIHBpUkUgJiYgcC5jb25zdHJ1Y3RvciA9PT0gJFJlZ0V4cCAmJiBmaVUgPyBwXG4gICAgICA6IGluaGVyaXRJZlJlcXVpcmVkKENPUlJFQ1RfTkVXXG4gICAgICAgID8gbmV3IEJhc2UocGlSRSAmJiAhZmlVID8gcC5zb3VyY2UgOiBwLCBmKVxuICAgICAgICA6IEJhc2UoKHBpUkUgPSBwIGluc3RhbmNlb2YgJFJlZ0V4cCkgPyBwLnNvdXJjZSA6IHAsIHBpUkUgJiYgZmlVID8gJGZsYWdzLmNhbGwocCkgOiBmKVxuICAgICAgLCB0aVJFID8gdGhpcyA6IHByb3RvLCAkUmVnRXhwKTtcbiAgfTtcbiAgdmFyIHByb3h5ID0gZnVuY3Rpb24gKGtleSkge1xuICAgIGtleSBpbiAkUmVnRXhwIHx8IGRQKCRSZWdFeHAsIGtleSwge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCYXNlW2tleV07IH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uIChpdCkgeyBCYXNlW2tleV0gPSBpdDsgfVxuICAgIH0pO1xuICB9O1xuICBmb3IgKHZhciBrZXlzID0gZ09QTihCYXNlKSwgaSA9IDA7IGtleXMubGVuZ3RoID4gaTspIHByb3h5KGtleXNbaSsrXSk7XG4gIHByb3RvLmNvbnN0cnVjdG9yID0gJFJlZ0V4cDtcbiAgJFJlZ0V4cC5wcm90b3R5cGUgPSBwcm90bztcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShnbG9iYWwsICdSZWdFeHAnLCAkUmVnRXhwKTtcbn1cblxucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKSgnUmVnRXhwJyk7XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRmbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgJHRvU3RyaW5nID0gLy4vW1RPX1NUUklOR107XG5cbnZhciBkZWZpbmUgPSBmdW5jdGlvbiAoZm4pIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShSZWdFeHAucHJvdG90eXBlLCBUT19TVFJJTkcsIGZuLCB0cnVlKTtcbn07XG5cbi8vIDIxLjIuNS4xNCBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nKClcbmlmIChyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHsgcmV0dXJuICR0b1N0cmluZy5jYWxsKHsgc291cmNlOiAnYScsIGZsYWdzOiAnYicgfSkgIT0gJy9hL2InOyB9KSkge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgdmFyIFIgPSBhbk9iamVjdCh0aGlzKTtcbiAgICByZXR1cm4gJy8nLmNvbmNhdChSLnNvdXJjZSwgJy8nLFxuICAgICAgJ2ZsYWdzJyBpbiBSID8gUi5mbGFncyA6ICFERVNDUklQVE9SUyAmJiBSIGluc3RhbmNlb2YgUmVnRXhwID8gJGZsYWdzLmNhbGwoUikgOiB1bmRlZmluZWQpO1xuICB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG59IGVsc2UgaWYgKCR0b1N0cmluZy5uYW1lICE9IFRPX1NUUklORykge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICR0b1N0cmluZy5jYWxsKHRoaXMpO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQG1hdGNoIGxvZ2ljXG5yZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ21hdGNoJywgMSwgZnVuY3Rpb24gKGRlZmluZWQsIE1BVENILCAkbWF0Y2gsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICByZXR1cm4gW1xuICAgIC8vIGBTdHJpbmcucHJvdG90eXBlLm1hdGNoYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLm1hdGNoXG4gICAgZnVuY3Rpb24gbWF0Y2gocmVnZXhwKSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgZm4gPSByZWdleHAgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogcmVnZXhwW01BVENIXTtcbiAgICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW01BVENIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBtYXRjaF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBtYXRjaFxuICAgIGZ1bmN0aW9uIChyZWdleHApIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJG1hdGNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgaWYgKCFyeC5nbG9iYWwpIHJldHVybiByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgIHZhciBmdWxsVW5pY29kZSA9IHJ4LnVuaWNvZGU7XG4gICAgICByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIEEgPSBbXTtcbiAgICAgIHZhciBuID0gMDtcbiAgICAgIHZhciByZXN1bHQ7XG4gICAgICB3aGlsZSAoKHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpKSAhPT0gbnVsbCkge1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgQVtuXSA9IG1hdGNoU3RyO1xuICAgICAgICBpZiAobWF0Y2hTdHIgPT09ICcnKSByeC5sYXN0SW5kZXggPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgdG9MZW5ndGgocngubGFzdEluZGV4KSwgZnVsbFVuaWNvZGUpO1xuICAgICAgICBuKys7XG4gICAgICB9XG4gICAgICByZXR1cm4gbiA9PT0gMCA/IG51bGwgOiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xudmFyIFNVQlNUSVRVVElPTl9TWU1CT0xTID0gL1xcJChbJCZgJ118XFxkXFxkP3w8W14+XSo+KS9nO1xudmFyIFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEID0gL1xcJChbJCZgJ118XFxkXFxkPykvZztcblxudmFyIG1heWJlVG9TdHJpbmcgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyBpdCA6IFN0cmluZyhpdCk7XG59O1xuXG4vLyBAQHJlcGxhY2UgbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgncmVwbGFjZScsIDIsIGZ1bmN0aW9uIChkZWZpbmVkLCBSRVBMQUNFLCAkcmVwbGFjZSwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlXG4gICAgZnVuY3Rpb24gcmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgZm4gPSBzZWFyY2hWYWx1ZSA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZWFyY2hWYWx1ZVtSRVBMQUNFXTtcbiAgICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gZm4uY2FsbChzZWFyY2hWYWx1ZSwgTywgcmVwbGFjZVZhbHVlKVxuICAgICAgICA6ICRyZXBsYWNlLmNhbGwoU3RyaW5nKE8pLCBzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTtcbiAgICB9LFxuICAgIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAcmVwbGFjZV1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEByZXBsYWNlXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCwgcmVwbGFjZVZhbHVlKSB7XG4gICAgICB2YXIgcmVzID0gbWF5YmVDYWxsTmF0aXZlKCRyZXBsYWNlLCByZWdleHAsIHRoaXMsIHJlcGxhY2VWYWx1ZSk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG5cbiAgICAgIHZhciByeCA9IGFuT2JqZWN0KHJlZ2V4cCk7XG4gICAgICB2YXIgUyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIHZhciBmdW5jdGlvbmFsUmVwbGFjZSA9IHR5cGVvZiByZXBsYWNlVmFsdWUgPT09ICdmdW5jdGlvbic7XG4gICAgICBpZiAoIWZ1bmN0aW9uYWxSZXBsYWNlKSByZXBsYWNlVmFsdWUgPSBTdHJpbmcocmVwbGFjZVZhbHVlKTtcbiAgICAgIHZhciBnbG9iYWwgPSByeC5nbG9iYWw7XG4gICAgICBpZiAoZ2xvYmFsKSB7XG4gICAgICAgIHZhciBmdWxsVW5pY29kZSA9IHJ4LnVuaWNvZGU7XG4gICAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB9XG4gICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgICBpZiAocmVzdWx0ID09PSBudWxsKSBicmVhaztcbiAgICAgICAgcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIGlmICghZ2xvYmFsKSBicmVhaztcbiAgICAgICAgdmFyIG1hdGNoU3RyID0gU3RyaW5nKHJlc3VsdFswXSk7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICB9XG4gICAgICB2YXIgYWNjdW11bGF0ZWRSZXN1bHQgPSAnJztcbiAgICAgIHZhciBuZXh0U291cmNlUG9zaXRpb24gPSAwO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdHNbaV07XG4gICAgICAgIHZhciBtYXRjaGVkID0gU3RyaW5nKHJlc3VsdFswXSk7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9IG1heChtaW4odG9JbnRlZ2VyKHJlc3VsdC5pbmRleCksIFMubGVuZ3RoKSwgMCk7XG4gICAgICAgIHZhciBjYXB0dXJlcyA9IFtdO1xuICAgICAgICAvLyBOT1RFOiBUaGlzIGlzIGVxdWl2YWxlbnQgdG9cbiAgICAgICAgLy8gICBjYXB0dXJlcyA9IHJlc3VsdC5zbGljZSgxKS5tYXAobWF5YmVUb1N0cmluZylcbiAgICAgICAgLy8gYnV0IGZvciBzb21lIHJlYXNvbiBgbmF0aXZlU2xpY2UuY2FsbChyZXN1bHQsIDEsIHJlc3VsdC5sZW5ndGgpYCAoY2FsbGVkIGluXG4gICAgICAgIC8vIHRoZSBzbGljZSBwb2x5ZmlsbCB3aGVuIHNsaWNpbmcgbmF0aXZlIGFycmF5cykgXCJkb2Vzbid0IHdvcmtcIiBpbiBzYWZhcmkgOSBhbmRcbiAgICAgICAgLy8gY2F1c2VzIGEgY3Jhc2ggKGh0dHBzOi8vcGFzdGViaW4uY29tL04yMVF6ZVFBKSB3aGVuIHRyeWluZyB0byBkZWJ1ZyBpdC5cbiAgICAgICAgZm9yICh2YXIgaiA9IDE7IGogPCByZXN1bHQubGVuZ3RoOyBqKyspIGNhcHR1cmVzLnB1c2gobWF5YmVUb1N0cmluZyhyZXN1bHRbal0pKTtcbiAgICAgICAgdmFyIG5hbWVkQ2FwdHVyZXMgPSByZXN1bHQuZ3JvdXBzO1xuICAgICAgICBpZiAoZnVuY3Rpb25hbFJlcGxhY2UpIHtcbiAgICAgICAgICB2YXIgcmVwbGFjZXJBcmdzID0gW21hdGNoZWRdLmNvbmNhdChjYXB0dXJlcywgcG9zaXRpb24sIFMpO1xuICAgICAgICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHJlcGxhY2VyQXJncy5wdXNoKG5hbWVkQ2FwdHVyZXMpO1xuICAgICAgICAgIHZhciByZXBsYWNlbWVudCA9IFN0cmluZyhyZXBsYWNlVmFsdWUuYXBwbHkodW5kZWZpbmVkLCByZXBsYWNlckFyZ3MpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXBsYWNlbWVudCA9IGdldFN1YnN0aXR1dGlvbihtYXRjaGVkLCBTLCBwb3NpdGlvbiwgY2FwdHVyZXMsIG5hbWVkQ2FwdHVyZXMsIHJlcGxhY2VWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBvc2l0aW9uID49IG5leHRTb3VyY2VQb3NpdGlvbikge1xuICAgICAgICAgIGFjY3VtdWxhdGVkUmVzdWx0ICs9IFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uLCBwb3NpdGlvbikgKyByZXBsYWNlbWVudDtcbiAgICAgICAgICBuZXh0U291cmNlUG9zaXRpb24gPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjdW11bGF0ZWRSZXN1bHQgKyBTLnNsaWNlKG5leHRTb3VyY2VQb3NpdGlvbik7XG4gICAgfVxuICBdO1xuXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtZ2V0c3Vic3RpdHV0aW9uXG4gIGZ1bmN0aW9uIGdldFN1YnN0aXR1dGlvbihtYXRjaGVkLCBzdHIsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZW1lbnQpIHtcbiAgICB2YXIgdGFpbFBvcyA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgdmFyIG0gPSBjYXB0dXJlcy5sZW5ndGg7XG4gICAgdmFyIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MU19OT19OQU1FRDtcbiAgICBpZiAobmFtZWRDYXB0dXJlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBuYW1lZENhcHR1cmVzID0gdG9PYmplY3QobmFtZWRDYXB0dXJlcyk7XG4gICAgICBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFM7XG4gICAgfVxuICAgIHJldHVybiAkcmVwbGFjZS5jYWxsKHJlcGxhY2VtZW50LCBzeW1ib2xzLCBmdW5jdGlvbiAobWF0Y2gsIGNoKSB7XG4gICAgICB2YXIgY2FwdHVyZTtcbiAgICAgIHN3aXRjaCAoY2guY2hhckF0KDApKSB7XG4gICAgICAgIGNhc2UgJyQnOiByZXR1cm4gJyQnO1xuICAgICAgICBjYXNlICcmJzogcmV0dXJuIG1hdGNoZWQ7XG4gICAgICAgIGNhc2UgJ2AnOiByZXR1cm4gc3RyLnNsaWNlKDAsIHBvc2l0aW9uKTtcbiAgICAgICAgY2FzZSBcIidcIjogcmV0dXJuIHN0ci5zbGljZSh0YWlsUG9zKTtcbiAgICAgICAgY2FzZSAnPCc6XG4gICAgICAgICAgY2FwdHVyZSA9IG5hbWVkQ2FwdHVyZXNbY2guc2xpY2UoMSwgLTEpXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDogLy8gXFxkXFxkP1xuICAgICAgICAgIHZhciBuID0gK2NoO1xuICAgICAgICAgIGlmIChuID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgaWYgKG4gPiBtKSB7XG4gICAgICAgICAgICB2YXIgZiA9IGZsb29yKG4gLyAxMCk7XG4gICAgICAgICAgICBpZiAoZiA9PT0gMCkgcmV0dXJuIG1hdGNoO1xuICAgICAgICAgICAgaWYgKGYgPD0gbSkgcmV0dXJuIGNhcHR1cmVzW2YgLSAxXSA9PT0gdW5kZWZpbmVkID8gY2guY2hhckF0KDEpIDogY2FwdHVyZXNbZiAtIDFdICsgY2guY2hhckF0KDEpO1xuICAgICAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXB0dXJlID0gY2FwdHVyZXNbbiAtIDFdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNhcHR1cmUgPT09IHVuZGVmaW5lZCA/ICcnIDogY2FwdHVyZTtcbiAgICB9KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNhbWVWYWx1ZSA9IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcblxuLy8gQEBzZWFyY2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc2VhcmNoJywgMSwgZnVuY3Rpb24gKGRlZmluZWQsIFNFQVJDSCwgJHNlYXJjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc2VhcmNoYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNlYXJjaFxuICAgIGZ1bmN0aW9uIHNlYXJjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbU0VBUkNIXTtcbiAgICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW1NFQVJDSF0oU3RyaW5nKE8pKTtcbiAgICB9LFxuICAgIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHNlYXJjaFxuICAgIGZ1bmN0aW9uIChyZWdleHApIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHNlYXJjaCwgcmVnZXhwLCB0aGlzKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcbiAgICAgIHZhciByeCA9IGFuT2JqZWN0KHJlZ2V4cCk7XG4gICAgICB2YXIgUyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIHZhciBwcmV2aW91c0xhc3RJbmRleCA9IHJ4Lmxhc3RJbmRleDtcbiAgICAgIGlmICghc2FtZVZhbHVlKHByZXZpb3VzTGFzdEluZGV4LCAwKSkgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciByZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgIGlmICghc2FtZVZhbHVlKHJ4Lmxhc3RJbmRleCwgcHJldmlvdXNMYXN0SW5kZXgpKSByeC5sYXN0SW5kZXggPSBwcmV2aW91c0xhc3RJbmRleDtcbiAgICAgIHJldHVybiByZXN1bHQgPT09IG51bGwgPyAtMSA6IHJlc3VsdC5pbmRleDtcbiAgICB9XG4gIF07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNhbGxSZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJG1pbiA9IE1hdGgubWluO1xudmFyICRwdXNoID0gW10ucHVzaDtcbnZhciAkU1BMSVQgPSAnc3BsaXQnO1xudmFyIExFTkdUSCA9ICdsZW5ndGgnO1xudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcbnZhciBNQVhfVUlOVDMyID0gMHhmZmZmZmZmZjtcblxuLy8gYmFiZWwtbWluaWZ5IHRyYW5zcGlsZXMgUmVnRXhwKCd4JywgJ3knKSAtPiAveC95IGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciBTVVBQT1JUU19ZID0gIWZhaWxzKGZ1bmN0aW9uICgpIHsgUmVnRXhwKE1BWF9VSU5UMzIsICd5Jyk7IH0pO1xuXG4vLyBAQHNwbGl0IGxvZ2ljXG5yZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3NwbGl0JywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFNQTElULCAkc3BsaXQsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICB2YXIgaW50ZXJuYWxTcGxpdDtcbiAgaWYgKFxuICAgICdhYmJjJ1skU1BMSVRdKC8oYikqLylbMV0gPT0gJ2MnIHx8XG4gICAgJ3Rlc3QnWyRTUExJVF0oLyg/OikvLCAtMSlbTEVOR1RIXSAhPSA0IHx8XG4gICAgJ2FiJ1skU1BMSVRdKC8oPzphYikqLylbTEVOR1RIXSAhPSAyIHx8XG4gICAgJy4nWyRTUExJVF0oLyguPykoLj8pLylbTEVOR1RIXSAhPSA0IHx8XG4gICAgJy4nWyRTUExJVF0oLygpKCkvKVtMRU5HVEhdID4gMSB8fFxuICAgICcnWyRTUExJVF0oLy4/LylbTEVOR1RIXVxuICApIHtcbiAgICAvLyBiYXNlZCBvbiBlczUtc2hpbSBpbXBsZW1lbnRhdGlvbiwgbmVlZCB0byByZXdvcmsgaXRcbiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gKHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICAgIHZhciBzdHJpbmcgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDApIHJldHVybiBbXTtcbiAgICAgIC8vIElmIGBzZXBhcmF0b3JgIGlzIG5vdCBhIHJlZ2V4LCB1c2UgbmF0aXZlIHNwbGl0XG4gICAgICBpZiAoIWlzUmVnRXhwKHNlcGFyYXRvcikpIHJldHVybiAkc3BsaXQuY2FsbChzdHJpbmcsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgICAgdmFyIG91dHB1dCA9IFtdO1xuICAgICAgdmFyIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IubXVsdGlsaW5lID8gJ20nIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IudW5pY29kZSA/ICd1JyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnN0aWNreSA/ICd5JyA6ICcnKTtcbiAgICAgIHZhciBsYXN0TGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBzcGxpdExpbWl0ID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IE1BWF9VSU5UMzIgOiBsaW1pdCA+Pj4gMDtcbiAgICAgIC8vIE1ha2UgYGdsb2JhbGAgYW5kIGF2b2lkIGBsYXN0SW5kZXhgIGlzc3VlcyBieSB3b3JraW5nIHdpdGggYSBjb3B5XG4gICAgICB2YXIgc2VwYXJhdG9yQ29weSA9IG5ldyBSZWdFeHAoc2VwYXJhdG9yLnNvdXJjZSwgZmxhZ3MgKyAnZycpO1xuICAgICAgdmFyIG1hdGNoLCBsYXN0SW5kZXgsIGxhc3RMZW5ndGg7XG4gICAgICB3aGlsZSAobWF0Y2ggPSByZWdleHBFeGVjLmNhbGwoc2VwYXJhdG9yQ29weSwgc3RyaW5nKSkge1xuICAgICAgICBsYXN0SW5kZXggPSBzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdO1xuICAgICAgICBpZiAobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCkge1xuICAgICAgICAgIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4LCBtYXRjaC5pbmRleCkpO1xuICAgICAgICAgIGlmIChtYXRjaFtMRU5HVEhdID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0cmluZ1tMRU5HVEhdKSAkcHVzaC5hcHBseShvdXRwdXQsIG1hdGNoLnNsaWNlKDEpKTtcbiAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF1bTEVOR1RIXTtcbiAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4O1xuICAgICAgICAgIGlmIChvdXRwdXRbTEVOR1RIXSA+PSBzcGxpdExpbWl0KSBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSA9PT0gbWF0Y2guaW5kZXgpIHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0rKzsgLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcFxuICAgICAgfVxuICAgICAgaWYgKGxhc3RMYXN0SW5kZXggPT09IHN0cmluZ1tMRU5HVEhdKSB7XG4gICAgICAgIGlmIChsYXN0TGVuZ3RoIHx8ICFzZXBhcmF0b3JDb3B5LnRlc3QoJycpKSBvdXRwdXQucHVzaCgnJyk7XG4gICAgICB9IGVsc2Ugb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTtcbiAgICAgIHJldHVybiBvdXRwdXRbTEVOR1RIXSA+IHNwbGl0TGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgc3BsaXRMaW1pdCkgOiBvdXRwdXQ7XG4gICAgfTtcbiAgLy8gQ2hha3JhLCBWOFxuICB9IGVsc2UgaWYgKCcwJ1skU1BMSVRdKHVuZGVmaW5lZCwgMClbTEVOR1RIXSkge1xuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgcmV0dXJuIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkICYmIGxpbWl0ID09PSAwID8gW10gOiAkc3BsaXQuY2FsbCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIGludGVybmFsU3BsaXQgPSAkc3BsaXQ7XG4gIH1cblxuICByZXR1cm4gW1xuICAgIC8vIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0YCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNwbGl0XG4gICAgZnVuY3Rpb24gc3BsaXQoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIHNwbGl0dGVyID0gc2VwYXJhdG9yID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlcGFyYXRvcltTUExJVF07XG4gICAgICByZXR1cm4gc3BsaXR0ZXIgIT09IHVuZGVmaW5lZFxuICAgICAgICA/IHNwbGl0dGVyLmNhbGwoc2VwYXJhdG9yLCBPLCBsaW1pdClcbiAgICAgICAgOiBpbnRlcm5hbFNwbGl0LmNhbGwoU3RyaW5nKE8pLCBzZXBhcmF0b3IsIGxpbWl0KTtcbiAgICB9LFxuICAgIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc3BsaXRcbiAgICAvL1xuICAgIC8vIE5PVEU6IFRoaXMgY2Fubm90IGJlIHByb3Blcmx5IHBvbHlmaWxsZWQgaW4gZW5naW5lcyB0aGF0IGRvbid0IHN1cHBvcnRcbiAgICAvLyB0aGUgJ3knIGZsYWcuXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCwgbGltaXQpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoaW50ZXJuYWxTcGxpdCwgcmVnZXhwLCB0aGlzLCBsaW1pdCwgaW50ZXJuYWxTcGxpdCAhPT0gJHNwbGl0KTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IocngsIFJlZ0V4cCk7XG5cbiAgICAgIHZhciB1bmljb2RlTWF0Y2hpbmcgPSByeC51bmljb2RlO1xuICAgICAgdmFyIGZsYWdzID0gKHJ4Lmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHJ4Lm11bHRpbGluZSA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngudW5pY29kZSA/ICd1JyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAoU1VQUE9SVFNfWSA/ICd5JyA6ICdnJyk7XG5cbiAgICAgIC8vIF4oPyArIHJ4ICsgKSBpcyBuZWVkZWQsIGluIGNvbWJpbmF0aW9uIHdpdGggc29tZSBTIHNsaWNpbmcsIHRvXG4gICAgICAvLyBzaW11bGF0ZSB0aGUgJ3knIGZsYWcuXG4gICAgICB2YXIgc3BsaXR0ZXIgPSBuZXcgQyhTVVBQT1JUU19ZID8gcnggOiAnXig/OicgKyByeC5zb3VyY2UgKyAnKScsIGZsYWdzKTtcbiAgICAgIHZhciBsaW0gPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgaWYgKGxpbSA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgaWYgKFMubGVuZ3RoID09PSAwKSByZXR1cm4gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFMpID09PSBudWxsID8gW1NdIDogW107XG4gICAgICB2YXIgcCA9IDA7XG4gICAgICB2YXIgcSA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgd2hpbGUgKHEgPCBTLmxlbmd0aCkge1xuICAgICAgICBzcGxpdHRlci5sYXN0SW5kZXggPSBTVVBQT1JUU19ZID8gcSA6IDA7XG4gICAgICAgIHZhciB6ID0gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFNVUFBPUlRTX1kgPyBTIDogUy5zbGljZShxKSk7XG4gICAgICAgIHZhciBlO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgeiA9PT0gbnVsbCB8fFxuICAgICAgICAgIChlID0gJG1pbih0b0xlbmd0aChzcGxpdHRlci5sYXN0SW5kZXggKyAoU1VQUE9SVFNfWSA/IDAgOiBxKSksIFMubGVuZ3RoKSkgPT09IHBcbiAgICAgICAgKSB7XG4gICAgICAgICAgcSA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCBxLCB1bmljb2RlTWF0Y2hpbmcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIEEucHVzaChTLnNsaWNlKHAsIHEpKTtcbiAgICAgICAgICBpZiAoQS5sZW5ndGggPT09IGxpbSkgcmV0dXJuIEE7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gei5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgIEEucHVzaCh6W2ldKTtcbiAgICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcSA9IHAgPSBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBBLnB1c2goUy5zbGljZShwKSk7XG4gICAgICByZXR1cm4gQTtcbiAgICB9XG4gIF07XG59KTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBtYWNyb3Rhc2sgPSByZXF1aXJlKCcuL190YXNrJykuc2V0O1xudmFyIE9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIFByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2Vzcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZiAoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpIHBhcmVudC5leGl0KCk7XG4gICAgd2hpbGUgKGhlYWQpIHtcbiAgICAgIGZuID0gaGVhZC5mbjtcbiAgICAgIGhlYWQgPSBoZWFkLm5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBmbigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaGVhZCkgbm90aWZ5KCk7XG4gICAgICAgIGVsc2UgbGFzdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9IGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LmVudGVyKCk7XG4gIH07XG5cbiAgLy8gTm9kZS5qc1xuICBpZiAoaXNOb2RlKSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gICAgfTtcbiAgLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyLCBleGNlcHQgaU9TIFNhZmFyaSAtIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMzlcbiAgfSBlbHNlIGlmIChPYnNlcnZlciAmJiAhKGdsb2JhbC5uYXZpZ2F0b3IgJiYgZ2xvYmFsLm5hdmlnYXRvci5zdGFuZGFsb25lKSkge1xuICAgIHZhciB0b2dnbGUgPSB0cnVlO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBPYnNlcnZlcihmbHVzaCkub2JzZXJ2ZShub2RlLCB7IGNoYXJhY3RlckRhdGE6IHRydWUgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTtcbiAgICB9O1xuICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZVxuICB9IGVsc2UgaWYgKFByb21pc2UgJiYgUHJvbWlzZS5yZXNvbHZlKSB7XG4gICAgLy8gUHJvbWlzZS5yZXNvbHZlIHdpdGhvdXQgYW4gYXJndW1lbnQgdGhyb3dzIGFuIGVycm9yIGluIExHIFdlYk9TIDJcbiAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7XG4gICAgfTtcbiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjpcbiAgLy8gLSBzZXRJbW1lZGlhdGVcbiAgLy8gLSBNZXNzYWdlQ2hhbm5lbFxuICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHN0cmFuZ2UgSUUgKyB3ZWJwYWNrIGRldiBzZXJ2ZXIgYnVnIC0gdXNlIC5jYWxsKGdsb2JhbClcbiAgICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGZuKSB7XG4gICAgdmFyIHRhc2sgPSB7IGZuOiBmbiwgbmV4dDogdW5kZWZpbmVkIH07XG4gICAgaWYgKGxhc3QpIGxhc3QubmV4dCA9IHRhc2s7XG4gICAgaWYgKCFoZWFkKSB7XG4gICAgICBoZWFkID0gdGFzaztcbiAgICAgIG5vdGlmeSgpO1xuICAgIH0gbGFzdCA9IHRhc2s7XG4gIH07XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiB7IGU6IGZhbHNlLCB2OiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7IGU6IHRydWUsIHY6IGUgfTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE1BUCA9ICdNYXAnO1xuXG4vLyAyMy4xIE1hcCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShNQVAsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gc3Ryb25nLmdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSk7XG4gICAgcmV0dXJuIGVudHJ5ICYmIGVudHJ5LnY7XG4gIH0sXG4gIC8vIDIzLjEuMy45IE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZywgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTRVQgPSAnU2V0JztcblxuLy8gMjMuMiBTZXQgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4yLjMuMSBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBTRVQpLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgZWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJyk7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgTkFUSVZFX1dFQUtfTUFQID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIElTX0lFMTEgPSAhZ2xvYmFsLkFjdGl2ZVhPYmplY3QgJiYgJ0FjdGl2ZVhPYmplY3QnIGluIGdsb2JhbDtcbnZhciBXRUFLX01BUCA9ICdXZWFrTWFwJztcbnZhciBnZXRXZWFrID0gbWV0YS5nZXRXZWFrO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IHdlYWsudWZzdG9yZTtcbnZhciBJbnRlcm5hbE1hcDtcblxudmFyIHdyYXBwZXIgPSBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrTWFwKCkge1xuICAgIHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICB9O1xufTtcblxudmFyIG1ldGhvZHMgPSB7XG4gIC8vIDIzLjMuMy4zIFdlYWtNYXAucHJvdG90eXBlLmdldChrZXkpXG4gIGdldDogZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgIGlmIChpc09iamVjdChrZXkpKSB7XG4gICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCkpLmdldChrZXkpO1xuICAgICAgcmV0dXJuIGRhdGEgPyBkYXRhW3RoaXMuX2ldIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgfSxcbiAgLy8gMjMuMy4zLjUgV2Vha01hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gd2Vhay5kZWYodmFsaWRhdGUodGhpcywgV0VBS19NQVApLCBrZXksIHZhbHVlKTtcbiAgfVxufTtcblxuLy8gMjMuMyBXZWFrTWFwIE9iamVjdHNcbnZhciAkV2Vha01hcCA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfTUFQLCB3cmFwcGVyLCBtZXRob2RzLCB3ZWFrLCB0cnVlLCB0cnVlKTtcblxuLy8gSUUxMSBXZWFrTWFwIGZyb3plbiBrZXlzIGZpeFxuaWYgKE5BVElWRV9XRUFLX01BUCAmJiBJU19JRTExKSB7XG4gIEludGVybmFsTWFwID0gd2Vhay5nZXRDb25zdHJ1Y3Rvcih3cmFwcGVyLCBXRUFLX01BUCk7XG4gIGFzc2lnbihJbnRlcm5hbE1hcC5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICBtZXRhLk5FRUQgPSB0cnVlO1xuICBlYWNoKFsnZGVsZXRlJywgJ2hhcycsICdnZXQnLCAnc2V0J10sIGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgcHJvdG8gPSAkV2Vha01hcC5wcm90b3R5cGU7XG4gICAgdmFyIG1ldGhvZCA9IHByb3RvW2tleV07XG4gICAgcmVkZWZpbmUocHJvdG8sIGtleSwgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIC8vIHN0b3JlIGZyb3plbiBvYmplY3RzIG9uIGludGVybmFsIHdlYWttYXAgc2hpbVxuICAgICAgaWYgKGlzT2JqZWN0KGEpICYmICFpc0V4dGVuc2libGUoYSkpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9mKSB0aGlzLl9mID0gbmV3IEludGVybmFsTWFwKCk7XG4gICAgICAgIHZhciByZXN1bHQgPSB0aGlzLl9mW2tleV0oYSwgYik7XG4gICAgICAgIHJldHVybiBrZXkgPT0gJ3NldCcgPyB0aGlzIDogcmVzdWx0O1xuICAgICAgLy8gc3RvcmUgYWxsIHRoZSByZXN0IG9uIG5hdGl2ZSB3ZWFrbWFwXG4gICAgICB9IHJldHVybiBtZXRob2QuY2FsbCh0aGlzLCBhLCBiKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFdFQUtfU0VUID0gJ1dlYWtTZXQnO1xuXG4vLyAyMy40IFdlYWtTZXQgT2JqZWN0c1xucmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuNC4zLjEgV2Vha1NldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX1NFVCksIHZhbHVlLCB0cnVlKTtcbiAgfVxufSwgd2VhaywgZmFsc2UsIHRydWUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgQXJyYXlCdWZmZXIgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5BcnJheUJ1ZmZlcjtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgJEFycmF5QnVmZmVyID0gYnVmZmVyLkFycmF5QnVmZmVyO1xudmFyICREYXRhVmlldyA9IGJ1ZmZlci5EYXRhVmlldztcbnZhciAkaXNWaWV3ID0gJHR5cGVkLkFCViAmJiBBcnJheUJ1ZmZlci5pc1ZpZXc7XG52YXIgJHNsaWNlID0gJEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbnZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQXJyYXlCdWZmZXIgIT09ICRBcnJheUJ1ZmZlciksIHsgQXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlciB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhJHR5cGVkLkNPTlNUUiwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuMy4xIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpXG4gIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KGl0KSB7XG4gICAgcmV0dXJuICRpc1ZpZXcgJiYgJGlzVmlldyhpdCkgfHwgaXNPYmplY3QoaXQpICYmIFZJRVcgaW4gaXQ7XG4gIH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuVSArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIW5ldyAkQXJyYXlCdWZmZXIoMikuc2xpY2UoMSwgdW5kZWZpbmVkKS5ieXRlTGVuZ3RoO1xufSksIEFSUkFZX0JVRkZFUiwge1xuICAvLyAyNC4xLjQuMyBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2Uoc3RhcnQsIGVuZClcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpIHJldHVybiAkc2xpY2UuY2FsbChhbk9iamVjdCh0aGlzKSwgc3RhcnQpOyAvLyBGRiBmaXhcbiAgICB2YXIgbGVuID0gYW5PYmplY3QodGhpcykuYnl0ZUxlbmd0aDtcbiAgICB2YXIgZmlyc3QgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJEFycmF5QnVmZmVyKSkodG9MZW5ndGgoZmluIC0gZmlyc3QpKTtcbiAgICB2YXIgdmlld1MgPSBuZXcgJERhdGFWaWV3KHRoaXMpO1xuICAgIHZhciB2aWV3VCA9IG5ldyAkRGF0YVZpZXcocmVzdWx0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHdoaWxlIChmaXJzdCA8IGZpbikge1xuICAgICAgdmlld1Quc2V0VWludDgoaW5kZXgrKywgdmlld1MuZ2V0VWludDgoZmlyc3QrKykpO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoQVJSQVlfQlVGRkVSKTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL190eXBlZCcpLkFCViwge1xuICBEYXRhVmlldzogcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJykuRGF0YVZpZXdcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gVWludDhBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OENsYW1wZWRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSwgdHJ1ZSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDY0JywgOCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCIvLyAyNi4xLjEgUmVmbGVjdC5hcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgckFwcGx5ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmFwcGx5O1xudmFyIGZBcHBseSA9IEZ1bmN0aW9uLmFwcGx5O1xuLy8gTVMgRWRnZSBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgckFwcGx5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGFwcGx5OiBmdW5jdGlvbiBhcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdCkge1xuICAgIHZhciBUID0gYUZ1bmN0aW9uKHRhcmdldCk7XG4gICAgdmFyIEwgPSBhbk9iamVjdChhcmd1bWVudHNMaXN0KTtcbiAgICByZXR1cm4gckFwcGx5ID8gckFwcGx5KFQsIHRoaXNBcmd1bWVudCwgTCkgOiBmQXBwbHkuY2FsbChULCB0aGlzQXJndW1lbnQsIEwpO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMiBSZWZsZWN0LmNvbnN0cnVjdCh0YXJnZXQsIGFyZ3VtZW50c0xpc3QgWywgbmV3VGFyZ2V0XSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL19iaW5kJyk7XG52YXIgckNvbnN0cnVjdCA9IChyZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0IHx8IHt9KS5jb25zdHJ1Y3Q7XG5cbi8vIE1TIEVkZ2Ugc3VwcG9ydHMgb25seSAyIGFyZ3VtZW50cyBhbmQgYXJndW1lbnRzTGlzdCBhcmd1bWVudCBpcyBvcHRpb25hbFxuLy8gRkYgTmlnaHRseSBzZXRzIHRoaXJkIGFyZ3VtZW50IGFzIGBuZXcudGFyZ2V0YCwgYnV0IGRvZXMgbm90IGNyZWF0ZSBgdGhpc2AgZnJvbSBpdFxudmFyIE5FV19UQVJHRVRfQlVHID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKHJDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCBbXSwgRikgaW5zdGFuY2VvZiBGKTtcbn0pO1xudmFyIEFSR1NfQlVHID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgckNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0pO1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE5FV19UQVJHRVRfQlVHIHx8IEFSR1NfQlVHKSwgJ1JlZmxlY3QnLCB7XG4gIGNvbnN0cnVjdDogZnVuY3Rpb24gY29uc3RydWN0KFRhcmdldCwgYXJncyAvKiAsIG5ld1RhcmdldCAqLykge1xuICAgIGFGdW5jdGlvbihUYXJnZXQpO1xuICAgIGFuT2JqZWN0KGFyZ3MpO1xuICAgIHZhciBuZXdUYXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IFRhcmdldCA6IGFGdW5jdGlvbihhcmd1bWVudHNbMl0pO1xuICAgIGlmIChBUkdTX0JVRyAmJiAhTkVXX1RBUkdFVF9CVUcpIHJldHVybiByQ29uc3RydWN0KFRhcmdldCwgYXJncywgbmV3VGFyZ2V0KTtcbiAgICBpZiAoVGFyZ2V0ID09IG5ld1RhcmdldCkge1xuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBvcHRpbWl6YXRpb24gZm9yIDAtNCBhcmd1bWVudHNcbiAgICAgIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IFRhcmdldCgpO1xuICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0pO1xuICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICBjYXNlIDM6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICBjYXNlIDQ6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgfVxuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBsb3Qgb2YgYXJndW1lbnRzIGNhc2VcbiAgICAgIHZhciAkYXJncyA9IFtudWxsXTtcbiAgICAgICRhcmdzLnB1c2guYXBwbHkoJGFyZ3MsIGFyZ3MpO1xuICAgICAgcmV0dXJuIG5ldyAoYmluZC5hcHBseShUYXJnZXQsICRhcmdzKSkoKTtcbiAgICB9XG4gICAgLy8gd2l0aCBhbHRlcmVkIG5ld1RhcmdldCwgbm90IHN1cHBvcnQgYnVpbHQtaW4gY29uc3RydWN0b3JzXG4gICAgdmFyIHByb3RvID0gbmV3VGFyZ2V0LnByb3RvdHlwZTtcbiAgICB2YXIgaW5zdGFuY2UgPSBjcmVhdGUoaXNPYmplY3QocHJvdG8pID8gcHJvdG8gOiBPYmplY3QucHJvdG90eXBlKTtcbiAgICB2YXIgcmVzdWx0ID0gRnVuY3Rpb24uYXBwbHkuY2FsbChUYXJnZXQsIGluc3RhbmNlLCBhcmdzKTtcbiAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0KSA/IHJlc3VsdCA6IGluc3RhbmNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMyBSZWZsZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpXG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xuXG4vLyBNUyBFZGdlIGhhcyBicm9rZW4gUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSAtIHRocm93aW5nIGluc3RlYWQgb2YgcmV0dXJuaW5nIGZhbHNlXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShkUC5mKHt9LCAxLCB7IHZhbHVlOiAxIH0pLCAxLCB7IHZhbHVlOiAyIH0pO1xufSksICdSZWZsZWN0Jywge1xuICBkZWZpbmVQcm9wZXJ0eTogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcykge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgcHJvcGVydHlLZXkgPSB0b1ByaW1pdGl2ZShwcm9wZXJ0eUtleSwgdHJ1ZSk7XG4gICAgYW5PYmplY3QoYXR0cmlidXRlcyk7XG4gICAgdHJ5IHtcbiAgICAgIGRQLmYodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcyk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuNCBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXkpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBkZWxldGVQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHZhciBkZXNjID0gZ09QRChhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gICAgcmV0dXJuIGRlc2MgJiYgIWRlc2MuY29uZmlndXJhYmxlID8gZmFsc2UgOiBkZWxldGUgdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNi4xLjUgUmVmbGVjdC5lbnVtZXJhdGUodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIEVudW1lcmF0ZSA9IGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gYW5PYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB2YXIga2V5cyA9IHRoaXMuX2sgPSBbXTsgICAgICAvLyBrZXlzXG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIGl0ZXJhdGVkKSBrZXlzLnB1c2goa2V5KTtcbn07XG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKEVudW1lcmF0ZSwgJ09iamVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSB0aGlzO1xuICB2YXIga2V5cyA9IHRoYXQuX2s7XG4gIHZhciBrZXk7XG4gIGRvIHtcbiAgICBpZiAodGhhdC5faSA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9IHdoaWxlICghKChrZXkgPSBrZXlzW3RoYXQuX2krK10pIGluIHRoYXQuX3QpKTtcbiAgcmV0dXJuIHsgdmFsdWU6IGtleSwgZG9uZTogZmFsc2UgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGVudW1lcmF0ZTogZnVuY3Rpb24gZW51bWVyYXRlKHRhcmdldCkge1xuICAgIHJldHVybiBuZXcgRW51bWVyYXRlKHRhcmdldCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuNyBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICByZXR1cm4gZ09QRC5mKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjggUmVmbGVjdC5nZXRQcm90b3R5cGVPZih0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdldFByb3RvID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKHRhcmdldCkge1xuICAgIHJldHVybiBnZXRQcm90byhhbk9iamVjdCh0YXJnZXQpKTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjkgUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaGFzOiBmdW5jdGlvbiBoYXModGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHJldHVybiBwcm9wZXJ0eUtleSBpbiB0YXJnZXQ7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMCBSZWZsZWN0LmlzRXh0ZW5zaWJsZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaXNFeHRlbnNpYmxlOiBmdW5jdGlvbiBpc0V4dGVuc2libGUodGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICByZXR1cm4gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUodGFyZ2V0KSA6IHRydWU7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMSBSZWZsZWN0Lm93bktleXModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBvd25LZXlzOiByZXF1aXJlKCcuL19vd24ta2V5cycpIH0pO1xuIiwiLy8gMjYuMS4xMiBSZWZsZWN0LnByZXZlbnRFeHRlbnNpb25zKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkcHJldmVudEV4dGVuc2lvbnMgPSBPYmplY3QucHJldmVudEV4dGVuc2lvbnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgcHJldmVudEV4dGVuc2lvbnM6IGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCkge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgdHJ5IHtcbiAgICAgIGlmICgkcHJldmVudEV4dGVuc2lvbnMpICRwcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwiLy8gMjYuMS4xNCBSZWZsZWN0LnNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNldFByb3RvID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJyk7XG5cbmlmIChzZXRQcm90bykgJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBzZXRQcm90b3R5cGVPZjogZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90bykge1xuICAgIHNldFByb3RvLmNoZWNrKHRhcmdldCwgcHJvdG8pO1xuICAgIHRyeSB7XG4gICAgICBzZXRQcm90by5zZXQodGFyZ2V0LCBwcm90byk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5BcnJheS5pbmNsdWRlcztcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L0FycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoZWwgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2luY2x1ZGVzJyk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5hcnJheS5mbGF0LW1hcCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZmxhdE1hcDtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtZmxhdE1hcC8jc2VjLUFycmF5LnByb3RvdHlwZS5mbGF0TWFwXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGZsYXR0ZW5JbnRvQXJyYXkgPSByZXF1aXJlKCcuL19mbGF0dGVuLWludG8tYXJyYXknKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFycmF5U3BlY2llc0NyZWF0ZSA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7XG4gIGZsYXRNYXA6IGZ1bmN0aW9uIGZsYXRNYXAoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBzb3VyY2VMZW4sIEE7XG4gICAgYUZ1bmN0aW9uKGNhbGxiYWNrZm4pO1xuICAgIHNvdXJjZUxlbiA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICBBID0gYXJyYXlTcGVjaWVzQ3JlYXRlKE8sIDApO1xuICAgIGZsYXR0ZW5JbnRvQXJyYXkoQSwgTywgTywgc291cmNlTGVuLCAwLCAxLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICAgIHJldHVybiBBO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2ZsYXRNYXAnKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtZmxhdE1hcC8jc2VjLUZsYXR0ZW5JbnRvQXJyYXlcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgSVNfQ09OQ0FUX1NQUkVBREFCTEUgPSByZXF1aXJlKCcuL193a3MnKSgnaXNDb25jYXRTcHJlYWRhYmxlJyk7XG5cbmZ1bmN0aW9uIGZsYXR0ZW5JbnRvQXJyYXkodGFyZ2V0LCBvcmlnaW5hbCwgc291cmNlLCBzb3VyY2VMZW4sIHN0YXJ0LCBkZXB0aCwgbWFwcGVyLCB0aGlzQXJnKSB7XG4gIHZhciB0YXJnZXRJbmRleCA9IHN0YXJ0O1xuICB2YXIgc291cmNlSW5kZXggPSAwO1xuICB2YXIgbWFwRm4gPSBtYXBwZXIgPyBjdHgobWFwcGVyLCB0aGlzQXJnLCAzKSA6IGZhbHNlO1xuICB2YXIgZWxlbWVudCwgc3ByZWFkYWJsZTtcblxuICB3aGlsZSAoc291cmNlSW5kZXggPCBzb3VyY2VMZW4pIHtcbiAgICBpZiAoc291cmNlSW5kZXggaW4gc291cmNlKSB7XG4gICAgICBlbGVtZW50ID0gbWFwRm4gPyBtYXBGbihzb3VyY2Vbc291cmNlSW5kZXhdLCBzb3VyY2VJbmRleCwgb3JpZ2luYWwpIDogc291cmNlW3NvdXJjZUluZGV4XTtcblxuICAgICAgc3ByZWFkYWJsZSA9IGZhbHNlO1xuICAgICAgaWYgKGlzT2JqZWN0KGVsZW1lbnQpKSB7XG4gICAgICAgIHNwcmVhZGFibGUgPSBlbGVtZW50W0lTX0NPTkNBVF9TUFJFQURBQkxFXTtcbiAgICAgICAgc3ByZWFkYWJsZSA9IHNwcmVhZGFibGUgIT09IHVuZGVmaW5lZCA/ICEhc3ByZWFkYWJsZSA6IGlzQXJyYXkoZWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzcHJlYWRhYmxlICYmIGRlcHRoID4gMCkge1xuICAgICAgICB0YXJnZXRJbmRleCA9IGZsYXR0ZW5JbnRvQXJyYXkodGFyZ2V0LCBvcmlnaW5hbCwgZWxlbWVudCwgdG9MZW5ndGgoZWxlbWVudC5sZW5ndGgpLCB0YXJnZXRJbmRleCwgZGVwdGggLSAxKSAtIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodGFyZ2V0SW5kZXggPj0gMHgxZmZmZmZmZmZmZmZmZikgdGhyb3cgVHlwZUVycm9yKCk7XG4gICAgICAgIHRhcmdldFt0YXJnZXRJbmRleF0gPSBlbGVtZW50O1xuICAgICAgfVxuXG4gICAgICB0YXJnZXRJbmRleCsrO1xuICAgIH1cbiAgICBzb3VyY2VJbmRleCsrO1xuICB9XG4gIHJldHVybiB0YXJnZXRJbmRleDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmbGF0dGVuSW50b0FycmF5O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZFN0YXJ0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhZCA9IHJlcXVpcmUoJy4vX3N0cmluZy1wYWQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8yODBcbnZhciBXRUJLSVRfQlVHID0gL1ZlcnNpb25cXC8xMFxcLlxcZCsoXFwuXFxkKyk/KCBNb2JpbGVcXC9cXHcrKT8gU2FmYXJpXFwvLy50ZXN0KHVzZXJBZ2VudCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogV0VCS0lUX0JVRywgJ1N0cmluZycsIHtcbiAgcGFkU3RhcnQ6IGZ1bmN0aW9uIHBhZFN0YXJ0KG1heExlbmd0aCAvKiAsIGZpbGxTdHJpbmcgPSAnICcgKi8pIHtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxufSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZEVuZDtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYWQgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMjgwXG52YXIgV0VCS0lUX0JVRyA9IC9WZXJzaW9uXFwvMTBcXC5cXGQrKFxcLlxcZCspPyggTW9iaWxlXFwvXFx3Kyk/IFNhZmFyaVxcLy8udGVzdCh1c2VyQWdlbnQpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIFdFQktJVF9CVUcsICdTdHJpbmcnLCB7XG4gIHBhZEVuZDogZnVuY3Rpb24gcGFkRW5kKG1heExlbmd0aCAvKiAsIGZpbGxTdHJpbmcgPSAnICcgKi8pIHtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnRyaW1MZWZ0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbUxlZnQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1MZWZ0KCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAxKTtcbiAgfTtcbn0sICd0cmltU3RhcnQnKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TdHJpbmcudHJpbVJpZ2h0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbVJpZ2h0JywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltUmlnaHQoKSB7XG4gICAgcmV0dXJuICR0cmltKHRoaXMsIDIpO1xuICB9O1xufSwgJ3RyaW1FbmQnKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvcicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL193a3MtZXh0JykuZignYXN5bmNJdGVyYXRvcicpO1xuIiwicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0RGVzYyA9IGdPUEQuZjtcbiAgICB2YXIga2V5cyA9IG93bktleXMoTyk7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5LCBkZXNjO1xuICAgIHdoaWxlIChrZXlzLmxlbmd0aCA+IGkpIHtcbiAgICAgIGRlc2MgPSBnZXREZXNjKE8sIGtleSA9IGtleXNbaSsrXSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzYyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LnZhbHVlcztcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdmFsdWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykoZmFsc2UpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoaXQpIHtcbiAgICByZXR1cm4gJHZhbHVlcyhpdCk7XG4gIH1cbn0pO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5lbnRyaWVzO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHknKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlByb21pc2VbJ2ZpbmFsbHknXTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXByb21pc2UtZmluYWxseVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ1Byb21pc2UnLCB7ICdmaW5hbGx5JzogZnVuY3Rpb24gKG9uRmluYWxseSkge1xuICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCBjb3JlLlByb21pc2UgfHwgZ2xvYmFsLlByb21pc2UpO1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiBvbkZpbmFsbHkgPT0gJ2Z1bmN0aW9uJztcbiAgcmV0dXJuIHRoaXMudGhlbihcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKHgpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHJldHVybiB4OyB9KTtcbiAgICB9IDogb25GaW5hbGx5LFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgdGhyb3cgZTsgfSk7XG4gICAgfSA6IG9uRmluYWxseVxuICApO1xufSB9KTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLnRpbWVycycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuaW1tZWRpYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwiLy8gaWU5LSBzZXRUaW1lb3V0ICYgc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG52YXIgc2xpY2UgPSBbXS5zbGljZTtcbnZhciBNU0lFID0gL01TSUUgLlxcLi8udGVzdCh1c2VyQWdlbnQpOyAvLyA8LSBkaXJ0eSBpZTktIGNoZWNrXG52YXIgd3JhcCA9IGZ1bmN0aW9uIChzZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChmbiwgdGltZSAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgYm91bmRBcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDI7XG4gICAgdmFyIGFyZ3MgPSBib3VuZEFyZ3MgPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMikgOiBmYWxzZTtcbiAgICByZXR1cm4gc2V0KGJvdW5kQXJncyA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbikpLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH0gOiBmbiwgdGltZSk7XG4gIH07XG59O1xuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIgKyAkZXhwb3J0LkYgKiBNU0lFLCB7XG4gIHNldFRpbWVvdXQ6IHdyYXAoZ2xvYmFsLnNldFRpbWVvdXQpLFxuICBzZXRJbnRlcnZhbDogd3JhcChnbG9iYWwuc2V0SW50ZXJ2YWwpXG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHRhc2sgPSByZXF1aXJlKCcuL190YXNrJyk7XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuQiwge1xuICBzZXRJbW1lZGlhdGU6ICR0YXNrLnNldCxcbiAgY2xlYXJJbW1lZGlhdGU6ICR0YXNrLmNsZWFyXG59KTtcbiIsInZhciAkaXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gSXRlcmF0b3JzLkFycmF5O1xuXG52YXIgRE9NSXRlcmFibGVzID0ge1xuICBDU1NSdWxlTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IGZhbHNlLFxuICBDU1NWYWx1ZUxpc3Q6IGZhbHNlLFxuICBDbGllbnRSZWN0TGlzdDogZmFsc2UsXG4gIERPTVJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NU3RyaW5nTGlzdDogZmFsc2UsXG4gIERPTVRva2VuTGlzdDogdHJ1ZSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IGZhbHNlLFxuICBGaWxlTGlzdDogZmFsc2UsXG4gIEhUTUxBbGxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MRm9ybUVsZW1lbnQ6IGZhbHNlLFxuICBIVE1MU2VsZWN0RWxlbWVudDogZmFsc2UsXG4gIE1lZGlhTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIE1pbWVUeXBlQXJyYXk6IGZhbHNlLFxuICBOYW1lZE5vZGVNYXA6IGZhbHNlLFxuICBOb2RlTGlzdDogdHJ1ZSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogZmFsc2UsXG4gIFBsdWdpbjogZmFsc2UsXG4gIFBsdWdpbkFycmF5OiBmYWxzZSxcbiAgU1ZHTGVuZ3RoTGlzdDogZmFsc2UsXG4gIFNWR051bWJlckxpc3Q6IGZhbHNlLFxuICBTVkdQYXRoU2VnTGlzdDogZmFsc2UsXG4gIFNWR1BvaW50TGlzdDogZmFsc2UsXG4gIFNWR1N0cmluZ0xpc3Q6IGZhbHNlLFxuICBTVkdUcmFuc2Zvcm1MaXN0OiBmYWxzZSxcbiAgU291cmNlQnVmZmVyTGlzdDogZmFsc2UsXG4gIFN0eWxlU2hlZXRMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgVGV4dFRyYWNrQ3VlTGlzdDogZmFsc2UsXG4gIFRleHRUcmFja0xpc3Q6IGZhbHNlLFxuICBUb3VjaExpc3Q6IGZhbHNlXG59O1xuXG5mb3IgKHZhciBjb2xsZWN0aW9ucyA9IGdldEtleXMoRE9NSXRlcmFibGVzKSwgaSA9IDA7IGkgPCBjb2xsZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IGNvbGxlY3Rpb25zW2ldO1xuICB2YXIgZXhwbGljaXQgPSBET01JdGVyYWJsZXNbTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICB2YXIga2V5O1xuICBpZiAocHJvdG8pIHtcbiAgICBpZiAoIXByb3RvW0lURVJBVE9SXSkgaGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZiAoIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlcztcbiAgICBpZiAoZXhwbGljaXQpIGZvciAoa2V5IGluICRpdGVyYXRvcnMpIGlmICghcHJvdG9ba2V5XSkgcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgcnVudGltZSA9IChmdW5jdGlvbiAoZXhwb3J0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIGZ1bmN0aW9uIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBJZiBvdXRlckZuIHByb3ZpZGVkIGFuZCBvdXRlckZuLnByb3RvdHlwZSBpcyBhIEdlbmVyYXRvciwgdGhlbiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvci5cbiAgICB2YXIgcHJvdG9HZW5lcmF0b3IgPSBvdXRlckZuICYmIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gb3V0ZXJGbiA6IEdlbmVyYXRvcjtcbiAgICB2YXIgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZShwcm90b0dlbmVyYXRvci5wcm90b3R5cGUpO1xuICAgIHZhciBjb250ZXh0ID0gbmV3IENvbnRleHQodHJ5TG9jc0xpc3QgfHwgW10pO1xuXG4gICAgLy8gVGhlIC5faW52b2tlIG1ldGhvZCB1bmlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlIC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcy5cbiAgICBnZW5lcmF0b3IuX2ludm9rZSA9IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdG9yO1xuICB9XG4gIGV4cG9ydHMud3JhcCA9IHdyYXA7XG5cbiAgLy8gVHJ5L2NhdGNoIGhlbHBlciB0byBtaW5pbWl6ZSBkZW9wdGltaXphdGlvbnMuIFJldHVybnMgYSBjb21wbGV0aW9uXG4gIC8vIHJlY29yZCBsaWtlIGNvbnRleHQudHJ5RW50cmllc1tpXS5jb21wbGV0aW9uLiBUaGlzIGludGVyZmFjZSBjb3VsZFxuICAvLyBoYXZlIGJlZW4gKGFuZCB3YXMgcHJldmlvdXNseSkgZGVzaWduZWQgdG8gdGFrZSBhIGNsb3N1cmUgdG8gYmVcbiAgLy8gaW52b2tlZCB3aXRob3V0IGFyZ3VtZW50cywgYnV0IGluIGFsbCB0aGUgY2FzZXMgd2UgY2FyZSBhYm91dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYW4gZXhpc3RpbmcgbWV0aG9kIHdlIHdhbnQgdG8gY2FsbCwgc28gdGhlcmUncyBubyBuZWVkXG4gIC8vIHRvIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBvYmplY3QuIFdlIGNhbiBldmVuIGdldCBhd2F5IHdpdGggYXNzdW1pbmdcbiAgLy8gdGhlIG1ldGhvZCB0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCwgc2luY2UgdGhhdCBoYXBwZW5zIHRvIGJlIHRydWVcbiAgLy8gaW4gZXZlcnkgY2FzZSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB0b3VjaCB0aGUgYXJndW1lbnRzIG9iamVjdC4gVGhlXG4gIC8vIG9ubHkgYWRkaXRpb25hbCBhbGxvY2F0aW9uIHJlcXVpcmVkIGlzIHRoZSBjb21wbGV0aW9uIHJlY29yZCwgd2hpY2hcbiAgLy8gaGFzIGEgc3RhYmxlIHNoYXBlIGFuZCBzbyBob3BlZnVsbHkgc2hvdWxkIGJlIGNoZWFwIHRvIGFsbG9jYXRlLlxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJub3JtYWxcIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJ0aHJvd1wiLCBhcmc6IGVyciB9O1xuICAgIH1cbiAgfVxuXG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0ID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCA9IFwic3VzcGVuZGVkWWllbGRcIjtcbiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gXCJleGVjdXRpbmdcIjtcbiAgdmFyIEdlblN0YXRlQ29tcGxldGVkID0gXCJjb21wbGV0ZWRcIjtcblxuICAvLyBSZXR1cm5pbmcgdGhpcyBvYmplY3QgZnJvbSB0aGUgaW5uZXJGbiBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzXG4gIC8vIGJyZWFraW5nIG91dCBvZiB0aGUgZGlzcGF0Y2ggc3dpdGNoIHN0YXRlbWVudC5cbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICAvLyBEdW1teSBjb25zdHJ1Y3RvciBmdW5jdGlvbnMgdGhhdCB3ZSB1c2UgYXMgdGhlIC5jb25zdHJ1Y3RvciBhbmRcbiAgLy8gLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBwcm9wZXJ0aWVzIGZvciBmdW5jdGlvbnMgdGhhdCByZXR1cm4gR2VuZXJhdG9yXG4gIC8vIG9iamVjdHMuIEZvciBmdWxsIHNwZWMgY29tcGxpYW5jZSwgeW91IG1heSB3aXNoIHRvIGNvbmZpZ3VyZSB5b3VyXG4gIC8vIG1pbmlmaWVyIG5vdCB0byBtYW5nbGUgdGhlIG5hbWVzIG9mIHRoZXNlIHR3byBmdW5jdGlvbnMuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fVxuXG4gIC8vIFRoaXMgaXMgYSBwb2x5ZmlsbCBmb3IgJUl0ZXJhdG9yUHJvdG90eXBlJSBmb3IgZW52aXJvbm1lbnRzIHRoYXRcbiAgLy8gZG9uJ3QgbmF0aXZlbHkgc3VwcG9ydCBpdC5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIEl0ZXJhdG9yUHJvdG90eXBlW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG4gIHZhciBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvICYmIGdldFByb3RvKGdldFByb3RvKHZhbHVlcyhbXSkpKTtcbiAgaWYgKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmXG4gICAgICBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAhPT0gT3AgJiZcbiAgICAgIGhhc093bi5jYWxsKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlLCBpdGVyYXRvclN5bWJvbCkpIHtcbiAgICAvLyBUaGlzIGVudmlyb25tZW50IGhhcyBhIG5hdGl2ZSAlSXRlcmF0b3JQcm90b3R5cGUlOyB1c2UgaXQgaW5zdGVhZFxuICAgIC8vIG9mIHRoZSBwb2x5ZmlsbC5cbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlO1xuICB9XG5cbiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID1cbiAgICBHZW5lcmF0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSk7XG4gIEdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA9IEdwLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb247XG4gIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlW3RvU3RyaW5nVGFnU3ltYm9sXSA9XG4gICAgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBcIkdlbmVyYXRvckZ1bmN0aW9uXCI7XG5cbiAgLy8gSGVscGVyIGZvciBkZWZpbmluZyB0aGUgLm5leHQsIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcyBvZiB0aGVcbiAgLy8gSXRlcmF0b3IgaW50ZXJmYWNlIGluIHRlcm1zIG9mIGEgc2luZ2xlIC5faW52b2tlIG1ldGhvZC5cbiAgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHByb3RvdHlwZSkge1xuICAgIFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgcHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbihhcmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludm9rZShtZXRob2QsIGFyZyk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG5cbiAgZXhwb3J0cy5pc0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgdmFyIGN0b3IgPSB0eXBlb2YgZ2VuRnVuID09PSBcImZ1bmN0aW9uXCIgJiYgZ2VuRnVuLmNvbnN0cnVjdG9yO1xuICAgIHJldHVybiBjdG9yXG4gICAgICA/IGN0b3IgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8XG4gICAgICAgIC8vIEZvciB0aGUgbmF0aXZlIEdlbmVyYXRvckZ1bmN0aW9uIGNvbnN0cnVjdG9yLCB0aGUgYmVzdCB3ZSBjYW5cbiAgICAgICAgLy8gZG8gaXMgdG8gY2hlY2sgaXRzIC5uYW1lIHByb3BlcnR5LlxuICAgICAgICAoY3Rvci5kaXNwbGF5TmFtZSB8fCBjdG9yLm5hbWUpID09PSBcIkdlbmVyYXRvckZ1bmN0aW9uXCJcbiAgICAgIDogZmFsc2U7XG4gIH07XG5cbiAgZXhwb3J0cy5tYXJrID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgaWYgKE9iamVjdC5zZXRQcm90b3R5cGVPZikge1xuICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGdlbkZ1biwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gICAgICBpZiAoISh0b1N0cmluZ1RhZ1N5bWJvbCBpbiBnZW5GdW4pKSB7XG4gICAgICAgIGdlbkZ1blt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvckZ1bmN0aW9uXCI7XG4gICAgICB9XG4gICAgfVxuICAgIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKTtcbiAgICByZXR1cm4gZ2VuRnVuO1xuICB9O1xuXG4gIC8vIFdpdGhpbiB0aGUgYm9keSBvZiBhbnkgYXN5bmMgZnVuY3Rpb24sIGBhd2FpdCB4YCBpcyB0cmFuc2Zvcm1lZCB0b1xuICAvLyBgeWllbGQgcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHgpYCwgc28gdGhhdCB0aGUgcnVudGltZSBjYW4gdGVzdFxuICAvLyBgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKWAgdG8gZGV0ZXJtaW5lIGlmIHRoZSB5aWVsZGVkIHZhbHVlIGlzXG4gIC8vIG1lYW50IHRvIGJlIGF3YWl0ZWQuXG4gIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4geyBfX2F3YWl0OiBhcmcgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goZ2VuZXJhdG9yW21ldGhvZF0sIGdlbmVyYXRvciwgYXJnKTtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHJlamVjdChyZWNvcmQuYXJnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnO1xuICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2YWx1ZS5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJuZXh0XCIsIHZhbHVlLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgaW52b2tlKFwidGhyb3dcIiwgZXJyLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihmdW5jdGlvbih1bndyYXBwZWQpIHtcbiAgICAgICAgICAvLyBXaGVuIGEgeWllbGRlZCBQcm9taXNlIGlzIHJlc29sdmVkLCBpdHMgZmluYWwgdmFsdWUgYmVjb21lc1xuICAgICAgICAgIC8vIHRoZSAudmFsdWUgb2YgdGhlIFByb21pc2U8e3ZhbHVlLGRvbmV9PiByZXN1bHQgZm9yIHRoZVxuICAgICAgICAgIC8vIGN1cnJlbnQgaXRlcmF0aW9uLlxuICAgICAgICAgIHJlc3VsdC52YWx1ZSA9IHVud3JhcHBlZDtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgLy8gSWYgYSByZWplY3RlZCBQcm9taXNlIHdhcyB5aWVsZGVkLCB0aHJvdyB0aGUgcmVqZWN0aW9uIGJhY2tcbiAgICAgICAgICAvLyBpbnRvIHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gc28gaXQgY2FuIGJlIGhhbmRsZWQgdGhlcmUuXG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBleHBvcnRzLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBleHBvcnRzLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdClcbiAgICApO1xuXG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIC8vIE5vdGU6IFtcInJldHVyblwiXSBtdXN0IGJlIHVzZWQgZm9yIEVTMyBwYXJzaW5nIGNvbXBhdGliaWxpdHkuXG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvcltcInJldHVyblwiXSkge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIEdwW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yXCI7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBHcFtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBHcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTtcblxuICAgIGlmICgxIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTtcbiAgICB9XG5cbiAgICBpZiAoMiBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTtcbiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTtcbiAgICB9XG5cbiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7XG4gICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307XG4gICAgcmVjb3JkLnR5cGUgPSBcIm5vcm1hbFwiO1xuICAgIGRlbGV0ZSByZWNvcmQuYXJnO1xuICAgIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gVGhlIHJvb3QgZW50cnkgb2JqZWN0IChlZmZlY3RpdmVseSBhIHRyeSBzdGF0ZW1lbnQgd2l0aG91dCBhIGNhdGNoXG4gICAgLy8gb3IgYSBmaW5hbGx5IGJsb2NrKSBnaXZlcyB1cyBhIHBsYWNlIHRvIHN0b3JlIHZhbHVlcyB0aHJvd24gZnJvbVxuICAgIC8vIGxvY2F0aW9ucyB3aGVyZSB0aGVyZSBpcyBubyBlbmNsb3NpbmcgdHJ5IHN0YXRlbWVudC5cbiAgICB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6IFwicm9vdFwiIH1dO1xuICAgIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKTtcbiAgICB0aGlzLnJlc2V0KHRydWUpO1xuICB9XG5cbiAgZXhwb3J0cy5rZXlzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAga2V5cy5yZXZlcnNlKCk7XG5cbiAgICAvLyBSYXRoZXIgdGhhbiByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggYSBuZXh0IG1ldGhvZCwgd2Uga2VlcFxuICAgIC8vIHRoaW5ncyBzaW1wbGUgYW5kIHJldHVybiB0aGUgbmV4dCBmdW5jdGlvbiBpdHNlbGYuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB3aGlsZSAoa2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXMucG9wKCk7XG4gICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgbmV4dC52YWx1ZSA9IGtleTtcbiAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUbyBhdm9pZCBjcmVhdGluZyBhbiBhZGRpdGlvbmFsIG9iamVjdCwgd2UganVzdCBoYW5nIHRoZSAudmFsdWVcbiAgICAgIC8vIGFuZCAuZG9uZSBwcm9wZXJ0aWVzIG9mZiB0aGUgbmV4dCBmdW5jdGlvbiBvYmplY3QgaXRzZWxmLiBUaGlzXG4gICAgICAvLyBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgbWluaWZpZXIgd2lsbCBub3QgYW5vbnltaXplIHRoZSBmdW5jdGlvbi5cbiAgICAgIG5leHQuZG9uZSA9IHRydWU7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYWJsZS5uZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkge1xuICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07XG4gICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuXG4gICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9O1xuICB9XG4gIGV4cG9ydHMudmFsdWVzID0gdmFsdWVzO1xuXG4gIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9XG5cbiAgQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3I6IENvbnRleHQsXG5cbiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkge1xuICAgICAgdGhpcy5wcmV2ID0gMDtcbiAgICAgIHRoaXMubmV4dCA9IDA7XG4gICAgICAvLyBSZXNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpO1xuXG4gICAgICBpZiAoIXNraXBUZW1wUmVzZXQpIHtcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgICAgLy8gTm90IHN1cmUgYWJvdXQgdGhlIG9wdGltYWwgb3JkZXIgb2YgdGhlc2UgY29uZGl0aW9uczpcbiAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwidFwiICYmXG4gICAgICAgICAgICAgIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmXG4gICAgICAgICAgICAgICFpc05hTigrbmFtZS5zbGljZSgxKSkpIHtcbiAgICAgICAgICAgIHRoaXNbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgdmFyIHJvb3RFbnRyeSA9IHRoaXMudHJ5RW50cmllc1swXTtcbiAgICAgIHZhciByb290UmVjb3JkID0gcm9vdEVudHJ5LmNvbXBsZXRpb247XG4gICAgICBpZiAocm9vdFJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmVjb3JkLnR5cGUgPSBcInRocm93XCI7XG4gICAgICAgIHJlY29yZC5hcmcgPSBleGNlcHRpb247XG4gICAgICAgIGNvbnRleHQubmV4dCA9IGxvYztcblxuICAgICAgICBpZiAoY2F1Z2h0KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jayxcbiAgICAgICAgICAvLyB0aGVuIGxldCB0aGF0IGNhdGNoIGJsb2NrIGhhbmRsZSB0aGUgZXhjZXB0aW9uIG5vcm1hbGx5LlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gISEgY2F1Z2h0O1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gXCJyb290XCIpIHtcbiAgICAgICAgICAvLyBFeGNlcHRpb24gdGhyb3duIG91dHNpZGUgb2YgYW55IHRyeSBibG9jayB0aGF0IGNvdWxkIGhhbmRsZVxuICAgICAgICAgIC8vIGl0LCBzbyBzZXQgdGhlIGNvbXBsZXRpb24gdmFsdWUgb2YgdGhlIGVudGlyZSBmdW5jdGlvbiB0b1xuICAgICAgICAgIC8vIHRocm93IHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7XG4gICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIik7XG4gICAgICAgICAgdmFyIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpO1xuXG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmXG4gICAgICAgICAgICB0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgdmFyIGZpbmFsbHlFbnRyeSA9IGVudHJ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkgJiZcbiAgICAgICAgICAodHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgIHR5cGUgPT09IFwiY29udGludWVcIikgJiZcbiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJlxuICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhXG4gICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay5cbiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZWNvcmQudHlwZSA9IHR5cGU7XG4gICAgICByZWNvcmQuYXJnID0gYXJnO1xuXG4gICAgICBpZiAoZmluYWxseUVudHJ5KSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jO1xuICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGUocmVjb3JkKTtcbiAgICB9LFxuXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgcmVjb3JkLnR5cGUgPT09IFwiY29udGludWVcIikge1xuICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICB0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gXCJlbmRcIjtcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIgJiYgYWZ0ZXJMb2MpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gYWZ0ZXJMb2M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG5cbiAgICBmaW5pc2g6IGZ1bmN0aW9uKGZpbmFsbHlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkuZmluYWxseUxvYyA9PT0gZmluYWxseUxvYykge1xuICAgICAgICAgIHRoaXMuY29tcGxldGUoZW50cnkuY29tcGxldGlvbiwgZW50cnkuYWZ0ZXJMb2MpO1xuICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiY2F0Y2hcIjogZnVuY3Rpb24odHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uXG4gICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcblxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndFxuICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuXG4gICAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH07XG5cbiAgLy8gUmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoaXMgc2NyaXB0IGlzIGV4ZWN1dGluZyBhcyBhIENvbW1vbkpTIG1vZHVsZVxuICAvLyBvciBub3QsIHJldHVybiB0aGUgcnVudGltZSBvYmplY3Qgc28gdGhhdCB3ZSBjYW4gZGVjbGFyZSB0aGUgdmFyaWFibGVcbiAgLy8gcmVnZW5lcmF0b3JSdW50aW1lIGluIHRoZSBvdXRlciBzY29wZSwgd2hpY2ggYWxsb3dzIHRoaXMgbW9kdWxlIHRvIGJlXG4gIC8vIGluamVjdGVkIGVhc2lseSBieSBgYmluL3JlZ2VuZXJhdG9yIC0taW5jbHVkZS1ydW50aW1lIHNjcmlwdC5qc2AuXG4gIHJldHVybiBleHBvcnRzO1xuXG59KFxuICAvLyBJZiB0aGlzIHNjcmlwdCBpcyBleGVjdXRpbmcgYXMgYSBDb21tb25KUyBtb2R1bGUsIHVzZSBtb2R1bGUuZXhwb3J0c1xuICAvLyBhcyB0aGUgcmVnZW5lcmF0b3JSdW50aW1lIG5hbWVzcGFjZS4gT3RoZXJ3aXNlIGNyZWF0ZSBhIG5ldyBlbXB0eVxuICAvLyBvYmplY3QuIEVpdGhlciB3YXksIHRoZSByZXN1bHRpbmcgb2JqZWN0IHdpbGwgYmUgdXNlZCB0byBpbml0aWFsaXplXG4gIC8vIHRoZSByZWdlbmVyYXRvclJ1bnRpbWUgdmFyaWFibGUgYXQgdGhlIHRvcCBvZiB0aGlzIGZpbGUuXG4gIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgPyBtb2R1bGUuZXhwb3J0cyA6IHt9XG4pKTtcblxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIC8vIFRoaXMgbW9kdWxlIHNob3VsZCBub3QgYmUgcnVubmluZyBpbiBzdHJpY3QgbW9kZSwgc28gdGhlIGFib3ZlXG4gIC8vIGFzc2lnbm1lbnQgc2hvdWxkIGFsd2F5cyB3b3JrIHVubGVzcyBzb21ldGhpbmcgaXMgbWlzY29uZmlndXJlZC4gSnVzdFxuICAvLyBpbiBjYXNlIHJ1bnRpbWUuanMgYWNjaWRlbnRhbGx5IHJ1bnMgaW4gc3RyaWN0IG1vZGUsIHdlIGNhbiBlc2NhcGVcbiAgLy8gc3RyaWN0IG1vZGUgdXNpbmcgYSBnbG9iYWwgRnVuY3Rpb24gY2FsbC4gVGhpcyBjb3VsZCBjb25jZWl2YWJseSBmYWlsXG4gIC8vIGlmIGEgQ29udGVudCBTZWN1cml0eSBQb2xpY3kgZm9yYmlkcyB1c2luZyBGdW5jdGlvbiwgYnV0IGluIHRoYXQgY2FzZVxuICAvLyB0aGUgcHJvcGVyIHNvbHV0aW9uIGlzIHRvIGZpeCB0aGUgYWNjaWRlbnRhbCBzdHJpY3QgbW9kZSBwcm9ibGVtLiBJZlxuICAvLyB5b3UndmUgbWlzY29uZmlndXJlZCB5b3VyIGJ1bmRsZXIgdG8gZm9yY2Ugc3RyaWN0IG1vZGUgYW5kIGFwcGxpZWQgYVxuICAvLyBDU1AgdG8gZm9yYmlkIEZ1bmN0aW9uLCBhbmQgeW91J3JlIG5vdCB3aWxsaW5nIHRvIGZpeCBlaXRoZXIgb2YgdGhvc2VcbiAgLy8gcHJvYmxlbXMsIHBsZWFzZSBkZXRhaWwgeW91ciB1bmlxdWUgcHJlZGljYW1lbnQgaW4gYSBHaXRIdWIgaXNzdWUuXG4gIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG59XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5nbG9iYWwnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLmdsb2JhbDtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWdsb2JhbFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LkcsIHsgZ2xvYmFsOiByZXF1aXJlKCcuL19nbG9iYWwnKSB9KTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgbWFyZ2luOiAwLjVyZW0gMC41cmVtIDAuNXJlbSAwLjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT4gKHByb3BzLmFjdGlvbiA/IFwiZ3JlZW5cIiA6IFwiIzI5ODBiOVwiKX07XG4gIGNvbG9yOiAjZTllOWU5O1xuICBib3JkZXI6IDA7XG4gIGJveC1zaGFkb3c6IDRweCA0cHggN3B4IDAgcmdiYSgyMDgsIDIwOCwgMjA4LCAxKTtcblxuICA6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDk5NWM3O1xuICB9XG5cbiAgOmRpc2FibGVkIHtcbiAgICBjb2xvcjogcmdiYSgyMzMsIDIzMywgMjMzLCAwLjgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT4gKHByb3BzLmFjdGlvbiA/IFwiZ3JlZW5cIiA6IFwicmdiYSg3MiwgMTQ4LCAxOTksIDAuOClcIil9O1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCIuL2NvbXBvbmVudHNcIjtcblxuZnVuY3Rpb24gR3JlZXRpbmdNYXN0ZXIocHJvcHMpIHtcbiAgY29uc3QgeyBncmVldGluZ3MsIG9uQWRkIH0gPSBwcm9wcztcbiAgY29uc3QgYm9keSA9IGdyZWV0aW5ncy5tYXAoZ3JlZXRpbmcgPT4gKFxuICAgIDx0ciBrZXk9e2dyZWV0aW5nLmlkfT5cbiAgICAgIDx0ZD57Z3JlZXRpbmcubmFtZX08L3RkPlxuICAgICAgPHRkPntncmVldGluZy5ncmVldGluZ308L3RkPlxuICAgIDwvdHI+XG4gICkpO1xuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8dGFibGU+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGg+TmFtZTwvdGg+XG4gICAgICAgICAgICA8dGg+R3JlZXRpbmc8L3RoPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT57Ym9keX08L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICAgIDxCdXR0b24gb25DbGljaz17b25BZGR9PkFkZDwvQnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBHcmVldGluZ01hc3RlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCIuL2NvbXBvbmVudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JlZXRpbmdEZXRhaWwocHJvcHMpIHtcbiAgY29uc3QgW25hbWUsIHNldE5hbWVdID0gUmVhY3QudXNlU3RhdGUocHJvcHMuaW5pdGlhbE5hbWUgfHwgXCJcIik7XG4gIGNvbnN0IFtncmVldGluZywgc2V0R3JlZXRpbmddID0gUmVhY3QudXNlU3RhdGUocHJvcHMuaW5pdGlhbEdyZWV0aW5nIHx8IFwiXCIpO1xuICBjb25zdCBpbnB1dFJlZiA9IFJlYWN0LnVzZVJlZigpO1xuICBjb25zdCBzYXZlRGlzYWJsZWQgPSAhKG5hbWUgJiYgZ3JlZXRpbmcpO1xuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIHNldE5hbWUoXCJcIik7XG4gICAgc2V0R3JlZXRpbmcoXCJcIik7XG5cbiAgICBpbnB1dFJlZi5jdXJyZW50LmZvY3VzKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzYXZlKCkge1xuICAgIHByb3BzLm9uU2F2ZSh7XG4gICAgICBuYW1lLFxuICAgICAgZ3JlZXRpbmdcbiAgICB9KTtcbiAgfVxuXG4gIGlmIChuYW1lID09PSBcIiBcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVwcy4uLlwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZU5hbWUoZXZlbnQpIHtcbiAgICBzZXROYW1lKGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8aW5wdXQgcmVmPXtpbnB1dFJlZn0gb25DaGFuZ2U9e3VwZGF0ZU5hbWV9IHZhbHVlPXtuYW1lfSBuYW1lPVwibmFtZVwiIHBsYWNlaG9sZGVyPVwiTmFtZVwiIC8+XG4gICAgICA8aW5wdXRcbiAgICAgICAgb25DaGFuZ2U9e2V2ZW50ID0+IHNldEdyZWV0aW5nKGV2ZW50LnRhcmdldC52YWx1ZSl9XG4gICAgICAgIHZhbHVlPXtncmVldGluZ31cbiAgICAgICAgbmFtZT1cImdyZWV0aW5nXCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJHcmVldGluZ1wiXG4gICAgICAvPlxuXG4gICAgICA8QnV0dG9uIG9uQ2xpY2s9e3Jlc2V0fT5DbGVhcjwvQnV0dG9uPlxuICAgICAgPEJ1dHRvbiBhY3Rpb24gZGlzYWJsZWQ9e3NhdmVEaXNhYmxlZH0gb25DbGljaz17c2F2ZX0+XG4gICAgICAgIFNhdmVcbiAgICAgIDwvQnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgR3JlZXRpbmdNYXN0ZXIgZnJvbSBcIi4vR3JlZXRpbmdNYXN0ZXJcIjtcbmltcG9ydCBHcmVldGluZ0RldGFpbCBmcm9tIFwiLi9HcmVldGluZ0RldGFpbFwiO1xuXG5jb25zdCBCQUNLRU5EX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo3MDAwL2dyZWV0aW5nc1wiO1xuY29uc3QgTU9ERV9NQVNURVIgPSBcIk1PREVfTUFTVEVSXCI7XG5jb25zdCBNT0RFX0RFVEFJTCA9IFwiTU9ERV9ERVRBSUxcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JlZXRpbmdDb250cm9sbGVyKCkge1xuICBjb25zdCBbbW9kZSwgc2V0TW9kZV0gPSBSZWFjdC51c2VTdGF0ZShNT0RFX01BU1RFUik7XG4gIGNvbnN0IFtncmVldGluZ3MsIHNldEdyZWV0aW5nc10gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBhc3luYyBmdW5jdGlvbiBsb2FkR3JlZXRpbmdzKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChCQUNLRU5EX1VSTCk7XG4gICAgICAgIGNvbnN0IGdyZWV0aW5ncyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgc2V0R3JlZXRpbmdzKGdyZWV0aW5ncyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkxPQURJTkcgR1JFRVRJTkdTIEZBSUxFRDpcIiwgZXJyKTtcbiAgICAgICAgc2V0R3JlZXRpbmdzKG51bGwpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIGxvYWRHcmVldGluZ3MoKTtcbiAgfSwgW10pO1xuXG4gIGFzeW5jIGZ1bmN0aW9uIGFkZEdyZWV0aW5nKGdyZWV0aW5nVG9CZUFkZGVkKSB7XG4gICAgbGV0IG5ld0dyZWV0aW5nO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEJBQ0tFTkRfVVJMLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGdyZWV0aW5nVG9CZUFkZGVkKVxuICAgICAgfSk7XG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdGF0dXMgY29kZTogXCIgKyByZXNwb25zZS5zdGF0dXMpO1xuICAgICAgfVxuICAgICAgbmV3R3JlZXRpbmcgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTE9BRElORyBHUkVFVElOR1MgRkFJTEVEOlwiLCBlcnIpO1xuICAgIH1cbiAgICAvLyBhZGQgdGhlIG5ldyBncmVldGluZ3MgdG8gdGhlIGxpc3Qgb2YgYWxsIGdyZWV0aW5nc1xuICAgIC8vIChjcmVhdGUgYSBuZXcgYXJyYXkgZm9yIGltbXV0YWJpbGl0eSlcbiAgICAvLyB1c2UgdXBkYXRlciBmdW5jdGlvbiAoaW4gc2V0R3JlZXRpbmdzKSB0byBtYWtlIHN1cmVcbiAgICAvLyB3ZSBnZXQgdGhlIGxhdGVzdCAnZ3JlZXRpbmdzJyB2YWx1ZSBmcm9tIHN0YXRlXG4gICAgc2V0R3JlZXRpbmdzKGN1cnJlbnRHcmVldGluZ3MgPT4gWy4uLmN1cnJlbnRHcmVldGluZ3MsIG5ld0dyZWV0aW5nXSk7XG4gICAgc2V0TW9kZShNT0RFX01BU1RFUik7XG4gIH1cblxuICBpZiAobW9kZSA9PT0gTU9ERV9NQVNURVIpXG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmVldGluZ01hc3RlclxuICAgICAgICBncmVldGluZ3M9e2dyZWV0aW5nc31cbiAgICAgICAgb25BZGQ9eygpID0+IHtcbiAgICAgICAgICBzZXRNb2RlKE1PREVfREVUQUlMKTtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgKTtcblxuICByZXR1cm4gPEdyZWV0aW5nRGV0YWlsIG9uU2F2ZT17YWRkR3JlZXRpbmd9IC8+O1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCIuL2NvbXBvbmVudHNcIjtcblxuZnVuY3Rpb24gRXJyb3JNZXNzYWdlKHsgbXNnLCBvblJldHJ5LCBjbGFzc05hbWUgfSkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPGgxPkFuIGVycm9yIG9jY3VyZWQhPC9oMT5cbiAgICAgIDxwcmU+e21zZ308L3ByZT5cbiAgICAgIDxCdXR0b24gb25DbGljaz17b25SZXRyeX0+VHJ5IGFnYWluPC9CdXR0b24+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmNvbnN0IFN0eWxlZEVycm9yTWVzc2FnZSA9IHN0eWxlZChFcnJvck1lc3NhZ2UpYFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC41KTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVycm9ySGFuZGxlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7fTtcbiAgfVxuXG4gIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4geyBlcnJvcjogZXJyb3IudG9TdHJpbmcoKSB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkQ2F0Y2goZXJyb3IsIGluZm8pIHtcbiAgICBjb25zb2xlLmVycm9yKFwidXVwcy4uLiB3ZSBjYXVnaHQgYW4gZXJyb3JcIiwgZXJyb3IsIGluZm8pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmVycm9yKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8U3R5bGVkRXJyb3JNZXNzYWdlIG1zZz17dGhpcy5zdGF0ZS5lcnJvcn0gb25SZXRyeT17KCkgPT4gdGhpcy5zZXRTdGF0ZSh7IGVycm9yOiBudWxsIH0pfSAvPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcblxuaW1wb3J0IEdyZWV0aW5nQ29udHJvbGxlciBmcm9tIFwiLi9HcmVldGluZ0NvbnRyb2xsZXJcIjtcbmltcG9ydCBFcnJvckhhbmRsZXIgZnJvbSBcIi4vRXJyb3JIYW5kbGVyXCI7XG5cbmNvbnN0IG1vdW50Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW91bnRcIik7XG5SZWFjdERPTS5yZW5kZXIoXG4gIDxFcnJvckhhbmRsZXI+XG4gICAgPEdyZWV0aW5nQ29udHJvbGxlciAvPlxuICA8L0Vycm9ySGFuZGxlcj4sXG4gIG1vdW50Tm9kZVxuKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=