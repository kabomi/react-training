!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="dist/",n(n.s=18)}([function(e,t,n){"use strict";e.exports=n(19)},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=!0,o="Invariant failed";t.a=function(e,t){if(!e)throw r?new Error(o):new Error(o+": "+(t||""))}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=n(1);function o(e){return"/"===e.charAt(0)}function i(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],a=e&&o(e),l=t&&o(t),u=a||l;if(e&&o(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var c=void 0;if(r.length){var s=r[r.length-1];c="."===s||".."===s||""===s}else c=!1;for(var f=0,d=r.length;d>=0;d--){var p=r[d];"."===p?i(r,d):".."===p?(i(r,d),f++):f&&(i(r,d),f--)}if(!u)for(;f--;f)r.unshift("..");!u||""===r[0]||r[0]&&o(r[0])||r.unshift("");var h=r.join("/");return c&&"/"!==h.substr(-1)&&(h+="/"),h},l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var u=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":l(t);if(r!==(void 0===n?"undefined":l(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),u=Object.keys(n);return a.length===u.length&&a.every(function(r){return e(t[r],n[r])})}return!1},c=n(2);function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function p(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function h(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function m(e,t,n,o){var i;"string"==typeof e?(i=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(i=Object(r.a)({},e)).pathname&&(i.pathname=""),i.search?"?"!==i.search.charAt(0)&&(i.search="?"+i.search):i.search="",i.hash?"#"!==i.hash.charAt(0)&&(i.hash="#"+i.hash):i.hash="",void 0!==t&&void 0===i.state&&(i.state=t));try{i.pathname=decodeURI(i.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+i.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(i.key=n),o?i.pathname?"/"!==i.pathname.charAt(0)&&(i.pathname=a(i.pathname,o.pathname)):i.pathname=o.pathname:i.pathname||(i.pathname="/"),i}function v(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&u(e.state,t.state)}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}n.d(t,"a",function(){return _}),n.d(t,"b",function(){return P}),n.d(t,"d",function(){return N}),n.d(t,"c",function(){return m}),n.d(t,"f",function(){return v}),n.d(t,"e",function(){return h});var g=!("undefined"==typeof window||!window.document||!window.document.createElement);function b(e,t){t(window.confirm(e))}var w="popstate",x="hashchange";function k(){try{return window.history.state||{}}catch(e){return{}}}function _(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t,n=window.history,o=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,i=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,l=a.forceRefresh,u=void 0!==l&&l,f=a.getUserConfirmation,v=void 0===f?b:f,_=a.keyLength,T=void 0===_?6:_,E=e.basename?p(s(e.basename)):"";function S(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return E&&(i=d(i,E)),m(i,r,n)}function C(){return Math.random().toString(36).substr(2,T)}var P=y();function O(e){Object(r.a)(W,e),W.length=n.length,P.notifyListeners(W.location,W.action)}function N(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||j(S(e.state))}function R(){j(S(k()))}var M=!1;function j(e){if(M)M=!1,O();else{P.confirmTransitionTo(e,"POP",v,function(t){t?O({action:"POP",location:e}):function(e){var t=W.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(M=!0,I(o))}(e)})}}var U=S(k()),A=[U.key];function D(e){return E+h(e)}function I(e){n.go(e)}var L=0;function z(e){1===(L+=e)&&1===e?(window.addEventListener(w,N),i&&window.addEventListener(x,R)):0===L&&(window.removeEventListener(w,N),i&&window.removeEventListener(x,R))}var F=!1;var W={length:n.length,action:"POP",location:U,createHref:D,push:function(e,t){var r=m(e,t,C(),W.location);P.confirmTransitionTo(r,"PUSH",v,function(e){if(e){var t=D(r),i=r.key,a=r.state;if(o)if(n.pushState({key:i,state:a},null,t),u)window.location.href=t;else{var l=A.indexOf(W.location.key),c=A.slice(0,-1===l?0:l+1);c.push(r.key),A=c,O({action:"PUSH",location:r})}else window.location.href=t}})},replace:function(e,t){var r=m(e,t,C(),W.location);P.confirmTransitionTo(r,"REPLACE",v,function(e){if(e){var t=D(r),i=r.key,a=r.state;if(o)if(n.replaceState({key:i,state:a},null,t),u)window.location.replace(t);else{var l=A.indexOf(W.location.key);-1!==l&&(A[l]=r.key),O({action:"REPLACE",location:r})}else window.location.replace(t)}})},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return F||(z(1),F=!0),function(){return F&&(F=!1,z(-1)),t()}},listen:function(e){var t=P.appendListener(e);return z(1),function(){z(-1),t()}}};return W}var T="hashchange",E={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+f(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:f,decodePath:s},slash:{encodePath:s,decodePath:s}};function S(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function C(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)}function P(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),o=n.getUserConfirmation,i=void 0===o?b:o,a=n.hashType,l=void 0===a?"slash":a,u=e.basename?p(s(e.basename)):"",f=E[l],w=f.encodePath,x=f.decodePath;function k(){var e=x(S());return u&&(e=d(e,u)),m(e)}var _=y();function P(e){Object(r.a)(F,e),F.length=t.length,_.notifyListeners(F.location,F.action)}var O=!1,N=null;function R(){var e=S(),t=w(e);if(e!==t)C(t);else{var n=k(),r=F.location;if(!O&&v(r,n))return;if(N===h(n))return;N=null,function(e){if(O)O=!1,P();else{_.confirmTransitionTo(e,"POP",i,function(t){t?P({action:"POP",location:e}):function(e){var t=F.location,n=A.lastIndexOf(h(t));-1===n&&(n=0);var r=A.lastIndexOf(h(e));-1===r&&(r=0);var o=n-r;o&&(O=!0,D(o))}(e)})}}(n)}}var M=S(),j=w(M);M!==j&&C(j);var U=k(),A=[h(U)];function D(e){t.go(e)}var I=0;function L(e){1===(I+=e)&&1===e?window.addEventListener(T,R):0===I&&window.removeEventListener(T,R)}var z=!1;var F={length:t.length,action:"POP",location:U,createHref:function(e){return"#"+w(u+h(e))},push:function(e,t){var n=m(e,void 0,void 0,F.location);_.confirmTransitionTo(n,"PUSH",i,function(e){if(e){var t=h(n),r=w(u+t);if(S()!==r){N=t,function(e){window.location.hash=e}(r);var o=A.lastIndexOf(h(F.location)),i=A.slice(0,-1===o?0:o+1);i.push(t),A=i,P({action:"PUSH",location:n})}else P()}})},replace:function(e,t){var n=m(e,void 0,void 0,F.location);_.confirmTransitionTo(n,"REPLACE",i,function(e){if(e){var t=h(n),r=w(u+t);S()!==r&&(N=t,C(r));var o=A.indexOf(h(F.location));-1!==o&&(A[o]=t),P({action:"REPLACE",location:n})}})},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=_.setPrompt(e);return z||(L(1),z=!0),function(){return z&&(z=!1,L(-1)),t()}},listen:function(e){var t=_.appendListener(e);return L(1),function(){L(-1),t()}}};return F}function O(e,t,n){return Math.min(Math.max(e,t),n)}function N(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,o=t.initialEntries,i=void 0===o?["/"]:o,a=t.initialIndex,l=void 0===a?0:a,u=t.keyLength,c=void 0===u?6:u,s=y();function f(e){Object(r.a)(w,e),w.length=w.entries.length,s.notifyListeners(w.location,w.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=O(l,0,i.length-1),v=i.map(function(e){return m(e,void 0,"string"==typeof e?d():e.key||d())}),g=h;function b(e){var t=O(w.index+e,0,w.entries.length-1),r=w.entries[t];s.confirmTransitionTo(r,"POP",n,function(e){e?f({action:"POP",location:r,index:t}):f()})}var w={length:v.length,action:"POP",location:v[p],index:p,entries:v,createHref:g,push:function(e,t){var r=m(e,t,d(),w.location);s.confirmTransitionTo(r,"PUSH",n,function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,t){var r=m(e,t,d(),w.location);s.confirmTransitionTo(r,"REPLACE",n,function(e){e&&(w.entries[w.index]=r,f({action:"REPLACE",location:r}))})},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return w}},function(e,t,n){"use strict";n.r(t),n.d(t,"MemoryRouter",function(){return g}),n.d(t,"Prompt",function(){return w}),n.d(t,"Redirect",function(){return E}),n.d(t,"Route",function(){return N}),n.d(t,"Router",function(){return y}),n.d(t,"StaticRouter",function(){return D}),n.d(t,"Switch",function(){return I}),n.d(t,"generatePath",function(){return T}),n.d(t,"matchPath",function(){return O}),n.d(t,"withRouter",function(){return L}),n.d(t,"__RouterContext",function(){return v});var r=n(16),o=n.n(r),i=n(3),a=n(0),l=n.n(a),u=(n(8),n(4)),c=n(2),s=n(9),f=n.n(s),d=n(1),p=(n(13),n(6)),h=n(17),m=n.n(h),v=function(e){var t=o()();return t.Provider.displayName=e+".Provider",t.Consumer.displayName=e+".Consumer",t}("Router"),y=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen(function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e})),n}Object(i.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return l.a.createElement(v.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(l.a.Component);var g=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(u.d)(t.props),t}return Object(i.a)(t,e),t.prototype.render=function(){return l.a.createElement(y,{history:this.history,children:this.props.children})},t}(l.a.Component);var b=function(e){function t(){return e.apply(this,arguments)||this}Object(i.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(l.a.Component);function w(e){var t=e.message,n=e.when,r=void 0===n||n;return l.a.createElement(v.Consumer,null,function(e){if(e||Object(c.a)(!1),!r||e.staticContext)return null;var n=e.history.block;return l.a.createElement(b,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})})}var x={},k=1e4,_=0;function T(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(x[e])return x[e];var t=f.a.compile(e);return _<k&&(x[e]=t,_++),t}(e)(t,{pretty:!0})}function E(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return l.a.createElement(v.Consumer,null,function(e){e||Object(c.a)(!1);var r=e.history,i=e.staticContext,a=o?r.push:r.replace,s=Object(u.c)(t?"string"==typeof n?T(n,t.params):Object(d.a)({},n,{pathname:T(n.pathname,t.params)}):n);return i?(a(s),null):l.a.createElement(b,{onMount:function(){a(s)},onUpdate:function(e,t){Object(u.f)(t.to,s)||a(s)},to:n})})}var S={},C=1e4,P=0;function O(e,t){void 0===t&&(t={}),"string"==typeof t&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce(function(t,n){if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=S[n]||(S[n]={});if(r[e])return r[e];var o=[],i={regexp:f()(e,o,t),keys:o};return P<C&&(r[e]=i,P++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],d=u.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce(function(e,t,n){return e[t.name]=d[n],e},{})}},null)}var N=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this;return l.a.createElement(v.Consumer,null,function(t){t||Object(c.a)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?O(n.pathname,e.props):t.match,o=Object(d.a)({},t,{location:n,match:r}),i=e.props,a=i.children,u=i.component,s=i.render;(Array.isArray(a)&&0===a.length&&(a=null),"function"==typeof a)&&(void 0===(a=a(o))&&(a=null));return l.a.createElement(v.Provider,{value:o},a&&!function(e){return 0===l.a.Children.count(e)}(a)?a:o.match?u?l.a.createElement(u,o):s?s(o):null:null)})},t}(l.a.Component);function R(e){return"/"===e.charAt(0)?e:"/"+e}function M(e,t){if(!e)return t;var n=R(e);return 0!==t.pathname.indexOf(n)?t:Object(d.a)({},t,{pathname:t.pathname.substr(n.length)})}function j(e){return"string"==typeof e?e:Object(u.e)(e)}function U(e){return function(){Object(c.a)(!1)}}function A(){}var D=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return A},t.handleBlock=function(){return A},t}Object(i.a)(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context;i.action=t,i.location=function(e,t){return e?Object(d.a)({},t,{pathname:R(e)+t.pathname}):t}(o,Object(u.c)(e)),i.url=j(i.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,i=e.location,a=void 0===i?"/":i,c=Object(p.a)(e,["basename","context","location"]),s={createHref:function(e){return R(n+j(e))},action:"POP",location:M(n,Object(u.c)(a)),push:this.handlePush,replace:this.handleReplace,go:U(),goBack:U(),goForward:U(),listen:this.handleListen,block:this.handleBlock};return l.a.createElement(y,Object(d.a)({},c,{history:s,staticContext:o}))},t}(l.a.Component);var I=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this;return l.a.createElement(v.Consumer,null,function(t){t||Object(c.a)(!1);var n,r,o=e.props.location||t.location;return l.a.Children.forEach(e.props.children,function(e){if(null==r&&l.a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?O(o.pathname,Object(d.a)({},e.props,{path:i})):t.match}}),r?l.a.cloneElement(n,{location:o,computedMatch:r}):null})},t}(l.a.Component);function L(e){var t=function(t){var n=t.wrappedComponentRef,r=Object(p.a)(t,["wrappedComponentRef"]);return l.a.createElement(N,{children:function(t){return l.a.createElement(e,Object(d.a)({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,m()(t,e)}},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";n.r(t),n.d(t,"BrowserRouter",function(){return f}),n.d(t,"HashRouter",function(){return d}),n.d(t,"Link",function(){return p}),n.d(t,"NavLink",function(){return h});var r=n(3),o=n(0),i=n.n(o),a=n(5);n.d(t,"MemoryRouter",function(){return a.MemoryRouter}),n.d(t,"Prompt",function(){return a.Prompt}),n.d(t,"Redirect",function(){return a.Redirect}),n.d(t,"Route",function(){return a.Route}),n.d(t,"Router",function(){return a.Router}),n.d(t,"StaticRouter",function(){return a.StaticRouter}),n.d(t,"Switch",function(){return a.Switch}),n.d(t,"generatePath",function(){return a.generatePath}),n.d(t,"matchPath",function(){return a.matchPath}),n.d(t,"withRouter",function(){return a.withRouter}),n.d(t,"__RouterContext",function(){return a.__RouterContext});var l=n(4),u=(n(8),n(1)),c=n(6),s=n(2),f=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(l.a)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(a.Router,{history:this.history,children:this.props.children})},t}(i.a.Component);var d=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(l.b)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(a.Router,{history:this.history,children:this.props.children})},t}(i.a.Component);var p=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.handleClick=function(e,t){(this.props.onClick&&this.props.onClick(e),e.defaultPrevented||0!==e.button||this.props.target&&"_self"!==this.props.target||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))||(e.preventDefault(),(this.props.replace?t.replace:t.push)(this.props.to))},n.render=function(){var e=this,t=this.props,n=t.innerRef,r=(t.replace,t.to),o=Object(c.a)(t,["innerRef","replace","to"]);return i.a.createElement(a.__RouterContext.Consumer,null,function(t){t||Object(s.a)(!1);var a="string"==typeof r?Object(l.c)(r,null,null,t.location):r,c=a?t.history.createHref(a):"";return i.a.createElement("a",Object(u.a)({},o,{onClick:function(n){return e.handleClick(n,t.history)},href:c,ref:n}))})},t}(i.a.Component);function h(e){var t=e["aria-current"],n=void 0===t?"page":t,r=e.activeClassName,o=void 0===r?"active":r,l=e.activeStyle,s=e.className,f=e.exact,d=e.isActive,h=e.location,m=e.strict,v=e.style,y=e.to,g=Object(c.a)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to"]),b="object"==typeof y?y.pathname:y,w=b&&b.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1");return i.a.createElement(a.Route,{path:w,exact:f,strict:m,location:h,children:function(e){var t=e.location,r=e.match,a=!!(d?d(r,t):r),c=a?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(function(e){return e}).join(" ")}(s,o):s,f=a?Object(u.a)({},v,l):v;return i.a.createElement(p,Object(u.a)({"aria-current":a&&n||null,className:c,style:f,to:y},g))}})}},function(e,t,n){e.exports=n(28)()},function(e,t,n){var r=n(33);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var h=e[a],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,_="?"===b||"*"===b,T=n[2]||s,E=y||g;r.push({name:v||i++,prefix:m||"",delimiter:T,optional:_,repeat:k,partial:x,asterisk:!!w,pattern:E?c(E):w?".*":"[^"+u(T)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},,function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";e.exports=n(34)},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0));t.default=function(){return o.default.createElement("div",{className:"Spinner"},o.default.createElement("div",{className:"bounce bounce1"}),o.default.createElement("div",{className:"bounce bounce2"}),o.default.createElement("div",{className:"bounce bounce3"}))}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(a,l)}u((r=r.apply(e,t||[])).next())})},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(0));t.default=function(e,t){var n=a.default.useState(!1),i=n[0],l=n[1],u=a.default.useState(t),c=u[0],s=u[1];return a.default.useEffect(function(){!function(){r(this,void 0,void 0,function(){var n,r;return o(this,function(o){switch(o.label){case 0:return o.trys.push([0,3,4,5]),l(!0),s(t),[4,fetch(e)];case 1:return[4,o.sent().json()];case 2:return n=o.sent(),s(n),[3,5];case 3:return r=o.sent(),console.error("LOADING DATA FAILED:",r),s(t),[3,5];case 4:return l(!1),[7];case 5:return[2]}})})}()},[e]),[c,s,i]}},function(e,t,n){"use strict";t.__esModule=!0;var r=i(n(0)),o=i(n(27));function i(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||o.default,e.exports=t.default},function(e,t,n){"use strict";var r=n(13),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||m&&m[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=r(n(20)),a=r(n(24)),l=r(n(38)),u=document.getElementById("mount");i.default.render(o.default.createElement(l.default,null,o.default.createElement(a.default,null)),u)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(11),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function _(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var T=_.prototype=new k;T.constructor=_,r(T,x.prototype),T.isPureReactComponent=!0;var E={current:null},S={current:null},C=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)C.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:S.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var R=/\/+/g,M=[];function j(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function A(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+D(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+D(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+D(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?z(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function z(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),A(e,L,t=j(t,i,r,o)),U(t)}function F(){var e=E.current;return null===e&&g("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return z(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;A(e,I,t=j(null,null,t,n)),U(t)},count:function(e){return A(e,function(){return null},null)},toArray:function(e){var t=[];return z(e,t,null,function(e){return e}),t},only:function(e){return N(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:_,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:l,StrictMode:u,Suspense:h,createElement:O,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=S.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!P.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:E,ReactCurrentOwner:S,assign:r}},$={default:W},B=$&&W||$;e.exports=B.default||B},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(21)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(11),i=n(22);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,h={};function m(){if(p)for(var e in h){var t=h[e],n=p.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],l,u);o=!0}else i.registrationName?(v(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function v(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],g={},b={},w={},x=null,k=null,_=null;function T(e,t,n){var r=e.type||"unknown-event";e.currentTarget=_(n),function(e,t,n,r,o,i,f,p,h){if(d.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function E(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function S(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)T(e,t[r],n[r]);else t&&T(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){p&&a("101"),p=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function R(e){if(null!==e&&(C=E(C,e)),e=C,C=null,e&&(S(e,P),C&&a("95"),c))throw e=s,c=!1,s=null,e}var M=Math.random().toString(36).slice(2),j="__reactInternalInstance$"+M,U="__reactEventHandlers$"+M;function A(e){if(e[j])return e[j];for(;!e[j];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[j]).tag||6===e.tag?e:null}function D(e){return!(e=e[j])||5!==e.tag&&6!==e.tag?null:e}function I(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function L(e){return e[U]||null}function z(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=E(n._dispatchListeners,t),n._dispatchInstances=E(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=z(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function $(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=E(n._dispatchListeners,t),n._dispatchInstances=E(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&$(e._targetInst,null,e)}function V(e){S(e,W)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function Q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var K={animationend:Q("Animation","AnimationEnd"),animationiteration:Q("Animation","AnimationIteration"),animationstart:Q("Animation","AnimationStart"),transitionend:Q("Transition","TransitionEnd")},q={},G={};function Y(e){if(q[e])return q[e];if(!K[e])return e;var t,n=K[e];for(t in n)if(n.hasOwnProperty(t)&&t in G)return q[e]=n[t];return e}H&&(G=document.createElement("div").style,"AnimationEvent"in window||(delete K.animationend.animation,delete K.animationiteration.animation,delete K.animationstart.animation),"TransitionEvent"in window||delete K.transitionend.transition);var X=Y("animationend"),J=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),he=[9,13,27,32],me=H&&"CompositionEvent"in window,ve=null;H&&"documentMode"in document&&(ve=document.documentMode);var ye=H&&"TextEvent"in window&&!ve,ge=H&&(!me||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function _e(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Te=!1;var Ee={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Te?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Te||o!==we.compositionStart?o===we.compositionEnd&&Te&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Te=!0)),o=de.getPooled(o,t,n,r),i?o.data=i:null!==(i=_e(n))&&(o.data=i),V(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return _e(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Te)return"compositionend"===e||!me&&ke(e,t)?(e=ie(),oe=re=ne=null,Te=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(we.beforeInput,t,n,r)).data=e,V(t)):t=null,null===i?t:null===t?i:[i,t]}},Se=null,Ce=null,Pe=null;function Oe(e){if(e=k(e)){"function"!=typeof Se&&a("280");var t=x(e.stateNode);Se(e.stateNode,e.type,t)}}function Ne(e){Ce?Pe?Pe.push(e):Pe=[e]:Ce=e}function Re(){if(Ce){var e=Ce,t=Pe;if(Pe=Ce=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Me(e,t){return e(t)}function je(e,t,n){return e(t,n)}function Ue(){}var Ae=!1;function De(e,t){if(Ae)return e(t);Ae=!0;try{return Me(e,t)}finally{Ae=!1,(null!==Ce||null!==Pe)&&(Ue(),Re())}}var Ie={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Le(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ie[e.type]:"textarea"===t}function ze(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $e(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ve=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ve.hasOwnProperty("ReactCurrentDispatcher")||(Ve.ReactCurrentDispatcher={current:null});var He=/^(.*)[\\\/]/,Qe="function"==typeof Symbol&&Symbol.for,Ke=Qe?Symbol.for("react.element"):60103,qe=Qe?Symbol.for("react.portal"):60106,Ge=Qe?Symbol.for("react.fragment"):60107,Ye=Qe?Symbol.for("react.strict_mode"):60108,Xe=Qe?Symbol.for("react.profiler"):60114,Je=Qe?Symbol.for("react.provider"):60109,Ze=Qe?Symbol.for("react.context"):60110,et=Qe?Symbol.for("react.concurrent_mode"):60111,tt=Qe?Symbol.for("react.forward_ref"):60112,nt=Qe?Symbol.for("react.suspense"):60113,rt=Qe?Symbol.for("react.memo"):60115,ot=Qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ge:return"Fragment";case qe:return"Portal";case Xe:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=lt(e.type);n=null,r&&(n=lt(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new pt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Tt(e,t.type,n):t.hasOwnProperty("defaultValue")&&Tt(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function _t(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Tt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new pt(e,1,!1,e.toLowerCase(),null)});var Et={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function St(e,t,n){return(e=ue.getPooled(Et.change,e,t,n)).type="change",Ne(n),V(e),e}var Ct=null,Pt=null;function Ot(e){R(e)}function Nt(e){if(Be(I(e)))return e}function Rt(e,t){if("change"===e)return t}var Mt=!1;function jt(){Ct&&(Ct.detachEvent("onpropertychange",Ut),Pt=Ct=null)}function Ut(e){"value"===e.propertyName&&Nt(Pt)&&De(Ot,e=St(Pt,e,ze(e)))}function At(e,t,n){"focus"===e?(jt(),Pt=n,(Ct=t).attachEvent("onpropertychange",Ut)):"blur"===e&&jt()}function Dt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Pt)}function It(e,t){if("click"===e)return Nt(t)}function Lt(e,t){if("input"===e||"change"===e)return Nt(t)}H&&(Mt=Fe("input")&&(!document.documentMode||9<document.documentMode));var zt={eventTypes:Et,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?I(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Rt:Le(o)?Mt?i=Lt:(i=Dt,a=At):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=It),i&&(i=i(e,t)))return St(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Tt(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $t(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Bt(){return $t}var Vt=0,Ht=0,Qt=!1,Kt=!1,qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Vt;return Vt=e.screenX,Qt?"mousemove"===e.type?e.screenX-t:0:(Qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Kt?"mousemove"===e.type?e.screenY-t:0:(Kt=!0,0)}}),Gt=qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Yt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?A(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=qt,l=Yt.mouseLeave,u=Yt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Gt,l=Yt.pointerLeave,u=Yt.pointerEnter,c="pointer");var s=null==i?o:I(i);if(o=null==t?o:I(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=z(a))c++;for(a=0,u=o;u;u=z(u))a++;for(;0<c-a;)t=z(t),c--;for(;0<a-c;)o=z(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=z(t),o=z(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=z(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=z(r);for(r=0;r<t.length;r++)$(t[r],"bubbled",e);for(r=i.length;0<r--;)$(i[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ft.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=qt.extend({dataTransfer:null}),pn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),hn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Ft;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=ue}return V(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function _n(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=A(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ze(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=E(a,u))}R(a)}}var Tn=!0;function En(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!1)}function Sn(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){je(Pn,e,t)}function Pn(e,t){if(Tn){var n=ze(t);if(null===(n=A(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{De(_n,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Nn=0,Rn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,Rn)||(e[Rn]=Nn++,On[e[Rn]]={}),On[e[Rn]]}function jn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Un(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function An(e,t){var n,r=Un(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Un(r)}}function Dn(){for(var e=window,t=jn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=jn((e=t.contentWindow).document)}return t}function In(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Ln(e){var t=Dn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&In(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=An(n,i);var a=An(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var zn=H&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,$n=null,Bn=null,Vn=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Wn||Wn!==jn(n)?null:("selectionStart"in(n=Wn)&&In(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Fn.select,$n,e,t)).type="select",e.target=Wn,V(e),e))}var Qn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Mn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?I(t):window,e){case"focus":(Le(i)||"true"===i.contentEditable)&&(Wn=i,$n=t,Bn=null);break;case"blur":Bn=$n=Wn=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Hn(n,r);case"selectionchange":if(zn)break;case"keydown":case"keyup":return Hn(n,r)}return null}};function Kn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Gn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Xn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=L,k=D,_=I,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:zt,SelectEventPlugin:Qn,BeforeInputEventPlugin:Ee});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Sn("scroll",e);break;case"focus":case"blur":Sn("focus",e),Sn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&Sn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&En(o,e)}n[o]=!0}}}function hr(){}var mr=null,vr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,xr=i.unstable_scheduleCallback,kr=i.unstable_cancelCallback;function _r(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Tr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Er=[],Sr=-1;function Cr(e){0>Sr||(e.current=Er[Sr],Er[Sr]=null,Sr--)}function Pr(e,t){Er[++Sr]=e.current,e.current=t}var Or={},Nr={current:Or},Rr={current:!1},Mr=Or;function jr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ur(e){return null!=(e=e.childContextTypes)}function Ar(e){Cr(Rr),Cr(Nr)}function Dr(e){Cr(Rr),Cr(Nr)}function Ir(e,t,n){Nr.current!==Or&&a("168"),Pr(Nr,t),Pr(Rr,n)}function Lr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function zr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,Mr=Nr.current,Pr(Nr,t),Pr(Rr,Rr.current),!0}function Fr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Lr(e,t,Mr),r.__reactInternalMemoizedMergedChildContext=t,Cr(Rr),Cr(Nr),Pr(Nr,t)):Cr(Rr),Pr(Rr,n)}var Wr=null,$r=null;function Br(e){return function(t){try{return e(t)}catch(e){}}}function Vr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Vr(e,t,n,r)}function Qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Kr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function qr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ge:return Gr(n.children,o,i,t);case et:return Yr(n,3|o,i,t);case Ye:return Yr(n,2|o,i,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Gr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Xr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Yi(r=Ga(r,e));o.payload=t,null!=n&&(o.callback=n),Ba(),Ji(e,o),Ja(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Yi(r=Ga(r,e));o.tag=Vi,o.payload=t,null!=n&&(o.callback=n),Ba(),Ji(e,o),Ja(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=kl(),r=Yi(n=Ga(n,e));r.tag=Hi,null!=t&&(r.callback=t),Ba(),Ji(e,r),Ja(e,n)}};function lo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function uo(e,t,n){var r=!1,o=Or,i=t.contextType;return"object"==typeof i&&null!==i?i=$i(i):(o=Ur(t)?Mr:Nr.current,i=(r=null!=(r=t.contextTypes))?jr(e,o):Or),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=$i(i):(i=Ur(t)?Mr:Nr.current,o.context=jr(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function ho(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Kr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=qr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Gr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Xr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ke:return(n=qr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case qe:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Gr(t,e.mode,n,null)).return=e,t;ho(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ke:return n.key===o?n.type===Ge?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case qe:return n.key===o?s(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);ho(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ke:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case qe:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);ho(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,l[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=d(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(o,e)}),c}function v(o,l,u,c){var s=at(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,m=l,v=l=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,c);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ge&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ke:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ge:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ge?i.props.children:i.props)).ref=po(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ge?((r=Gr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=qr(i.type,i.key,i.props,null,e.mode,u)).ref=po(e,r,i),u.return=e,e=u)}return l(e);case qe:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Xr(i,e.mode,u)).return=e,e=r),l(e);if(fo(i))return m(e,r,i,u);if(at(i))return v(e,r,i,u);if(s&&ho(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var vo=mo(!0),yo=mo(!1),go={},bo={current:go},wo={current:go},xo={current:go};function ko(e){return e===go&&a("174"),e}function _o(e,t){Pr(xo,t),Pr(wo,e),Pr(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Cr(bo),Pr(bo,t)}function To(e){Cr(bo),Cr(wo),Cr(xo)}function Eo(e){ko(xo.current);var t=ko(bo.current),n=tr(t,e.type);t!==n&&(Pr(wo,e),Pr(bo,n))}function So(e){wo.current===e&&(Cr(bo),Cr(wo))}var Co=0,Po=2,Oo=4,No=8,Ro=16,Mo=32,jo=64,Uo=128,Ao=Ve.ReactCurrentDispatcher,Do=0,Io=null,Lo=null,zo=null,Fo=null,Wo=null,$o=null,Bo=0,Vo=null,Ho=0,Qo=!1,Ko=null,qo=0;function Go(){a("321")}function Yo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Xo(e,t,n,r,o,i){if(Do=i,Io=t,zo=null!==e?e.memoizedState:null,Ao.current=null===zo?si:fi,t=n(r,o),Qo){do{Qo=!1,qo+=1,zo=null!==e?e.memoizedState:null,$o=Fo,Vo=Wo=Lo=null,Ao.current=fi,t=n(r,o)}while(Qo);Ko=null,qo=0}return Ao.current=ci,(e=Io).memoizedState=Fo,e.expirationTime=Bo,e.updateQueue=Vo,e.effectTag|=Ho,e=null!==Lo&&null!==Lo.next,Do=0,$o=Wo=Fo=zo=Lo=Io=null,Bo=0,Vo=null,Ho=0,e&&a("300"),t}function Jo(){Ao.current=ci,Do=0,$o=Wo=Fo=zo=Lo=Io=null,Bo=0,Vo=null,Ho=0,Qo=!1,Ko=null,qo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Wo?Fo=Wo=e:Wo=Wo.next=e,Wo}function ei(){if(null!==$o)$o=(Wo=$o).next,zo=null!==(Lo=zo)?Lo.next:null;else{null===zo&&a("310");var e={memoizedState:(Lo=zo).memoizedState,baseState:Lo.baseState,queue:Lo.queue,baseUpdate:Lo.baseUpdate,next:null};Wo=null===Wo?Fo=e:Wo.next=e,zo=Lo.next}return Wo}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),n.lastRenderedReducer=e,0<qo){var r=n.dispatch;if(null!==Ko){var o=Ko.get(n);if(void 0!==o){Ko.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Do?(s||(s=!0,u=l,o=i),f>Bo&&(Bo=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=i),Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Vo?(Vo={lastEffect:null}).lastEffect=e.next=e:null===(t=Vo.lastEffect)?Vo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Vo.lastEffect=e),e}function oi(e,t,n,r){var o=Zo();Ho|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Lo){var a=Lo.memoizedState;if(i=a.destroy,null!==r&&Yo(r,a.deps))return void ri(Co,n,i,r)}Ho|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function li(){}function ui(e,t,n){25>qo||a("301");var r=e.alternate;if(e===Io||null!==r&&r===Io)if(Qo=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Ko&&(Ko=new Map),void 0===(n=Ko.get(t)))Ko.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Ba();var o=kl(),i={expirationTime:o=Ga(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)i.next=i;else{var u=l.next;null!==u&&(i.next=u),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Ja(e,o)}}var ci={readContext:$i,useCallback:Go,useContext:Go,useEffect:Go,useImperativeHandle:Go,useLayoutEffect:Go,useMemo:Go,useReducer:Go,useRef:Go,useState:Go,useDebugValue:Go},si={readContext:$i,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:$i,useEffect:function(e,t){return oi(516,Uo|jo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,Oo|Mo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,Oo|Mo,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ui.bind(null,Io,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ti,lastRenderedState:e}).dispatch=ui.bind(null,Io,e),[t.memoizedState,e]},useDebugValue:li},fi={readContext:$i,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Yo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:$i,useEffect:function(e,t){return ii(516,Uo|jo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,Oo|Mo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,Oo|Mo,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Yo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:li},di=null,pi=null,hi=!1;function mi(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function vi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function yi(e){if(hi){var t=pi;if(t){var n=t;if(!vi(e,t)){if(!(t=_r(n))||!vi(e,t))return e.effectTag|=2,hi=!1,void(di=e);mi(di,n)}di=e,pi=Tr(t)}else e.effectTag|=2,hi=!1,di=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;di=e}function bi(e){if(e!==di)return!1;if(!hi)return gi(e),hi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=pi;t;)mi(e,t),t=_r(t);return gi(e),pi=di?_r(e.stateNode):null,!0}function wi(){pi=di=null,hi=!1}var xi=Ve.ReactCurrentOwner,ki=!1;function _i(e,t,n,r){t.child=null===e?yo(t,null,n,r):vo(t,e.child,n,r)}function Ti(e,t,n,r,o){n=n.render;var i=t.ref;return Wi(t,o),r=Xo(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,_i(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ji(e,t,o))}function Ei(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=qr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Si(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?ji(e,t,i):(t.effectTag|=1,(e=Kr(a,r)).ref=t.ref,e.return=t,t.child=e)}function Si(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(ki=!1,o<i)?ji(e,t,i):Pi(e,t,n,r,i)}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Pi(e,t,n,r,o){var i=Ur(n)?Mr:Nr.current;return i=jr(t,i),Wi(t,o),n=Xo(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,_i(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ji(e,t,o))}function Oi(e,t,n,r,o){if(Ur(n)){var i=!0;zr(t)}else i=!1;if(Wi(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),uo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=$i(c):c=jr(t,c=Ur(n)?Mr:Nr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Ki=!1;var d=t.memoizedState;u=a.state=d;var p=t.updateQueue;null!==p&&(na(t,p,r,a,o),u=t.memoizedState),l!==r||d!==u||Rr.current||Ki?("function"==typeof s&&(io(t,n,s,r),u=t.memoizedState),(l=Ki||lo(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:ro(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=$i(c):c=jr(t,c=Ur(n)?Mr:Nr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Ki=!1,u=t.memoizedState,d=a.state=u,null!==(p=t.updateQueue)&&(na(t,p,r,a,o),d=t.memoizedState),l!==r||u!==d||Rr.current||Ki?("function"==typeof s&&(io(t,n,s,r),d=t.memoizedState),(s=Ki||lo(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ni(e,t,n,r,i,o)}function Ni(e,t,n,r,o,i){Ci(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Fr(t,n,!1),ji(e,t,i);r=t.stateNode,xi.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=vo(t,e.child,null,i),t.child=vo(t,null,l,i)):_i(e,t,l,i),t.memoizedState=r.state,o&&Fr(t,n,!0),t.child}function Ri(e){var t=e.stateNode;t.pendingContext?Ir(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ir(0,t.context,!1),_o(e,t.containerInfo)}function Mi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Gr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Gr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=yo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Kr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Kr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=vo(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Gr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Gr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=vo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function ji(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Kr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Kr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ui(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Rr.current)ki=!0;else if(r<n){switch(ki=!1,t.tag){case 3:Ri(t),wi();break;case 5:Eo(t);break;case 1:Ur(t.type)&&zr(t);break;case 4:_o(t,t.stateNode.containerInfo);break;case 10:zi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Mi(e,t,n):null!==(t=ji(e,t,n))?t.sibling:null}return ji(e,t,n)}}else ki=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=jr(t,Nr.current);if(Wi(t,n),o=Xo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Ur(r)){var i=!0;zr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&io(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Ni(null,t,r,!0,i,n)}else t.tag=0,_i(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),l=void 0,o){case 0:l=Pi(null,t,e,i,n);break;case 1:l=Oi(null,t,e,i,n);break;case 11:l=Ti(null,t,e,i,n);break;case 14:l=Ei(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Pi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ri(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wi(),t=ji(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(pi=Tr(t.stateNode.containerInfo),di=t,o=hi=!0),o?(t.effectTag|=2,t.child=yo(t,null,r,n)):(_i(e,t,r,n),wi()),t=t.child),t;case 5:return Eo(t),null===e&&yi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,gr(r,o)?l=null:null!==i&&gr(r,i)&&(t.effectTag|=16),Ci(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(_i(e,t,l,n),t=t.child),t;case 6:return null===e&&yi(t),null;case 13:return Mi(e,t,n);case 4:return _o(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=vo(t,null,r,n):_i(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ti(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return _i(e,t,t.pendingProps,n),t.child;case 8:case 12:return _i(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,zi(t,i=o.value),null!==l){var u=l.value;if(0===(i=Jt(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Rr.current){t=ji(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){l=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=Yi(n)).tag=Hi,Ji(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}_i(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Wi(t,n),r=r(o=$i(o,i.unstable_observedBits)),t.effectTag|=1,_i(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),Ei(e,t,o,i=ro(o.type,i),r,n);case 15:return Si(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ur(r)?(e=!0,zr(t)):e=!1,Wi(t,n),uo(t,r,o),so(t,r,o,n),Ni(null,t,r,!0,e,n)}a("156")}var Ai={current:null},Di=null,Ii=null,Li=null;function zi(e,t){var n=e.type._context;Pr(Ai,n._currentValue),n._currentValue=t}function Fi(e){var t=Ai.current;Cr(Ai),e.type._context._currentValue=t}function Wi(e,t){Di=e,Li=Ii=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(ki=!0),e.contextDependencies=null}function $i(e,t){return Li!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Li=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ii?(null===Di&&a("308"),Ii=t,Di.contextDependencies={first:t,expirationTime:0}):Ii=Ii.next=t),e._currentValue}var Bi=0,Vi=1,Hi=2,Qi=3,Ki=!1;function qi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Gi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Yi(e){return{expirationTime:e,tag:Bi,payload:null,callback:null,next:null,nextEffect:null}}function Xi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ji(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=qi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=qi(e.memoizedState),o=n.updateQueue=qi(n.memoizedState)):r=e.updateQueue=Gi(o):null===o&&(o=n.updateQueue=Gi(r));null===o||r===o?Xi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Xi(r,t),Xi(o,t)):(Xi(r,t),o.lastUpdate=t)}function Zi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=qi(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Gi(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case Vi:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case Qi:e.effectTag=-2049&e.effectTag|64;case Bi:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case Hi:Ki=!0}return r}function na(e,t,n,r,o){Ki=!1;for(var i=(t=ea(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:ut(t)}}function aa(e){e.effectTag|=4}var la=void 0,ua=void 0,ca=void 0,sa=void 0;la=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ua=function(){},ca=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(ko(bo.current),e=null,n){case"input":a=bt(l,a),r=bt(l,r),e=[];break;case"option":a=Kn(l,a),r=Kn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Gn(l,a),r=Gn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=hr)}fr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&aa(t)}},sa=function(e,t,n,r){n!==r&&aa(t)};var fa="function"==typeof WeakSet?WeakSet:Set;function da(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function pa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){qa(e,t)}else t.current=null}function ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Co){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==Co&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ma(e){switch("function"==typeof $r&&$r(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){qa(o,e)}}n=n.next}while(n!==t)}break;case 1:if(pa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){qa(e,t)}break;case 5:pa(e);break;case 4:ga(e)}}function va(e){return 5===e.tag||3===e.tag||4===e.tag}function ya(e){e:{for(var t=e.return;null!==t;){if(va(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||va(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(ma(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(ma(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ha(Oo,No,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[U]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),dr(n,r),r=dr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?cr(e,l):"dangerouslySetInnerHTML"===a?or(e,l):"children"===a?ir(e,l):yt(e,a,l,r)}switch(n){case"input":kt(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?qn(e,!!o.multiple,o.defaultValue,!0):qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=kl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new fa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ga(t=kl(),e),null!==(e=Xa(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&_l(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var wa="function"==typeof WeakMap?WeakMap:Map;function xa(e,t,n){(n=Yi(n)).tag=Qi,n.payload={element:null};var r=t.value;return n.callback=function(){Ml(r),da(e,t)},n}function ka(e,t,n){(n=Yi(n)).tag=Qi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===La?La=new Set([this]):La.add(this));var n=t.value,o=t.stack;da(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function _a(e){switch(e.tag){case 1:Ur(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return To(),Dr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return So(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return To(),null;case 10:return Fi(e),null;default:return null}}var Ta=Ve.ReactCurrentDispatcher,Ea=Ve.ReactCurrentOwner,Sa=1073741822,Ca=!1,Pa=null,Oa=null,Na=0,Ra=-1,Ma=!1,ja=null,Ua=!1,Aa=null,Da=null,Ia=null,La=null;function za(){if(null!==Pa)for(var e=Pa.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:To(),Dr();break;case 5:So(t);break;case 4:To();break;case 10:Fi(t)}e=e.return}Oa=null,Na=0,Ra=-1,Ma=!1,Pa=null}function Fa(){for(;null!==ja;){var e=ja.effectTag;if(16&e&&ir(ja.stateNode,""),128&e){var t=ja.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:ya(ja),ja.effectTag&=-3;break;case 6:ya(ja),ja.effectTag&=-3,ba(ja.alternate,ja);break;case 4:ba(ja.alternate,ja);break;case 8:ga(e=ja),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}ja=ja.nextEffect}}function Wa(){for(;null!==ja;){if(256&ja.effectTag)e:{var e=ja.alternate,t=ja;switch(t.tag){case 0:case 11:case 15:ha(Po,Co,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}ja=ja.nextEffect}}function $a(e,t){for(;null!==ja;){var n=ja.effectTag;if(36&n){var r=ja.alternate,o=ja,i=t;switch(o.tag){case 0:case 11:case 15:ha(Ro,Mo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ra(0,r,l)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=ja.ref)&&(i=ja.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Aa=e),ja=ja.nextEffect}}function Ba(){null!==Da&&kr(Da),null!==Ia&&Ia()}function Va(e,t){Ua=Ca=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Ea.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=Tn,vr=function(){var e=Dn();if(In(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(l=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++u===r&&(a=i),f===o&&++c===n&&(l=i),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),Tn=!1,ja=r;null!==ja;){o=!1;var l=void 0;try{Wa()}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),qa(ja,l),null!==ja&&(ja=ja.nextEffect))}for(ja=r;null!==ja;){o=!1,l=void 0;try{Fa()}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),qa(ja,l),null!==ja&&(ja=ja.nextEffect))}for(Ln(vr),vr=null,Tn=!!mr,mr=null,e.current=t,ja=r;null!==ja;){o=!1,l=void 0;try{$a(e,n)}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),qa(ja,l),null!==ja&&(ja=ja.nextEffect))}if(null!==r&&null!==Aa){var u=function(e,t){Ia=Da=Aa=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ha(Uo,Co,i),ha(Co,jo,i)}catch(e){r=!0,o=e}r&&qa(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&_l(e,n),sl||ol||Pl(1073741823,!1)}.bind(null,e,r);Da=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return xr(u)}),Ia=u}Ca=Ua=!1,"function"==typeof Wr&&Wr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(La=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Ha(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Pa=e;e:{var i=t,l=Na,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ur(t.type)&&Ar();break;case 3:To(),Dr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(bi(t),t.effectTag&=-3),ua(t);break;case 5:So(t);var c=ko(xo.current);if(l=t.type,null!==i&&null!=t.stateNode)ca(i,t,l,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=ko(bo.current);if(bi(t)){i=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(i[j]=u,i[U]=d,l=void 0,c=f){case"iframe":case"object":En("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)En(te[f],i);break;case"source":En("error",i);break;case"img":case"image":case"link":En("error",i),En("load",i);break;case"form":En("reset",i),En("submit",i);break;case"details":En("toggle",i);break;case"input":wt(i,d),En("invalid",i),pr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!d.multiple},En("invalid",i),pr(p,"onChange");break;case"textarea":Yn(i,d),En("invalid",i),pr(p,"onChange")}for(l in fr(c,d),f=null,d)d.hasOwnProperty(l)&&(s=d[l],"children"===l?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&pr(p,l));switch(c){case"input":$e(i),_t(i,d,!0);break;case"textarea":$e(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(i.onclick=hr)}l=f,u.updateQueue=l,(u=null!==l)&&aa(t)}else{d=t,p=l,i=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(p)),s===Zn.html?"script"===p?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(p,{is:i.is}):(f=f.createElement(p),"select"===p&&(p=f,i.multiple?p.multiple=!0:i.size&&(p.size=i.size))):f=f.createElementNS(s,p),(i=f)[j]=d,i[U]=u,la(i,t,!1,!1),p=i;var h=c,m=dr(f=l,d=u);switch(f){case"iframe":case"object":En("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)En(te[c],p);c=d;break;case"source":En("error",p),c=d;break;case"img":case"image":case"link":En("error",p),En("load",p),c=d;break;case"form":En("reset",p),En("submit",p),c=d;break;case"details":En("toggle",p),c=d;break;case"input":wt(p,d),c=bt(p,d),En("invalid",p),pr(h,"onChange");break;case"option":c=Kn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=o({},d,{value:void 0}),En("invalid",p),pr(h,"onChange");break;case"textarea":Yn(p,d),c=Gn(p,d),En("invalid",p),pr(h,"onChange");break;default:c=d}fr(f,c),s=void 0;var v=f,y=p,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(y,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(y,w):"children"===s?"string"==typeof w?("textarea"!==v||""!==w)&&ir(y,w):"number"==typeof w&&ir(y,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(h,s):null!=w&&yt(y,s,w,m))}switch(f){case"input":$e(p),_t(p,d,!1);break;case"textarea":$e(p),Jn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+gt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?qn(c,!!d.multiple,p,!1):null!=d.defaultValue&&qn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=hr)}(u=yr(l,u))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?sa(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=ko(xo.current),ko(bo.current),bi(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[j]=u,(u=l.nodeValue!==i)&&aa(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[j]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Pa=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:To(),ua(t);break;case 10:Fi(t);break;case 9:case 14:break;case 17:Ur(t.type)&&Ar();break;case 18:break;default:a("156")}Pa=null}if(t=e,1===Na||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==Pa)return Pa;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=_a(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Qa(e){var t=Ui(e.alternate,e,Na);return e.memoizedProps=e.pendingProps,null===t&&(t=Ha(e)),Ea.current=null,t}function Ka(e,t){Ca&&a("243"),Ba(),Ca=!0;var n=Ta.current;Ta.current=ci;var r=e.nextExpirationTimeToWorkOn;r===Na&&e===Oa&&null!==Pa||(za(),Na=r,Pa=Kr((Oa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Pa&&!Sl();)Pa=Qa(Pa);else for(;null!==Pa;)Pa=Qa(Pa)}catch(t){if(Li=Ii=Di=null,Jo(),null===Pa)o=!0,Ml(t);else{null===Pa&&a("271");var i=Pa,l=i.return;if(null!==l){e:{var u=e,c=l,s=i,f=t;if(l=Na,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&null!==(m=m.memoizedState)){h=10*(1073741822-m.timedOutAt);break}"number"==typeof(m=f.pendingProps.maxDuration)&&(0>=m?p=0:(-1===p||m<p)&&(p=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(m=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),m){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((l=Yi(1073741823)).tag=Hi,Ji(s,l))),s.expirationTime=1073741823;break e}c=l;var v=(s=u).pingCache;null===v?(v=s.pingCache=new wa,m=new Set,v.set(d,m)):void 0===(m=v.get(d))&&(m=new Set,v.set(d,m)),m.has(c)||(m.add(c),s=Ya.bind(null,s,d,c),d.then(s,s)),-1===p?u=1073741823:(-1===h&&(h=10*(1073741822-to(u,l))-5e3),u=h+p),0<=u&&Ra<u&&(Ra=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}Ma=!0,f=ia(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Zi(u,l=xa(u,f,l));break e;case 1:if(p=f,h=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof h.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===La||!La.has(s)))){u.effectTag|=2048,u.expirationTime=l,Zi(u,l=ka(u,p,l));break e}}u=u.return}while(null!==u)}Pa=Ha(i);continue}o=!0,Ml(t)}}break}if(Ca=!1,Ta.current=n,Li=Ii=Di=null,Jo(),o)Oa=null,e.finishedWork=null;else if(null!==Pa)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Oa=null,Ma){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==l&&l<r)return eo(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Ra?(eo(e,r),(t=10*(1073741822-to(e,r)))<Ra&&(Ra=t),t=10*(1073741822-kl()),t=Ra-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function qa(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===La||!La.has(r)))return Ji(n,e=ka(n,e=ia(t,e),1073741823)),void Ja(n,1073741823);break;case 3:return Ji(n,e=xa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823)}n=n.return}3===e.tag&&(Ji(e,n=xa(e,n=ia(t,e),1073741823)),Ja(e,1073741823))}function Ga(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ca&&!Ua)r=Na;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Oa&&r===Na&&--r}return n===i.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Ya(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oa&&Na===n?Oa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&_l(e,n)))}function Xa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ja(e,t){null!==(e=Xa(e,t))&&(!Ca&&0!==Na&&t>Na&&za(),Zr(e,t),Ca&&!Ua&&Oa===e||_l(e,e.expirationTime),yl>vl&&(yl=0,a("185")))}function Za(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,il=null,al=0,ll=0,ul=!1,cl=null,sl=!1,fl=!1,dl=null,pl=i.unstable_now(),hl=1073741822-(pl/10|0),ml=hl,vl=50,yl=0,gl=null;function bl(){hl=1073741822-((i.unstable_now()-pl)/10|0)}function wl(e,t){if(0!==nl){if(t<nl)return;null!==rl&&i.unstable_cancelCallback(rl)}nl=t,e=i.unstable_now()-pl,rl=i.unstable_scheduleCallback(Cl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||Sl()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=hl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function kl(){return ol?ml:(Tl(),0!==al&&1!==al||(bl(),ml=hl),ml)}function _l(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(sl?fl&&(il=e,al=1073741823,Nl(e,1073741823,!1)):1073741823===t?Pl(1073741823,!1):wl(e,t))}function Tl(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&a("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}il=t,al=e}var El=!1;function Sl(){return!!El||!!i.unstable_shouldYield()&&(El=!0)}function Cl(){try{if(!Sl()&&null!==el){bl();var e=el;do{var t=e.expirationTime;0!==t&&hl<=t&&(e.nextExpirationTimeToWorkOn=hl),e=e.nextScheduledRoot}while(e!==el)}Pl(0,!0)}finally{El=!1}}function Pl(e,t){if(Tl(),t)for(bl(),ml=hl;null!==il&&0!==al&&e<=al&&!(El&&hl>al);)Nl(il,al,hl>al),Tl(),bl(),ml=hl;else for(;null!==il&&0!==al&&e<=al;)Nl(il,al,!1),Tl();if(t&&(nl=0,rl=null),0!==al&&wl(il,al),yl=0,gl=null,null!==dl)for(e=dl,dl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ul||(ul=!0,cl=e)}}if(ul)throw e=cl,cl=null,ul=!1,e}function Ol(e,t){ol&&a("253"),il=e,al=t,Nl(e,t,!1),Pl(1073741823,!1)}function Nl(e,t,n){if(ol&&a("245"),ol=!0,n){var r=e.finishedWork;null!==r?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Ka(e,n),null!==(r=e.finishedWork)&&(Sl()?e.finishedWork=r:Rl(e,r,t)))}else null!==(r=e.finishedWork)?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Ka(e,n),null!==(r=e.finishedWork)&&Rl(e,r,t));ol=!1}function Rl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===dl?dl=[r]:dl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gl?yl++:(gl=e,yl=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){Va(e,t)})}function Ml(e){null===il&&a("246"),il.expirationTime=0,ul||(ul=!0,cl=e)}function jl(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||ol||Pl(1073741823,!1)}}function Ul(e,t){if(sl&&!fl){fl=!0;try{return e(t)}finally{fl=!1}}return e(t)}function Al(e,t,n){sl||ol||0===ll||(Pl(ll,!1),ll=0);var r=sl;sl=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||ol||Pl(1073741823,!1)}}function Dl(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ur(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ur(u)){n=Lr(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Yi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Ba(),Ji(i,o),Ja(i,r),r}function Il(e,t,n,r){var o=t.current;return Dl(e,t,n,o=Ga(kl(),o),r)}function Ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function zl(e){var t=1073741822-25*(1+((1073741822-kl()+500)/25|0));t>=Sa&&(t=Sa-1),this._expirationTime=Sa=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Fl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Wl(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function $l(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Bl(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Ll(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Wl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Ll(i._internalRoot);l.call(e)}}Ul(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Ll(i._internalRoot)}function Vl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return $l(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Se=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=L(r);o||a("90"),Be(r),kt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&qn(e,!!n.multiple,t,!1)}},zl.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Fl;return Dl(e,t,null,n,r._onCommit),r},zl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},zl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Fl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Wl.prototype.render=function(e,t){var n=this._internalRoot,r=new Fl;return null!==(t=void 0===t?null:t)&&r.then(t),Il(e,n,null,r._onCommit),r},Wl.prototype.unmount=function(e){var t=this._internalRoot,n=new Fl;return null!==(e=void 0===e?null:e)&&n.then(e),Il(null,t,null,n._onCommit),n},Wl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Fl;return null!==(n=void 0===n?null:n)&&o.then(n),Il(t,r,e,o._onCommit),o},Wl.prototype.createBatch=function(){var e=new zl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=jl,je=Al,Ue=function(){ol||0===ll||(Pl(ll,!1),ll=0)};var Hl={createPortal:Vl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return $l(t)||a("200"),Bl(null,e,t,!0,n)},render:function(e,t,n){return $l(t)||a("200"),Bl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return $l(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),Bl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return $l(e)||a("40"),!!e._reactRootContainer&&(Ul(function(){Bl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Vl.apply(void 0,arguments)},unstable_batchedUpdates:jl,unstable_interactiveUpdates:Al,flushSync:function(e,t){ol&&a("187");var n=sl;sl=!0;try{return Za(e,t)}finally{sl=n,Pl(1073741823,!1)}},unstable_createRoot:function(e,t){return $l(e)||a("299","unstable_createRoot"),new Wl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Za(e)}finally{(sl=t)||ol||Pl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[D,I,L,O.injectEventPluginsByName,g,V,function(e){S(e,B)},Ne,Re,Pn,R]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Wr=Br(function(e){return t.onCommitFiberRoot(n,e)}),$r=Br(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:Ve.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:A,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Ql={default:Hl},Kl=Ql&&Hl||Ql;e.exports=Kl.default||Kl},function(e,t,n){"use strict";e.exports=n(23)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,u=!1;function c(){if(!l){var e=n.expirationTime;u?_():u=!0,k(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var u=r()}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!T())}finally{l=!1,r=o,null!==n?c():u=!1,f()}}var p,h,m=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){p=g(function(t){y(h),e(t)}),h=v(function(){b(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return m.now()};var k,_,T,E=null;if("undefined"!=typeof window?E=window:void 0!==e&&(E=e),E&&E._schedMock){var S=E._schedMock;k=S[0],_=S[1],T=S[2],t.unstable_now=S[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,P=function(e){if(null!==C)try{C(e)}finally{C=null}};k=function(e){null!==C?setTimeout(k,0,e):(C=e,setTimeout(P,0,!1))},_=function(){C=null},T=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,N=!1,R=-1,M=!1,j=!1,U=0,A=33,D=33;T=function(){return U<=t.unstable_now()};var I=new MessageChannel,L=I.port2;I.port1.onmessage=function(){N=!1;var e=O,n=R;O=null,R=-1;var r=t.unstable_now(),o=!1;if(0>=U-r){if(!(-1!==n&&n<=r))return M||(M=!0,w(z)),O=e,void(R=n);o=!0}if(null!==e){j=!0;try{e(o)}finally{j=!1}}};var z=function(e){if(null!==O){w(z);var t=e-U+D;t<D&&A<D?(8>t&&(t=8),D=t<A?A:t):A=t,U=e+D,N||(N=!0,L.postMessage(void 0))}else M=!1};k=function(e,t){O=e,R=t,j||0>t?L.postMessage(void 0):M||(M=!0,w(z))},_=function(){O=null,N=!1,R=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||T())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(12))},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=r(n(25)),a=r(n(36)),l=n(7);t.default=function(){return o.default.createElement(l.HashRouter,null,o.default.createElement("div",null,o.default.createElement("h1",{style:{paddingBottom:"5px",marginBottom:"1rem",borderBottom:"1px solid gray"}},"Greeting App"),o.default.createElement(l.Switch,null,o.default.createElement(l.Route,{path:"/greet/:greetingId",component:a.default}),o.default.createElement(l.Route,{path:"/",component:i.default}))))}},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(a,l)}u((r=r.apply(e,t||[])).next())})},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(0)),l=i(n(26)),u=i(n(35)),c=i(n(14)),s=i(n(15)),f=n(5),d="http://localhost:7000/greetings?slow";t.default=function(e){var t=s.default(d,[]),n=t[0],i=t[1],p=t[2];function h(t){return r(this,void 0,void 0,function(){var n,r,a;return o(this,function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),[4,fetch(d,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)})];case 1:if(201!==(r=o.sent()).status)throw new Error("Invalid status code: "+r.status);return[4,r.json()];case 2:return n=o.sent(),[3,4];case 3:return a=o.sent(),console.error("LOADING GREETINGS FAILED:",a),[3,4];case 4:return i(function(e){return e.concat([n])}),e.history.push("/"),[2]}})})}function m(){e.history.push("/add")}return a.default.createElement("div",null,a.default.createElement(f.Route,{exact:!0,path:"/",render:function(){return p?a.default.createElement(c.default,null):a.default.createElement(l.default,{greetings:n,onAdd:m})}}),a.default.createElement(f.Route,{path:"/add",render:function(){return a.default.createElement(u.default,{onSave:h})}}))}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=n(7);t.default=function(e){var t=e.greetings,n=e.onAdd,r=t.map(function(e){return o.default.createElement("tr",{key:e.id},o.default.createElement("td",null,e.name),o.default.createElement("td",null,e.greeting),o.default.createElement("td",null,o.default.createElement(i.Link,{to:"/greet/"+e.id},"Link")))});return o.default.createElement("div",null,o.default.createElement("table",null,o.default.createElement("thead",null,o.default.createElement("tr",null,o.default.createElement("th",null,"Name"),o.default.createElement("th",null,"Greeting"),o.default.createElement("th",null,"Link"))),o.default.createElement("tbody",null,r)),o.default.createElement("button",{onClick:n},"Add"))}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),o=(a(r),a(n(8))),i=a(n(30));a(n(31));function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=1073741823;t.default=function(e,t){var n,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(e){function n(){var t,r,o,i;l(this,n);for(var a=arguments.length,c=Array(a),s=0;s<a;s++)c[s]=arguments[s];return t=r=u(this,e.call.apply(e,[this].concat(c))),r.emitter=(o=r.props.value,i=[],{on:function(e){i.push(e)},off:function(e){i=i.filter(function(t){return t!==e})},get:function(){return o},set:function(e,t){o=e,i.forEach(function(e){return e(o,t)})}}),u(r,t)}return c(n,e),n.prototype.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,o=void 0;((i=n)===(a=r)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof t?t(n,r):s,0!=(o|=0)&&this.emitter.set(e.value,o))}var i,a},n.prototype.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=o.default.object.isRequired,n);var p=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=u(this,t.call.apply(t,[this].concat(i))),r.state={value:r.getValue()},r.onUpdate=function(e,t){0!=((0|r.observedBits)&t)&&r.setState({value:r.getValue()})},u(r,e)}return c(n,t),n.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?s:t},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?s:e},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():e},n.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},e.exports=t.default},function(e,t,n){"use strict";var r=n(29);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(12))},function(e,t,n){"use strict";var r=n(32);e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case c:return e;default:return t}}case v:case m:case i:return t}}}function g(e){return y(e)===d}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=v,t.Memo=m,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===p},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===m},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===u},t.isStrictMode=function(e){return y(e)===l},t.isSuspense=function(e){return y(e)===h}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0));t.default=function(e){var t=o.default.useState(e.initialName||""),n=t[0],r=t[1],i=o.default.useState(e.initialGreeting||""),a=i[0],l=i[1],u=o.default.useRef(null),c=!(n&&a);return o.default.createElement("div",null,o.default.createElement("input",{ref:u,onChange:function(e){return r(e.currentTarget.value)},value:n,name:"name",placeholder:"Name"}),o.default.createElement("input",{onChange:function(e){return l(e.currentTarget.value)},value:a,name:"greeting",placeholder:"Greeting"}),o.default.createElement("button",{onClick:function(){r(""),l(""),u.current&&u.current.focus()}},"Clear"),o.default.createElement("button",{disabled:c,onClick:function(){e.onSave({name:n,greeting:a})}},"Save"))}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=r(n(37)),a=r(n(14)),l=r(n(15)),u="http://localhost:7000/greetings",c="";t.default=function(e){var t=l.default(u+"/"+e.match.params.greetingId+c,null),n=t[0];return t[1],t[2]?o.default.createElement(a.default,null):n?o.default.createElement(o.default.Fragment,null,o.default.createElement("p",null,"Your personal greeting, ",o.default.createElement("b",null,n.name),": ",o.default.createElement("b",null,n.greeting)),o.default.createElement(i.default,{links:[{title:"Home",target:"/"},{title:"Add Greeting",target:"/add"}]})):o.default.createElement("h1",null,"No Greeting loaded (yet)")}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=n(7);t.default=i.withRouter(function(e){var t=e.links,n=e.history;return o.default.createElement(o.default.Fragment,null,t.map(function(e){return o.default.createElement("button",{key:e.target,onClick:function(){return n.push(e.target)}},e.title)}))})},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(0)),l=function(e){function t(t){var n=e.call(this,t)||this;return n.state={},n}return o(t,e),t.getDerivedStateFromError=function(e){return{error:e.toString()}},t.prototype.componentDidCatch=function(e,t){console.error("uups... we caught an error",e,t)},t.prototype.render=function(){var e=this;return this.state.error?a.default.createElement("div",null,a.default.createElement("h1",null,"An error occured!"),a.default.createElement("pre",null,this.state.error),a.default.createElement("button",{onClick:function(){return e.setState({error:null})}},"Try again")):this.props.children},t}(a.default.Component);t.default=l}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXNtL3JlYWN0LXJvdXRlci5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTG9hZGluZ0luZGljYXRvci50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL3VzZUFwaS50c3giLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvY3JlYXRlLXJlYWN0LWNvbnRleHQvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL3NyYy9tYWluLnRzeCIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvR3JlZXRpbmdDb250cm9sbGVyLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvR3JlZXRpbmdNYXN0ZXIudHN4Iiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL2NyZWF0ZS1yZWFjdC1jb250ZXh0L2xpYi9pbXBsZW1lbnRhdGlvbi5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9ndWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy9Vc2Vycy9uaWxzL2RldmVsb3AvamF2YXNjcmlwdC9yZWFjdC10cmFpbmluZy9ub2RlX21vZHVsZXMvZmJqcy9saWIvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8vVXNlcnMvbmlscy9kZXZlbG9wL2phdmFzY3JpcHQvcmVhY3QtdHJhaW5pbmcvbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vL1VzZXJzL25pbHMvZGV2ZWxvcC9qYXZhc2NyaXB0L3JlYWN0LXRyYWluaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dyZWV0aW5nRGV0YWlsLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvR3JlZXRpbmdEaXNwbGF5Q29udHJvbGxlci50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0xpbmtCdXR0b25CYXIudHN4Iiwid2VicGFjazovLy8uL3NyYy9FcnJvckhhbmRsZXIudHN4Il0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsInRoaXMiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiaXNQcm9kdWN0aW9uIiwicHJlZml4IiwiY29uZGl0aW9uIiwibWVzc2FnZSIsIkVycm9yIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImxpc3QiLCJpbmRleCIsImsiLCJwb3AiLCJyZXNvbHZlX3BhdGhuYW1lIiwidG8iLCJmcm9tIiwidW5kZWZpbmVkIiwidG9QYXJ0cyIsInNwbGl0IiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJjb25jYXQiLCJoYXNUcmFpbGluZ1NsYXNoIiwibGFzdCIsInVwIiwicGFydCIsInVuc2hpZnQiLCJyZXN1bHQiLCJqb2luIiwic3Vic3RyIiwiX3R5cGVvZiIsIml0ZXJhdG9yIiwib2JqIiwidmFsdWVfZXF1YWwiLCJ2YWx1ZUVxdWFsIiwiYSIsImIiLCJBcnJheSIsImlzQXJyYXkiLCJldmVyeSIsIml0ZW0iLCJhVHlwZSIsImFWYWx1ZSIsInZhbHVlT2YiLCJiVmFsdWUiLCJhS2V5cyIsImtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsInBhdGgiLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJSZWdFeHAiLCJ0ZXN0IiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJzbGljZSIsImNyZWF0ZVBhdGgiLCJsb2NhdGlvbiIsInNlYXJjaCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsInN0YXRlIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZXNtX2V4dGVuZHMiLCJkZWNvZGVVUkkiLCJlIiwiVVJJRXJyb3IiLCJsb2NhdGlvbnNBcmVFcXVhbCIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiY2FsbGJhY2siLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsInB1c2giLCJmaWx0ZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJmb3JFYWNoIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJjcmVhdGVIYXNoSGlzdG9yeSIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJjYW5Vc2VET00iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJwcm9wcyIsInRpbnlfaW52YXJpYW50X2VzbSIsInVhIiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwidHJhbnNpdGlvbk1hbmFnZXIiLCJzZXRTdGF0ZSIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiZXZlbnQiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsIm9rIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsImhyZWYiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2UiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkhhc2hDaGFuZ2VFdmVudCQxIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwiZ2V0SGFzaFBhdGgiLCJzdWJzdHJpbmciLCJyZXBsYWNlSGFzaFBhdGgiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWluIiwibWF4IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwiZW50cmllcyIsIm1hcCIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJzcGxpY2UiLCJjYW5HbyIsIk1lbW9yeVJvdXRlciIsIlByb21wdCIsIlJlZGlyZWN0IiwiUm91dGUiLCJSb3V0ZXIiLCJTdGF0aWNSb3V0ZXIiLCJTd2l0Y2giLCJnZW5lcmF0ZVBhdGgiLCJtYXRjaFBhdGgiLCJ3aXRoUm91dGVyIiwiY29udGV4dCIsImNyZWF0ZV9yZWFjdF9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJjcmVhdGVfcmVhY3RfY29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9pbmhlcml0c0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0IiwiaGlzdG9yeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwidGlueV9pbnZhcmlhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsInBhdGhfdG9fcmVnZXhwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJwYXRoX3RvX3JlZ2V4cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fX2RlZmF1bHQiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9leHRlbmRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJob2lzdF9ub25fcmVhY3Rfc3RhdGljc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fX2RlZmF1bHQiLCJQcm92aWRlciIsImRpc3BsYXlOYW1lIiwiQ29uc3VtZXIiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwidXJsIiwicGFyYW1zIiwiaXNFeGFjdCIsIl9wcm90byIsImNvbXBvbmVudERpZE1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJyZW5kZXIiLCJjaGlsZHJlbiIsIm1hdGNoIiwiQ29tcG9uZW50IiwiTGlmZWN5Y2xlIiwib25Nb3VudCIsImNvbXBvbmVudERpZFVwZGF0ZSIsInByZXZQcm9wcyIsIm9uVXBkYXRlIiwib25Vbm1vdW50IiwiX3JlZiR3aGVuIiwid2hlbiIsImNvbnRleHQkJDEiLCJtZXRob2QiLCJzZWxmIiwicmVsZWFzZSIsImNhY2hlIiwiY2FjaGVMaW1pdCIsImNhY2hlQ291bnQiLCJnZW5lcmF0b3IiLCJjb21waWxlIiwiY29tcGlsZVBhdGgiLCJwcmV0dHkiLCJjb21wdXRlZE1hdGNoIiwiX3JlZiRwdXNoIiwiY2FjaGUkMSIsImNhY2hlTGltaXQkMSIsImNhY2hlQ291bnQkMSIsIm9wdGlvbnMiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJlbmQiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwiZXhlYyIsInZhbHVlcyIsIm1lbW8iLCJfdGhpcyRwcm9wcyIsImNvbXBvbmVudCIsIkNoaWxkcmVuIiwiY291bnQiLCJpc0VtcHR5Q2hpbGRyZW4iLCJiYXNlIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiaGFuZGxlUHVzaCIsIm5hdmlnYXRlVG8iLCJoYW5kbGVSZXBsYWNlIiwiaGFuZGxlTGlzdGVuIiwiaGFuZGxlQmxvY2siLCJfdGhpcyRwcm9wcyRiYXNlbmFtZSIsImFkZEJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyIiwiX3RoaXMkcHJvcHMyJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyJGNvbnRleHQiLCJfdGhpcyRwcm9wczIkbG9jYXRpb24iLCJyZXN0IiwiZWxlbWVudCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJDIiwid3JhcHBlZENvbXBvbmVudFJlZiIsInJlbWFpbmluZ1Byb3BzIiwicm91dGVDb21wb25lbnRQcm9wcyIsInJlZiIsIldyYXBwZWRDb21wb25lbnQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIkJyb3dzZXJSb3V0ZXIiLCJIYXNoUm91dGVyIiwiTGluayIsIk5hdkxpbmsiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9pbmhlcml0c0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0IiwicmVhY3Rfcm91dGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJoaXN0b3J5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9leHRlbmRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJ0aW55X2ludmFyaWFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiaGFuZGxlQ2xpY2siLCJvbkNsaWNrIiwiZGVmYXVsdFByZXZlbnRlZCIsImJ1dHRvbiIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJpc01vZGlmaWVkRXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImlubmVyUmVmIiwiX3JlZiRhcmlhQ3VycmVudCIsImFyaWFDdXJyZW50IiwiX3JlZiRhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJzdHlsZVByb3AiLCJzdHlsZSIsImVzY2FwZWRQYXRoIiwiX3JlZjIiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJhcmlhLWN1cnJlbnQiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwib2Zmc2V0IiwibmV4dCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjaGFyQ29kZUF0IiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwib3B0cyIsImRhdGEiLCJlbmNvZGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJUeXBlRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwiaiIsImF0dGFjaEtleXMiLCJyZSIsImZsYWdzIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInZhbCIsInRvT2JqZWN0IiwiZyIsIkZ1bmN0aW9uIiwicmVhY3RfMSIsIl9faW1wb3J0RGVmYXVsdCIsImRlZmF1bHQiLCJpbml0aWFsVmFsdWUiLCJfYSIsInVzZVN0YXRlIiwiaXNMb2FkaW5nIiwic2V0TG9hZGluZyIsIl9iIiwic2V0RGF0YSIsInVzZUVmZmVjdCIsImZldGNoIiwic2VudCIsImpzb24iLCJjb25zb2xlIiwiZXJyb3IiLCJlcnJfMSIsImxvYWREYXRhIiwiX3JlYWN0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaW1wbGVtZW50YXRpb24yIiwiY3JlYXRlQ29udGV4dCIsIlJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCIkJHR5cGVvZiIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJyZWFjdF9kb21fMSIsIkFwcF8xIiwiRXJyb3JIYW5kbGVyXzEiLCJtb3VudE5vZGUiLCJnZXRFbGVtZW50QnlJZCIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJhYSIsImJhIiwiQSIsIkIiLCJoIiwiZiIsImZyYW1lc1RvUG9wIiwiY2EiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRCIsIkUiLCJyZWZzIiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSCIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSSIsImN1cnJlbnQiLCJKIiwiSyIsIkwiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJfb3duZXIiLCJOIiwiTyIsIlAiLCJRIiwia2V5UHJlZml4IiwiZnVuYyIsIlIiLCJVIiwiUyIsIlQiLCJkb25lIiwiPSIsIjoiLCJlc2NhcGUiLCJlYSIsImZhIiwiViIsImRhIiwiVyIsIlgiLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUZhY3RvcnkiLCJ2ZXJzaW9uIiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiWSIsIloiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImhhIiwiaWEiLCJvbkVycm9yIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInZhIiwid2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJwYXJlbnROb2RlIiwidGFnIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJ0b0xvd2VyQ2FzZSIsIlRhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWEiLCJWYSIsIldhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhhIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsInRleHRDb250ZW50IiwiZmIiLCJnYiIsIm5hdGl2ZUV2ZW50IiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwiZG9jdW1lbnRNb2RlIiwicGIiLCJxYiIsInJiIiwic2IiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwidGIiLCJ1YiIsImtleUNvZGUiLCJ2YiIsImRldGFpbCIsIndiIiwiemIiLCJsb2NhbGUiLCJ3aGljaCIsInhiIiwiY2hhciIsInliIiwiQWIiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsInRpbWUiLCJ3ZWVrIiwiTWIiLCJub2RlTmFtZSIsIk5iIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJPYiIsInNldEF0dHJpYnV0ZSIsIlBiIiwiUmIiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlFiIiwiU2IiLCJjaGVja2VkIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJrYyIsImxjIiwibWMiLCJuYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJyYyIsInNjIiwidGMiLCJwYyIsImlzTmFOIiwicWMiLCJvYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwidWMiLCJ2YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwid2MiLCJjb250cm9sbGVkIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkJjIiwiY2hhbmdlIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsImRldGFjaEV2ZW50IiwiS2MiLCJMYyIsImF0dGFjaEV2ZW50IiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiUWMiLCJ2aWV3IiwiUmMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiU2MiLCJnZXRNb2RpZmllclN0YXRlIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiWmMiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCIkYyIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiYWQiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsImJkIiwiY2QiLCJkZCIsImVkIiwiZWZmZWN0VGFnIiwiZmQiLCJoZCIsInNpYmxpbmciLCJnZCIsImlkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImpkIiwiY2xpcGJvYXJkRGF0YSIsImtkIiwibGQiLCJjaGFyQ29kZSIsIm1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIm5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIm9kIiwicGQiLCJkYXRhVHJhbnNmZXIiLCJxZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJyZCIsInNkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsImlzSW50ZXJhY3RpdmUiLCJ4ZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsInlkIiwiemQiLCJBZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsIkdkIiwiSGQiLCJJZCIsIkpkIiwiYm9keSIsIktkIiwiZmlyc3RDaGlsZCIsIkxkIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiTmQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlJkIiwiU2QiLCJzZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJvblNlbGVjdCIsIiRkIiwiWmQiLCJhZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiYmUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNlIiwiZGUiLCJlZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJmZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJnZSIsImhlIiwiaWUiLCJqZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwia2UiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJsZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwibWUiLCJuZSIsInRyaW0iLCJvZSIsInNldFByb3BlcnR5IiwicGUiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInFlIiwiaXMiLCJzZSIsImJsdXIiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsImF1dG9Gb2N1cyIsInhlIiwiX19odG1sIiwieWUiLCJzZXRUaW1lb3V0IiwiemUiLCJjbGVhclRpbWVvdXQiLCJBZSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJCZSIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiRGUiLCJFZSIsIlNldCIsIkZlIiwiR2UiLCJIZSIsIkllIiwiSmUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJLZSIsIkxlIiwiTWUiLCJOZSIsImdldENoaWxkQ29udGV4dCIsIk9lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlVlIiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJjb250ZXh0RGVwZW5kZW5jaWVzIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJWZSIsIlhlIiwiWWUiLCJaZSIsIiRlIiwiYWYiLCJiZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiY2YiLCJkaWRFcnJvciIsImVhcmxpZXN0UGVuZGluZ1RpbWUiLCJsYXRlc3RQZW5kaW5nVGltZSIsImRmIiwiZmYiLCJsYXRlc3RQaW5nZWRUaW1lIiwiZWFybGllc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0U3VzcGVuZGVkVGltZSIsImdmIiwibmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT24iLCJqZiIsImtmIiwiYmFzZVN0YXRlIiwidGYiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwibGYiLCJuZiIsIm1mIiwicGF5bG9hZCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwid2YiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJ4ZiIsInlmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiemYiLCJBZiIsIl9zdHJpbmdSZWYiLCJCZiIsIkNmIiwiTWFwIiwiZGVsZXRlIiwiRGYiLCJFZiIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwicXVldWUiLCJiYXNlVXBkYXRlIiwibmciLCJvZyIsInBnIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImRpc3BhdGNoIiwicWciLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJyZyIsImRlc3Ryb3kiLCJkZXBzIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInJlYWRDb250ZXh0IiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJIZyIsIklnIiwiSmciLCJLZyIsIkxnIiwiTWciLCJOZyIsIk9nIiwiUGciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJRZyIsIlJnIiwicGVuZGluZ0NvbnRleHQiLCJTZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIlRnIiwiVWciLCJ0aGVuIiwiaGYiLCJXZSIsImh5ZHJhdGUiLCJoaWRkZW4iLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJzdGFjayIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJvbmNsaWNrIiwicGgiLCJXZWFrU2V0IiwicWgiLCJyaCIsInNoIiwidGgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJ6aCIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJDZSIsImRpc3BsYXkiLCJ1aCIsImhpIiwiWGgiLCJoYXMiLCJhZGQiLCJCaCIsIldlYWtNYXAiLCJDaCIsIkRoIiwiRWgiLCJjb21wb25lbnREaWRDYXRjaCIsIkZoIiwiY29tcG9uZW50U3RhY2siLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlZoIiwiWmgiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJlZiIsIlBkIiwiWWgiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsImZpbmlzaGVkV29yayIsIiRoIiwiYWkiLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJiaSIsImNpIiwiZGkiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsImVpIiwiZmkiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImdpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfbm93IiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJCaSIsIkNpIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJEaSIsIkVpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIkZpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsIkdpIiwiSGkiLCJJaSIsIkppIiwiS2kiLCJMaSIsIk5pIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJPaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJQaSIsIl9pbnRlcm5hbFJvb3QiLCJRaSIsIlNpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiUmkiLCJUaSIsIk1pIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJWaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJUZSIsIm92ZXJyaWRlUHJvcHMiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJXaSIsIlhpIiwiZ2xvYmFsIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJHcmVldGluZ0NvbnRyb2xsZXJfMSIsIkdyZWV0aW5nRGlzcGxheUNvbnRyb2xsZXJfMSIsInJlYWN0X3JvdXRlcl9kb21fMSIsInBhZGRpbmdCb3R0b20iLCJtYXJnaW5Cb3R0b20iLCJib3JkZXJCb3R0b20iLCJHcmVldGluZ01hc3Rlcl8xIiwiR3JlZXRpbmdEZXRhaWxfMSIsIkxvYWRpbmdJbmRpY2F0b3JfMSIsInVzZUFwaV8xIiwicmVhY3Rfcm91dGVyXzEiLCJCQUNLRU5EX1VSTCIsImdyZWV0aW5ncyIsInNldEdyZWV0aW5ncyIsImFkZEdyZWV0aW5nIiwiZ3JlZXRpbmdUb0JlQWRkZWQiLCJoZWFkZXJzIiwiQWNjZXB0IiwiQ29udGVudC1UeXBlIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJuZXdHcmVldGluZyIsImN1cnJlbnRHcmVldGluZ3MiLCJvcGVuQWRkVmlldyIsIm9uQWRkIiwib25TYXZlIiwiZ3JlZXRpbmciLCJfcmVhY3QiLCJfcHJvcFR5cGVzMiIsIl9ndWQyIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJ3cml0YWJsZSIsInNldFByb3RvdHlwZU9mIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIl9Db21wb25lbnQiLCJfdGVtcCIsImhhbmRsZXJzIiwiZW1pdHRlciIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsImlzUmVxdWlyZWQiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl90aGlzMiIsIl9sZW4yIiwiX2tleTIiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIndhcm5pbmciLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsInRoYXRSZXR1cm5zIiwidGhhdFJldHVybnNGYWxzZSIsInRoYXRSZXR1cm5zVHJ1ZSIsInRoYXRSZXR1cm5zTnVsbCIsInRoYXRSZXR1cm5zVGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJhcnIiLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaW5pdGlhbE5hbWUiLCJzZXROYW1lIiwiaW5pdGlhbEdyZWV0aW5nIiwic2V0R3JlZXRpbmciLCJpbnB1dFJlZiIsInNhdmVEaXNhYmxlZCIsIm9uQ2hhbmdlIiwicGxhY2Vob2xkZXIiLCJMaW5rQnV0dG9uQmFyXzEiLCJTTE9XIiwiZ3JlZXRpbmdJZCIsImxpbmtzIiwidGl0bGUiLCJFcnJvckhhbmRsZXIiLCJfc3VwZXIiLCJfX2V4dGVuZHMiLCJpbmZvIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxh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TUFBT0EsRUFBTTNULGFBR3hCOC9DLEVBQUFscEQsVUFBQXkzQyxrQkFBQSxTQUFrQjE2QixFQUFZc3NDLEdBQzVCdnNDLFFBQVFDLE1BQU0sNkJBQThCQSxFQUFPc3NDLElBR3JESCxFQUFBbHBELFVBQUFzUSxPQUFBLGVBQUFYLEVBQUFoUCxLQUNFLE9BQUlBLEtBQUt1RSxNQUFNNlgsTUFFWGYsRUFBQUUsUUFBQTNVLGNBQUEsV0FDRXlVLEVBQUFFLFFBQUEzVSxjQUFBLCtCQUNBeVUsRUFBQUUsUUFBQTNVLGNBQUEsV0FBTTVHLEtBQUt1RSxNQUFNNlgsT0FDakJmLEVBQUFFLFFBQUEzVSxjQUFBLFVBQVE4TyxRQUFTLFdBQU0sT0FBQTFHLEVBQUtyRyxTQUFTLENBQUV5VCxNQUFPLFNBQU8sY0FLcERwYyxLQUFLbUgsTUFBTXlJLFVBRXRCMjRDLEVBM0JBLENBQTBDbHRDLEVBQUFFLFFBQU16TCIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJkaXN0L1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKGNvbmRpdGlvbikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bykge1xuICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG5cbiAgdmFyIHRvUGFydHMgPSB0byAmJiB0by5zcGxpdCgnLycpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gIH1pZiAobXVzdEVuZEFicyAmJiBmcm9tUGFydHNbMF0gIT09ICcnICYmICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpKSBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShiKSAmJiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeShmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGl0ZW0sIGJbaW5kZXhdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBhVHlwZSA9IHR5cGVvZiBhID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhKTtcbiAgdmFyIGJUeXBlID0gdHlwZW9mIGIgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGIpO1xuXG4gIGlmIChhVHlwZSAhPT0gYlR5cGUpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYVR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFWYWx1ZSA9IGEudmFsdWVPZigpO1xuICAgIHZhciBiVmFsdWUgPSBiLnZhbHVlT2YoKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICB2YXIgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgcmV0dXJuIGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiB2YWx1ZUVxdWFsKGFba2V5XSwgYltrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsdWVFcXVhbDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBwcmVmaXggKyAnKFxcXFwvfFxcXFw/fCN8JCknLCAnaScpLnRlc3QocGF0aCk7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluZGV4T2YoJyMnKTtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdjcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuUHJvdmlkZXIuZGlzcGxheU5hbWUgPSBuYW1lICsgXCIuUHJvdmlkZXJcIjtcbiAgY29udGV4dC5Db25zdW1lci5kaXNwbGF5TmFtZSA9IG5hbWUgKyBcIi5Db25zdW1lclwiO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dCgnUm91dGVyJyk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gUm91dGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07IC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG5cbiAgICBfdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkJDEpIHtcbiAgICAhY29udGV4dCQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dCQkMS5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dCQkMS5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xuICBQcm9tcHQucHJvcFR5cGVzID0ge1xuICAgIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhdGggPSBcIi9cIjtcbiAgfVxuXG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xuICAgIHByZXR0eTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0JCQxLmhpc3RvcnksXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0JCQxLnN0YXRpY0NvbnRleHQ7XG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cblxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2UHJvcHMudG8sIGxvY2F0aW9uKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikgb3B0aW9ucyA9IHtcbiAgICBwYXRoOiBvcHRpb25zXG4gIH07XG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JCQxKSB7XG4gICAgICAhY29udGV4dCQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQkMSwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuKHByb3BzKTtcblxuICAgICAgICBpZiAoY2hpbGRyZW4gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgIHZhciBwYXRoID0gX3RoaXMucHJvcHMucGF0aDtcbiAgICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogcHJvcHMubWF0Y2ggPyBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JCQxKSB7XG4gICAgICAhY29udGV4dCQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkJDEubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQkJDEubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4ocm91dGVDb21wb25lbnRQcm9wcykge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgcm91dGVDb21wb25lbnRQcm9wcywge1xuICAgICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMuZnVuY1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB3aXRoUm91dGVyLCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBSb3V0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgKiBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpbmssIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpbmsoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpbmsucHJvdG90eXBlO1xuXG4gIF9wcm90by5oYW5kbGVDbGljayA9IGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50LCBoaXN0b3J5KSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGljaykgdGhpcy5wcm9wcy5vbkNsaWNrKGV2ZW50KTtcblxuICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgIXRoaXMucHJvcHMudGFyZ2V0IHx8IHRoaXMucHJvcHMudGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICApIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIG1ldGhvZCA9IHRoaXMucHJvcHMucmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcbiAgICAgICAgbWV0aG9kKHRoaXMucHJvcHMudG8pO1xuICAgICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGlubmVyUmVmID0gX3RoaXMkcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgIHJlcGxhY2UgPSBfdGhpcyRwcm9wcy5yZXBsYWNlLFxuICAgICAgICB0byA9IF90aGlzJHByb3BzLnRvLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImlubmVyUmVmXCIsIFwicmVwbGFjZVwiLCBcInRvXCJdKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuXG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY29udGV4dC5sb2NhdGlvbikgOiB0bztcbiAgICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBjb250ZXh0Lmhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuaGFuZGxlQ2xpY2soZXZlbnQsIGNvbnRleHQuaGlzdG9yeSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhyZWY6IGhyZWYsXG4gICAgICAgIHJlZjogaW5uZXJSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTGluaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgdG9UeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pO1xuICB2YXIgaW5uZXJSZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogaW5uZXJSZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxuZnVuY3Rpb24gam9pbkNsYXNzbmFtZXMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGNsYXNzbmFtZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gY2xhc3NuYW1lcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gaTtcbiAgfSkuam9pbihcIiBcIik7XG59XG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5cblxuZnVuY3Rpb24gTmF2TGluayhfcmVmKSB7XG4gIHZhciBfcmVmJGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcbiAgICAgIGFyaWFDdXJyZW50ID0gX3JlZiRhcmlhQ3VycmVudCA9PT0gdm9pZCAwID8gXCJwYWdlXCIgOiBfcmVmJGFyaWFDdXJyZW50LFxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYkYWN0aXZlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyBcImFjdGl2ZVwiIDogX3JlZiRhY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBpc0FjdGl2ZVByb3AgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiXSk7XG5cbiAgdmFyIHBhdGggPSB0eXBlb2YgdG8gPT09IFwib2JqZWN0XCIgPyB0by5wYXRobmFtZSA6IHRvOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gIHZhciBlc2NhcGVkUGF0aCA9IHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgZXhhY3Q6IGV4YWN0LFxuICAgIHN0cmljdDogc3RyaWN0LFxuICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4oX3JlZjIpIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF9yZWYyLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoID0gX3JlZjIubWF0Y2g7XG4gICAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGxvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBpc0FjdGl2ZSA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSkgOiBjbGFzc05hbWVQcm9wO1xuICAgICAgdmFyIHN0eWxlID0gaXNBY3RpdmUgPyBfZXh0ZW5kcyh7fSwgc3R5bGVQcm9wLCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBfZXh0ZW5kcyh7XG4gICAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZTogc3R5bGUsXG4gICAgICAgIHRvOiB0b1xuICAgICAgfSwgcmVzdCkpO1xuICAgIH1cbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7fSwgTGluay5wcm9wVHlwZXMsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUm91dGUucHJvcFR5cGVzLmV4YWN0LFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzdHJpY3Q6IFJvdXRlLnByb3BUeXBlcy5zdHJpY3QsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJylcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvYWRpbmdJbmRpY2F0b3IoKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJTcGlubmVyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvdW5jZSBib3VuY2UxXCIgLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm91bmNlIGJvdW5jZTJcIiAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3VuY2UgYm91bmNlM1wiIC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbnR5cGUgVXNlQXBpUmVzdWx0PFQ+ID0gW1QsIFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFQ+PiwgYm9vbGVhbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUFwaTxUPih1cmw6IHN0cmluZywgaW5pdGlhbFZhbHVlOiBUKTogVXNlQXBpUmVzdWx0PFQ+IHtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0TG9hZGluZ10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IFJlYWN0LnVzZVN0YXRlKGluaXRpYWxWYWx1ZSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBhc3luYyBmdW5jdGlvbiBsb2FkRGF0YSgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAgIHNldERhdGEoaW5pdGlhbFZhbHVlKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xuICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBzZXREYXRhKGpzb24pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJMT0FESU5HIERBVEEgRkFJTEVEOlwiLCBlcnIpO1xuICAgICAgICBzZXREYXRhKGluaXRpYWxWYWx1ZSk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbG9hZERhdGEoKTtcbiAgfSwgW3VybF0pOyAvLyBNYWtlIHN1cmUsIHRoaXMgSG9vayBvbmx5IHJ1bnMgKGFmdGVyIGluaXRpYWwpIHdoZW4gVVJMIGNoYW5nZXNcblxuICByZXR1cm4gW2RhdGEsIHNldERhdGEsIGlzTG9hZGluZ107XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbXBsZW1lbnRhdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVDb250ZXh0IHx8IF9pbXBsZW1lbnRhdGlvbjIuZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGU6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgICByZW5kZXI6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZVxufTtcblxudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgICAnJCR0eXBlb2YnOiB0cnVlLFxuICAgIGNvbXBhcmU6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbUmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gICAgaWYgKFJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgICB9XG4gICAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcbiAgICAgICAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICAgICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcblxuaW1wb3J0IEFwcCBmcm9tIFwiLi9BcHBcIjtcbmltcG9ydCBFcnJvckhhbmRsZXIgZnJvbSBcIi4vRXJyb3JIYW5kbGVyXCI7XG5cbmNvbnN0IG1vdW50Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW91bnRcIik7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPEVycm9ySGFuZGxlcj5cbiAgICA8QXBwIC8+XG4gIDwvRXJyb3JIYW5kbGVyPixcbiAgbW91bnROb2RlXG4pO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IEdyZWV0aW5nQ29udHJvbGxlciBmcm9tIFwiLi9HcmVldGluZ0NvbnRyb2xsZXJcIjtcbmltcG9ydCBHcmVldGluZ0Rpc3BsYXlDb250cm9sbGVyIGZyb20gXCIuL0dyZWV0aW5nRGlzcGxheUNvbnRyb2xsZXJcIjtcbmltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyLCBSb3V0ZSwgU3dpdGNoIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkge1xuICByZXR1cm4gKFxuICAgIDxSb3V0ZXI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aDEgc3R5bGU9e3sgcGFkZGluZ0JvdHRvbTogXCI1cHhcIiwgbWFyZ2luQm90dG9tOiBcIjFyZW1cIiwgYm9yZGVyQm90dG9tOiBcIjFweCBzb2xpZCBncmF5XCIgfX0+XG4gICAgICAgICAgR3JlZXRpbmcgQXBwXG4gICAgICAgIDwvaDE+XG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvZ3JlZXQvOmdyZWV0aW5nSWRcIiBjb21wb25lbnQ9e0dyZWV0aW5nRGlzcGxheUNvbnRyb2xsZXJ9IC8+XG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgY29tcG9uZW50PXtHcmVldGluZ0NvbnRyb2xsZXJ9IC8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICAgPC9kaXY+XG4gICAgPC9Sb3V0ZXI+XG4gICk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBHcmVldGluZ01hc3RlciBmcm9tIFwiLi9HcmVldGluZ01hc3RlclwiO1xuaW1wb3J0IEdyZWV0aW5nRGV0YWlsIGZyb20gXCIuL0dyZWV0aW5nRGV0YWlsXCI7XG5pbXBvcnQgTG9hZGluZ0luZGljYXRvciBmcm9tIFwiLi9Mb2FkaW5nSW5kaWNhdG9yXCI7XG5pbXBvcnQgdXNlQXBpIGZyb20gXCIuL3VzZUFwaVwiO1xuaW1wb3J0IHsgTmV3R3JlZXRpbmcsIEdyZWV0aW5nIH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB7IFJvdXRlQ29tcG9uZW50UHJvcHMsIFJvdXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuXG5jb25zdCBCQUNLRU5EX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo3MDAwL2dyZWV0aW5ncz9zbG93XCI7XG5cbnR5cGUgR3JlZXRpbmdDb250cm9sbGVyUHJvcHMgPSBSb3V0ZUNvbXBvbmVudFByb3BzPHt9PjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JlZXRpbmdDb250cm9sbGVyKHByb3BzOiBHcmVldGluZ0NvbnRyb2xsZXJQcm9wcykge1xuICBjb25zdCBbZ3JlZXRpbmdzLCBzZXRHcmVldGluZ3MsIGlzTG9hZGluZ10gPSB1c2VBcGk8R3JlZXRpbmdbXT4oQkFDS0VORF9VUkwsIFtdKTtcblxuICBhc3luYyBmdW5jdGlvbiBhZGRHcmVldGluZyhncmVldGluZ1RvQmVBZGRlZDogTmV3R3JlZXRpbmcpIHtcbiAgICBsZXQgbmV3R3JlZXRpbmc6IEdyZWV0aW5nO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEJBQ0tFTkRfVVJMLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGdyZWV0aW5nVG9CZUFkZGVkKVxuICAgICAgfSk7XG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdGF0dXMgY29kZTogXCIgKyByZXNwb25zZS5zdGF0dXMpO1xuICAgICAgfVxuICAgICAgbmV3R3JlZXRpbmcgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTE9BRElORyBHUkVFVElOR1MgRkFJTEVEOlwiLCBlcnIpO1xuICAgIH1cbiAgICAvLyBhZGQgdGhlIG5ldyBncmVldGluZ3MgdG8gdGhlIGxpc3Qgb2YgYWxsIGdyZWV0aW5nc1xuICAgIC8vIChjcmVhdGUgYSBuZXcgYXJyYXkgZm9yIGltbXV0YWJpbGl0eSlcbiAgICAvLyB1c2UgdXBkYXRlciBmdW5jdGlvbiAoaW4gc2V0R3JlZXRpbmdzKSB0byBtYWtlIHN1cmVcbiAgICAvLyB3ZSBnZXQgdGhlIGxhdGVzdCAnZ3JlZXRpbmdzJyB2YWx1ZSBmcm9tIHN0YXRlXG4gICAgc2V0R3JlZXRpbmdzKGN1cnJlbnRHcmVldGluZ3MgPT4gWy4uLmN1cnJlbnRHcmVldGluZ3MsIG5ld0dyZWV0aW5nXSk7XG4gICAgcHJvcHMuaGlzdG9yeS5wdXNoKFwiL1wiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9wZW5BZGRWaWV3KCkge1xuICAgIHByb3BzLmhpc3RvcnkucHVzaChcIi9hZGRcIik7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8Um91dGVcbiAgICAgICAgZXhhY3RcbiAgICAgICAgcGF0aD1cIi9cIlxuICAgICAgICByZW5kZXI9eygpID0+XG4gICAgICAgICAgaXNMb2FkaW5nID8gKFxuICAgICAgICAgICAgPExvYWRpbmdJbmRpY2F0b3IgLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPEdyZWV0aW5nTWFzdGVyIGdyZWV0aW5ncz17Z3JlZXRpbmdzfSBvbkFkZD17b3BlbkFkZFZpZXd9IC8+XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAvPlxuICAgICAgPFJvdXRlIHBhdGg9XCIvYWRkXCIgcmVuZGVyPXsoKSA9PiA8R3JlZXRpbmdEZXRhaWwgb25TYXZlPXthZGRHcmVldGluZ30gLz59IC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHcmVldGluZyB9IGZyb20gXCIuL3R5cGVzXCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxudHlwZSBHcmVldGluZ01hc3RlclByb3BzID0ge1xuICBncmVldGluZ3M6IEdyZWV0aW5nW107XG4gIG9uQWRkKCk6IHZvaWQ7XG59O1xuXG5mdW5jdGlvbiBHcmVldGluZ01hc3Rlcihwcm9wczogR3JlZXRpbmdNYXN0ZXJQcm9wcykge1xuICBjb25zdCB7IGdyZWV0aW5ncywgb25BZGQgfSA9IHByb3BzO1xuICBjb25zdCBib2R5ID0gZ3JlZXRpbmdzLm1hcChncmVldGluZyA9PiAoXG4gICAgPHRyIGtleT17Z3JlZXRpbmcuaWR9PlxuICAgICAgPHRkPntncmVldGluZy5uYW1lfTwvdGQ+XG4gICAgICA8dGQ+e2dyZWV0aW5nLmdyZWV0aW5nfTwvdGQ+XG4gICAgICA8dGQ+XG4gICAgICAgIDxMaW5rIHRvPXtgL2dyZWV0LyR7Z3JlZXRpbmcuaWR9YH0+TGluazwvTGluaz5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgKSk7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDx0YWJsZT5cbiAgICAgICAgPHRoZWFkPlxuICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5OYW1lPC90aD5cbiAgICAgICAgICAgIDx0aD5HcmVldGluZzwvdGg+XG4gICAgICAgICAgICA8dGg+TGluazwvdGg+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgPC90aGVhZD5cbiAgICAgICAgPHRib2R5Pntib2R5fTwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtvbkFkZH0+QWRkPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdyZWV0aW5nTWFzdGVyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX2d1ZCA9IHJlcXVpcmUoJ2d1ZCcpO1xuXG52YXIgX2d1ZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ndWQpO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCdmYmpzL2xpYi93YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcblxuLy8gSW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwuXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArICgwLCBfZ3VkMi5kZWZhdWx0KSgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm92aWRlcik7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsLmFwcGx5KF9Db21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gICAgfVxuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cyA9IHZvaWQgMDtcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDsgLy8gTm8gY2hhbmdlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAlcycsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShfcmVhY3QuQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGVtcDIsIF90aGlzMiwgX3JldDI7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25zdW1lcik7XG5cbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9yZXQyID0gKF90ZW1wMiA9IChfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50Mi5jYWxsLmFwcGx5KF9Db21wb25lbnQyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzMiksIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9LCBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoeyB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKCkgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIF90ZW1wMiksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzMiwgX3JldDIpO1xuICAgIH1cblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuXG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCAvLyBTdWJzY3JpYmUgdG8gYWxsIGNoYW5nZXMgYnkgZGVmYXVsdFxuICAgICAgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcblxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgLy8gU3Vic2NyaWJlIHRvIGFsbCBjaGFuZ2VzIGJ5IGRlZmF1bHRcbiAgICAgIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShfcmVhY3QuQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcblxuXG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVSZWFjdENvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLy8gQGZsb3dcbid1c2Ugc3RyaWN0JztcblxudmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBnbG9iYWxba2V5XSA9IChnbG9iYWxba2V5XSB8fCAwKSArIDE7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJy4vZW1wdHlGdW5jdGlvbicpO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGVtcHR5RnVuY3Rpb247XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0KSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcblxuICB3YXJuaW5nID0gZnVuY3Rpb24gd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICsgJ21lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0LmluZGV4T2YoJ0ZhaWxlZCBDb21wb3NpdGUgcHJvcFR5cGU6ICcpID09PSAwKSB7XG4gICAgICByZXR1cm47IC8vIElnbm9yZSBDb21wb3NpdGVDb21wb25lbnQgcHJvcHR5cGUgY2hlY2suXG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yID4gMiA/IF9sZW4yIC0gMiA6IDApLCBfa2V5MiA9IDI7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5MiAtIDJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KHVuZGVmaW5lZCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZzsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBOZXdHcmVldGluZyB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbnR5cGUgR3JlZXRpbmdEZXRhaWxQcm9wcyA9IHtcbiAgaW5pdGlhbE5hbWU/OiBzdHJpbmc7XG4gIGluaXRpYWxHcmVldGluZz86IHN0cmluZztcblxuICBvblNhdmUobmV3R3JlZXRpbmc6IE5ld0dyZWV0aW5nKTogdm9pZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdyZWV0aW5nRGV0YWlsKHByb3BzOiBHcmVldGluZ0RldGFpbFByb3BzKSB7XG4gIGNvbnN0IFtuYW1lLCBzZXROYW1lXSA9IFJlYWN0LnVzZVN0YXRlKHByb3BzLmluaXRpYWxOYW1lIHx8IFwiXCIpO1xuICBjb25zdCBbZ3JlZXRpbmcsIHNldEdyZWV0aW5nXSA9IFJlYWN0LnVzZVN0YXRlKHByb3BzLmluaXRpYWxHcmVldGluZyB8fCBcIlwiKTtcblxuICBjb25zdCBpbnB1dFJlZiA9IFJlYWN0LnVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBzYXZlRGlzYWJsZWQgPSAhKG5hbWUgJiYgZ3JlZXRpbmcpO1xuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIHNldE5hbWUoXCJcIik7XG4gICAgc2V0R3JlZXRpbmcoXCJcIik7XG5cbiAgICBpZiAoaW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgLy8gbWFrZSBzdXJlLCAnY3VycmVudCcgaXMgYWN0dWFsbHkgc2V0XG4gICAgICAvLyAoaXQgd2lsbCBOT1QgYmUgc2V0IGluIHRlc3RzIHdpdGhvdXQgRE9NISlcbiAgICAgIGlucHV0UmVmLmN1cnJlbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzYXZlKCkge1xuICAgIHByb3BzLm9uU2F2ZSh7XG4gICAgICBuYW1lLFxuICAgICAgZ3JlZXRpbmdcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxpbnB1dFxuICAgICAgICByZWY9e2lucHV0UmVmfVxuICAgICAgICBvbkNoYW5nZT17ZXZlbnQgPT4gc2V0TmFtZShldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgdmFsdWU9e25hbWV9XG4gICAgICAgIG5hbWU9XCJuYW1lXCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJOYW1lXCJcbiAgICAgIC8+XG4gICAgICA8aW5wdXRcbiAgICAgICAgb25DaGFuZ2U9e2V2ZW50ID0+IHNldEdyZWV0aW5nKGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWUpfVxuICAgICAgICB2YWx1ZT17Z3JlZXRpbmd9XG4gICAgICAgIG5hbWU9XCJncmVldGluZ1wiXG4gICAgICAgIHBsYWNlaG9sZGVyPVwiR3JlZXRpbmdcIlxuICAgICAgLz5cblxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtyZXNldH0+Q2xlYXI8L2J1dHRvbj5cbiAgICAgIDxidXR0b24gZGlzYWJsZWQ9e3NhdmVEaXNhYmxlZH0gb25DbGljaz17c2F2ZX0+XG4gICAgICAgIFNhdmVcbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmtCdXR0b25CYXIgZnJvbSBcIi4vTGlua0J1dHRvbkJhclwiO1xuaW1wb3J0IExvYWRpbmdJbmRpY2F0b3IgZnJvbSBcIi4vTG9hZGluZ0luZGljYXRvclwiO1xuaW1wb3J0IHVzZUFwaSBmcm9tIFwiLi91c2VBcGlcIjtcbmltcG9ydCB7IFJvdXRlQ29tcG9uZW50UHJvcHMgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgeyBHcmVldGluZyB9IGZyb20gXCIuL3R5cGVzXCI7XG5jb25zdCBCQUNLRU5EX1VSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDo3MDAwL2dyZWV0aW5nc1wiO1xuXG50eXBlIEdyZWV0aW5nRGlzcGxheUNvbnRyb2xsZXJQcm9wcyA9IFJvdXRlQ29tcG9uZW50UHJvcHM8e1xuICBncmVldGluZ0lkOiBzdHJpbmc7XG59PjtcblxuY29uc3QgU0xPVyA9IFwiXCI7IC8vIFwiP3Nsb3dcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JlZXRpbmdEaXNwbGF5Q29udHJvbGxlcihwcm9wczogR3JlZXRpbmdEaXNwbGF5Q29udHJvbGxlclByb3BzKSB7XG4gIGNvbnN0IFtncmVldGluZywgXywgaXNMb2FkaW5nXSA9IHVzZUFwaTxHcmVldGluZyB8IG51bGw+KFxuICAgIGAke0JBQ0tFTkRfVVJMfS8ke3Byb3BzLm1hdGNoLnBhcmFtcy5ncmVldGluZ0lkfSR7U0xPV31gLFxuICAgIG51bGxcbiAgKTtcblxuICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgcmV0dXJuIDxMb2FkaW5nSW5kaWNhdG9yIC8+O1xuICB9XG4gIGlmICghZ3JlZXRpbmcpIHtcbiAgICByZXR1cm4gPGgxPk5vIEdyZWV0aW5nIGxvYWRlZCAoeWV0KTwvaDE+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHA+XG4gICAgICAgIFlvdXIgcGVyc29uYWwgZ3JlZXRpbmcsIDxiPntncmVldGluZy5uYW1lfTwvYj46IDxiPntncmVldGluZy5ncmVldGluZ308L2I+XG4gICAgICA8L3A+XG4gICAgICA8TGlua0J1dHRvbkJhclxuICAgICAgICBsaW5rcz17W3sgdGl0bGU6IFwiSG9tZVwiLCB0YXJnZXQ6IFwiL1wiIH0sIHsgdGl0bGU6IFwiQWRkIEdyZWV0aW5nXCIsIHRhcmdldDogXCIvYWRkXCIgfV19XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgd2l0aFJvdXRlciwgUm91dGVDb21wb25lbnRQcm9wcyB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbnR5cGUgTGlua0Rlc2NyaXB0aW9uID0ge1xuICB0YXJnZXQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbn07XG5cbnR5cGUgTGlua0J1dHRvbkJhclByb3BzID0gUm91dGVDb21wb25lbnRQcm9wczx7fT4gJiB7XG4gIGxpbmtzOiBMaW5rRGVzY3JpcHRpb25bXTtcbn07XG5cbi8vIFRoaXMgaXMgYSB2ZXJ5IHBvb3IgZXhhbXBsZSBmb3Igd2l0aFJvdXRlciBIT0MuLi5cbmZ1bmN0aW9uIExpbmtCdXR0b25CYXIocHJvcHM6IExpbmtCdXR0b25CYXJQcm9wcykge1xuICBjb25zdCB7XG4gICAgbGlua3MsIC8vIGNvbWVzIGZyb20gb3VyICdvd24nIHByb3BlcnRpZXMsIHBhc3NlZCB0byBMaW5rQnV0dG9uQmFyXG4gICAgaGlzdG9yeSAvLyBhZGRlZCBieSB3aXRoUm91dGVyIEhPQ1xuICB9ID0gcHJvcHM7XG5cbiAgLy8gbm90ZTogZHVlIHRvIHdyb25nIHR5cGUgZGVmcywgd2UgY2Fubm90IHJldHVybiBhbiBhcnJheSBoZXJlLFxuICAvLyBidXQgbXVzdCByZXR1cm4gYSBzaW5nbGUgZWxlbWVudFxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7bGlua3MubWFwKGxpbmsgPT4gKFxuICAgICAgICA8YnV0dG9uIGtleT17bGluay50YXJnZXR9IG9uQ2xpY2s9eygpID0+IGhpc3RvcnkucHVzaChsaW5rLnRhcmdldCl9PlxuICAgICAgICAgIHtsaW5rLnRpdGxlfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICkpfVxuICAgIDwvPlxuICApO1xufVxuXG4vLyBtYWtlIHN1cmUgTGlua0J1dHRvbkJhciByZWNlaXZlcyB0aGUgaGlzdG9yeSAoYW5kIG90aGVycylcbi8vIGZyb20gdGhlIFJvdXRlclxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihMaW5rQnV0dG9uQmFyKTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxudHlwZSBFcnJvckhhbmRsZXJQcm9wcyA9IHt9O1xudHlwZSBFcnJvckhhbmRsZXJTdGF0ZSA9IHtcbiAgZXJyb3I/OiBzdHJpbmcgfCBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXJyb3JIYW5kbGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PEVycm9ySGFuZGxlclByb3BzLCBFcnJvckhhbmRsZXJTdGF0ZT4ge1xuICBjb25zdHJ1Y3Rvcihwcm9wczogRXJyb3JIYW5kbGVyUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xuICB9XG5cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcihlcnJvcjogYW55KSB7XG4gICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yLnRvU3RyaW5nKCkgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZENhdGNoKGVycm9yOiBhbnksIGluZm86IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJ1dXBzLi4uIHdlIGNhdWdodCBhbiBlcnJvclwiLCBlcnJvciwgaW5mbyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUuZXJyb3IpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgxPkFuIGVycm9yIG9jY3VyZWQhPC9oMT5cbiAgICAgICAgICA8cHJlPnt0aGlzLnN0YXRlLmVycm9yfTwvcHJlPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5zZXRTdGF0ZSh7IGVycm9yOiBudWxsIH0pfT5UcnkgYWdhaW48L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9